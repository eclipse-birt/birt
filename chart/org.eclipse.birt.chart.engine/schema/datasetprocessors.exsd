<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.birt.chart.engine" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.birt.chart.engine" id="datasetprocessors" name="Contains definition of chart DataSet processors"/>
      </appInfo>
      <documentation>
         A dataset processor extension point specifies a mapping entry between a series type identified by a fully qualified implementing class name against a class that is capable of processing each row of data provided in its dataset. For further information, please refer to the documentation provided for each extension point schema element
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="datasetProcessor"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="datasetProcessor">
      <annotation>
         <documentation>
            A dataset processor extension point specifies a mapping entry between a series type identified by a fully qualified implementing class name against a class that is capable of processing each row of data provided in its dataset. Note that all dataset processor implementations must subclass the base dataset processor implementation provided i.e. org.eclipse.birt.chart.datafeed.DataSetAdapter and override methods as needed. A dataset processor is responsible for introspecting each row of custom data that may be provided in a dataset for use in series rendering.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="series" type="string">
            <annotation>
               <documentation>
                  The series type class name for which a dataset processor is being defined. Series class implementations are located at org.eclipse.birt.chart.model.type.impl.*

e.g.
org.eclipse.birt.chart.model.type.impl.BarSeriesImpl
               </documentation>
            </annotation>
         </attribute>
         <attribute name="processor" type="string">
            <annotation>
               <documentation>
                  The dataset processor implementation class name responsible for rendering the specific series type along with its data set. The dataset processor class is typically provided by an extension writer for complex rows of data containing multiple numeric values that may be mapped to a numeric scale.

e.g.
org.eclipse.birt.chart.datafeed.StockDataSetProcessorImpl
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         &lt;extension
         point=&quot;org.eclipse.birt.chart.engine.datasetprocessors&quot;&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.DataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.component.impl.SeriesImpl&quot;/&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.DataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.type.impl.BarSeriesImpl&quot;/&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.DataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.type.impl.LineSeriesImpl&quot;/&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.DataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.type.impl.PieSeriesImpl&quot;/&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.StockDataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.type.impl.StockSeriesImpl&quot;/&gt;
      &lt;datasetProcessor
            processor=&quot;org.eclipse.birt.chart.datafeed.DataSetProcessorImpl&quot;
            series=&quot;org.eclipse.birt.chart.model.type.impl.ScatterSeriesImpl&quot;/&gt;
   &lt;/extension&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         Please refer to the IDataSetProcessor interface javadocs in &lt;i&gt;org.eclipse.birt.chart.datafeed&lt;/i&gt; package.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The &lt;i&gt;org.eclipse.birt.chart.engine.extension&lt;/i&gt; plug-in defines DataSetProcessor extensions for the default series types.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2004-2005 Actuate Corporation.
All rights reserved. This program and the accompanying materials are made available under the  terms of the Eclipse Public License v2.0 which accompanies this distribution, and is available at http://www.eclipse.org/legal/epl-2.0.html
      </documentation>
   </annotation>

</schema>
