<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema targetNamespace="http://www.birt.eclipse.org/ChartModelAttribute"
	xmlns="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:chart="http://www.birt.eclipse.org/ChartModel"
	xmlns:component="http://www.birt.eclipse.org/ChartModelComponent"
	xmlns:data="http://www.birt.eclipse.org/ChartModelData" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout"
	xmlns:type="http://www.birt.eclipse.org/ChartModelType" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore">
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModel"
		schemaLocation="model.xsd" />
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelComponent"
		schemaLocation="component.xsd" />
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelData"
		schemaLocation="data.xsd" />
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelLayout"
		schemaLocation="layout.xsd" />
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelType"
		schemaLocation="type.xsd" />
	<xsd:simpleType name="AxisType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">The values of this type describe the type of values (numerical, textual, etc) and the type of 
scale (linear, logarithmic, etc) displayed along the axis.  Any new Axis type needs to be added 
here to be supported.
</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Linear"/>
			<xsd:enumeration value="Logarithmic"/>
			<xsd:enumeration value="Text"/>
			<xsd:enumeration value="DateTime"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ChartType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Chart types. Any new Chart type needs to be added 
here to be supported.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Pie"/>
			<xsd:enumeration value="Bar"/>
			<xsd:enumeration value="Line"/>
			<xsd:enumeration value="Combo"/>
			<xsd:enumeration value="Scatter"/>
			<xsd:enumeration value="Stock"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ChartDimension">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Chart dimensions. Any new Chart dimension 
type needs to be added here to be supported.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Two_Dimensional"/>
			<xsd:enumeration value="Two_Dimensional_With_Depth"/>
			<xsd:enumeration value="Three_Dimensional"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ActionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Action types (for interactivity with chart). 
Any new Action type needs to be added here to be supported.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="URL_Redirect"/>
			<xsd:enumeration value="Show_Tooltip"/>
			<xsd:enumeration value="Toggle_Visibility"/>
			<xsd:enumeration value="Invoke_Script"/>
			<xsd:enumeration value="Highlight"/>
			<xsd:enumeration value="CallBack"/>
			<xsd:enumeration value="Toggle_DataPoint_Visibility"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TriggerCondition">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Trigger
conditions (for interactivity with chart). Any new
condition needs to be added here to be supported.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Mouse_Hover">
				<xsd:annotation>
					<xsd:documentation>deprecated</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="Mouse_Click">
				<xsd:annotation>
					<xsd:documentation>deprecated</xsd:documentation>
				</xsd:annotation>
			</xsd:enumeration>
			<xsd:enumeration value="onclick" />
			<xsd:enumeration value="ondblclick" />
			<xsd:enumeration value="onmousedown" />
			<xsd:enumeration value="onmouseup" />
			<xsd:enumeration value="onmouseover" />
			<xsd:enumeration value="onmousemove" />
			<xsd:enumeration value="onmouseout" />
			<xsd:enumeration value="onfocus" />
			<xsd:enumeration value="onblur" />
			<xsd:enumeration value="onkeydown" />
			<xsd:enumeration value="onkeypress" />
			<xsd:enumeration value="onkeyup" />
			<xsd:enumeration value="accessibility" />
			<xsd:enumeration value="onload" />
			<xsd:enumeration value="onrightclick"></xsd:enumeration>


		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TriggerFlow">
		<xsd:annotation>
			<xsd:documentation>The TriggerFlow defines whether it reacts to the capturing or bubbling sequence 
Capture: the trigger’s action will be triggered in the capturing phase
Bubble (default): the trigger’s action will be triggered in the bubbling phase
BubbleAndStop: the trigger’s action will be triggered in the bubbling phase, and will stop the bubbling flow.
</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Capture"/>
			<xsd:enumeration value="Bubble"/>
			<xsd:enumeration value="BubbleAndStop"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Interactivity">
		<xsd:annotation>
			<xsd:documentation>Interactivity represents the interactivity settings for the chart.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Enable" type="xsd:boolean" default="true" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Attribute "Enable" specifies whether all interactive features are 
enabled, by default it's true.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="LegendBehavior" type="LegendBehaviorType" minOccurs="0" default="None">
				<xsd:annotation>
					<xsd:documentation>Three possible behaviours: None, Toggle the Serie visibility, Highlight the serie.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="LegendBehaviorType">
		<xsd:annotation>
			<xsd:documentation>This type defines the allowed values for Legend behaviors.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="None"/>
			<xsd:enumeration value="ToggleSerieVisibility"/>
			<xsd:enumeration value="HighlightSerie"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DataPointComponentType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for data point components.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Base_Value"/>
			<xsd:enumeration value="Orthogonal_Value"/>
			<xsd:enumeration value="Series_Value"/>
			<xsd:enumeration value="Percentile_Orthogonal_Value"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DateFormatType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines predefined date format types.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Long"/>
			<xsd:enumeration value="Short"/>
			<xsd:enumeration value="Medium"/>
			<xsd:enumeration value="Full"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DateFormatDetail">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the form of Date.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Date"/>
			<xsd:enumeration value="Date_Time"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="ScaleUnitType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				This type defines predefined date unit types for scale.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Seconds" />
			<xsd:enumeration value="Minutes" />
			<xsd:enumeration value="Hours" />
			<xsd:enumeration value="Days" />
			<xsd:enumeration value="Weeks" />
			<xsd:enumeration value="Months" />
			<xsd:enumeration value="Years" />
			<xsd:enumeration value="Quarters"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LeaderLineStyle">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the forms of leader lines.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Fixed_Length"/>
			<xsd:enumeration value="Stretch_To_Side"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="HorizontalAlignment">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Horizontal alignment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Left"/>
			<xsd:enumeration value="Center"/>
			<xsd:enumeration value="Right"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="VerticalAlignment">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines the allowed values for Vertical alignment.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Top"/>
			<xsd:enumeration value="Center"/>
			<xsd:enumeration value="Bottom"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="SortOption">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the options available for sorting.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Ascending"/>
			<xsd:enumeration value="Descending"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Anchor">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the options available for anchoring blocks.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="North"/>
			<xsd:enumeration value="North_East"/>
			<xsd:enumeration value="East"/>
			<xsd:enumeration value="South_East"/>
			<xsd:enumeration value="South"/>
			<xsd:enumeration value="South_West"/>
			<xsd:enumeration value="West"/>
			<xsd:enumeration value="North_West"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Stretch">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the options available for stretching (filling) block contents.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Horizontal"/>
			<xsd:enumeration value="Vertical"/>
			<xsd:enumeration value="Both"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Orientation">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the options available for orientation.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Horizontal"/>
			<xsd:enumeration value="Vertical"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Direction">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the options available for directions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Left_Right"/>
			<xsd:enumeration value="Top_Bottom"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LineStyle">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for line styles.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Solid"/>
			<xsd:enumeration value="Dashed"/>
			<xsd:enumeration value="Dotted"/>
			<xsd:enumeration value="Dash_Dotted"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="TickStyle">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for tick positions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Left"/>
			<xsd:enumeration value="Right"/>
			<xsd:enumeration value="Above"/>
			<xsd:enumeration value="Below"/>
			<xsd:enumeration value="Across"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Position">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for component (Label, Block etc.) positions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Above"/>
			<xsd:enumeration value="Below"/>
			<xsd:enumeration value="Left"/>
			<xsd:enumeration value="Right"/>
			<xsd:enumeration value="Inside"/>
			<xsd:enumeration value="Outside"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="IntersectionType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for axis intersection locations.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Min"/>
			<xsd:enumeration value="Max"/>
			<xsd:enumeration value="Value"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RiserType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for risers supported for Bar Series.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Rectangle"/>
			<xsd:enumeration value="Triangle"/>
			<xsd:enumeration value="Tube"/>
			<xsd:enumeration value="Cone"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="MarkerType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for markers supported for Line Series.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Crosshair"/>
			<xsd:enumeration value="Triangle"/>
			<xsd:enumeration value="Box"/>
			<xsd:enumeration value="Circle"/>
			<xsd:enumeration value="Icon"/>
			<xsd:enumeration value="Nabla"/>
			<xsd:enumeration value="Diamond"/>
			<xsd:enumeration value="Four_Diamonds"/>
			<xsd:enumeration value="Ellipse"/>
			<xsd:enumeration value="Semi_Circle"/>
			<xsd:enumeration value="Hexagon"/>
			<xsd:enumeration value="Rectangle"/>
			<xsd:enumeration value="Star"/>
			<xsd:enumeration value="Column"/>
			<xsd:enumeration value="Cross"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="LegendItemType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for the legend item type.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Series"/>
			<xsd:enumeration value="Categories"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RuleType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible rule types for use in Query objects.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Filter"/>
			<xsd:enumeration value="Suppress"/>
			<xsd:enumeration value="Link"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="StyledComponent">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible chart entities that can support styles.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Chart_All"/>
			<xsd:enumeration value="Chart_Title"/>
			<xsd:enumeration value="Chart_Background"/>
			<xsd:enumeration value="Plot_Background"/>
			<xsd:enumeration value="Legend_Background"/>
			<xsd:enumeration value="Legend_Label"/>
			<xsd:enumeration value="Axis_Title"/>
			<xsd:enumeration value="Axis_Label"/>
			<xsd:enumeration value="Axis_Line"/>
			<xsd:enumeration value="Series_Title"/>
			<xsd:enumeration value="Series_Label"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="DataType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible data type values associated with chart components.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Numeric"/>
			<xsd:enumeration value="DateTime"/>
			<xsd:enumeration value="Text"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="GroupingUnitType">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">
				This type represents the possible units for grouping
				data.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Seconds" />
			<xsd:enumeration value="Minutes" />
			<xsd:enumeration value="Hours" />
			<xsd:enumeration value="Days" />
			<xsd:enumeration value="Weeks" />
			<xsd:enumeration value="Months" />
			<xsd:enumeration value="Quarters" />
			<xsd:enumeration value="Years" />
			<xsd:enumeration value="String" />
			<xsd:enumeration value="StringPrefix" />
			<xsd:enumeration value="WeekOfMonth"></xsd:enumeration>
			<xsd:enumeration value="WeekOfYear"></xsd:enumeration>
			<xsd:enumeration value="DayOfWeek"></xsd:enumeration>
			<xsd:enumeration value="DayOfMonth"></xsd:enumeration>
			<xsd:enumeration value="DayOfYear"></xsd:enumeration>
			<xsd:enumeration value="WeekOfQuarter"></xsd:enumeration>
			<xsd:enumeration value="DayOfQuarter"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="UnitsOfMeasurement">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values of Units of Measurement.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Pixels"/>
			<xsd:enumeration value="Points"/>
			<xsd:enumeration value="Inches"/>
			<xsd:enumeration value="Centimeters"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="ActionValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">ActionValue represents the value of an action.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Label" type="component:Label"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ScriptValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">ScriptValue extends type ActionValue to devote itself to 
'Invoke_Script' actions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="Script" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Script" specifies the actual script string to be invoked.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="URLValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">URLValue extends type ActionValue to devote itself to 'URL_Redirect' actions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="BaseUrl" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Holds the base URL. This should include
								any static parameters like login
								information etc. and should NOT be
								encoded.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Target" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								This element defines the target value to
								be used for the browser.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="BaseParameterName"
						type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								This element specifies the name to be
								used for the parameter whose value will
								be picked up from the base axis (if
								any).
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ValueParameterName"
						type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								This element specifies the name to be
								used for the parameter whose value will
								be picked up from the current data
								value.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SeriesParameterName"
						type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								This element specifies the name to be
								used for the parameter whose value will
								be picked up from the current series.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Tooltip" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>
								The element defines a tooltip string to
								be displayed when mouse is over.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>

				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="TooltipValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">TooltipValue extends type ActionValue to devote itself to 'Show_Tooltip' actions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="Text" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Attribute "Text" specifies the tooltip
								text.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Delay" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Attribute "Delay" specifies the delay in
								milliseconds afer which the tooltip is
								to be shown.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="FormatSpecifier" type="FormatSpecifier">
						<xsd:annotation>
							<xsd:documentation>
								Attribute "FormatSpecifier" specifies the tooltip format.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="SeriesValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">SeriesValue extends type ActionValue to devote itself to 'Toggle_Visibility' actions.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="Name" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Name" specifies the name for the series definition.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="CallBackValue">
		<xsd:annotation>
			<xsd:documentation>CallBackValue extends the type ActionValue specific for callbacks.
		</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="Identifier" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>Attribute "Identifier" specify a call back identifier to be used in the call back routine.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AccessibilityValue">
		<xsd:annotation>
			<xsd:documentation>AccessibilityValue extends the type ActionValue specific for accessibilities.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ActionValue">
				<xsd:sequence>
					<xsd:element name="Text" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Attribute "Text" provides a short description of the accessibility.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Accessibility" type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Attribute "Accessibility" provides a full description of the accessibility.
</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Text">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Text is intended to encapsulate a string to be displayed on the chart.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Value" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					Holds the actual Text String.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Font" type="FontDefinition">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					Holds the Font Information to be used for this text element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Color" type="ColorDefinition">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					Defines the color to be used to render the text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="TextAlignment">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">TextAlignment specifies how will a text be horizontally and vertically aligned.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="horizontalAlignment" type="HorizontalAlignment" default="Left"/>
			<xsd:element name="verticalAlignment" type="VerticalAlignment" default="Top"/>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Location">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Location represents a 2D coordinate point within the chart.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="x" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>Attribute "x" specifies the x coordinate of the location.</xsd:documentation>
				</xsd:annotation></xsd:element>
			<xsd:element name="y" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>Attribute "y" specifies the y coordinate of the location.</xsd:documentation>
				</xsd:annotation></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Location3D">
		<xsd:annotation>
			<xsd:documentation>Location3D represents a 3D point with its coordinates.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Location">
				<xsd:sequence>
					<xsd:element name="z" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation>Attribute "z" specifies the z coordinate of the location.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:simpleType name="AngleType">
		<xsd:annotation>
			<xsd:documentation>This type defines the angle type of an Angle3D</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="None"/>
			<xsd:enumeration value="X"/>
			<xsd:enumeration value="Y"/>
			<xsd:enumeration value="Z"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Angle3D">
		<xsd:annotation>
			<xsd:documentation>Angle3D represents the angle in 3D coordinate system, it's composed 
of 3 angle values, each of which coresponds to an axis. </xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="XAngle" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>Attribute "XAngle" specifies the angle value corresponds to the 
x-axis in an 3D coordinate system.</xsd:documentation>
				</xsd:annotation></xsd:element>
			<xsd:element name="YAngle" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>Attribute "YAngle" specifies the angle value corresponds to the 
y-axis in an 3D coordinate system.</xsd:documentation>
				</xsd:annotation></xsd:element>
			<xsd:element name="ZAngle" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation>Attribute "ZAngle" specifies the angle value corresponds to the 
z-axis in an 3D coordinate system.</xsd:documentation>
				</xsd:annotation></xsd:element>
			<xsd:element name="Type" type="AngleType" default="None">
				<xsd:annotation>
					<xsd:documentation>Attribute "Type" specifies how will the angle values be used. It can be 
X, Y, Z or None, which indicate that the angle value is devoted to 
representing an angle corresponding to x,y or z axis or a 3D angle.
</xsd:documentation>
				</xsd:annotation></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Rotation3D">
		<xsd:annotation>
			<xsd:documentation>Rotation3D represents how a 3D object is rotated from its initial attitude.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Angles" type="Angle3D" minOccurs="0" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation>The list element "Angles" provides a series of Angle3D, each of 
which represents a rotation action, with the angle values indicate 
how many degrees the object will be rotated around the 
corresponding axis.</xsd:documentation>
				</xsd:annotation></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="ID">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type defines an ID type that should be used to uniquely identify instances 
of the various types in a group.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:pattern value="[A-Z]"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="Percentage">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents a percentage value.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:double">
			<xsd:minInclusive value="0.0"/>
			<xsd:maxInclusive value="100.0"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:simpleType name="RGBValue">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This type represents the possible values for color components in RGB Color model.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:int">
			<xsd:minInclusive value="0"/>
			<xsd:maxInclusive value="255"/>
		</xsd:restriction>
	</xsd:simpleType>
	<xsd:complexType name="Bounds">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Bounds represents the physical size and position of an element.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Left" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Left" indicates the distance of a chart element from 
the left edge of its container.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Top" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Top" indicates the distance of a chart element from 
the top edge of its container.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Width" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Width" indicates the width of the chart element.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Height" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Height" indicates the height of the chart element.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Size">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Size represents the 2D dimension of a chart element.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Height" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Height" specifies the height of an object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Width" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Width" specifies the width of an object.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Insets">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Insets represents a reserved blank area between the edges and 
the client area of a chart element (e.g. Block, Label... etc.).
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Top" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Top" specifies the distance in points of the client area from the top edge.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Left" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Left" specifies the distance in points of the client area from the left edge.
</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Bottom" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Bottom" specifies the distance in points of the client area from the bottom edge.
</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Right" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Right" specifies the distance in points of the client area from the right edge.
</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="LineAttributes">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">LineAttributes represents a holder of all settings for rendering 
a line in the chart graphic.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Style" type="LineStyle" default="Solid">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Style" specifies the line style, e.g. Solid, Dashed... etc.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Thickness" type="xsd:int" default="1">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Thickness" specifies the thickness of the line in points, 
by default it's 1.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Color" type="ColorDefinition">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Element "Color" specifies the color of the line.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Visible" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Visible" specifies whether or not the line is to be rendered.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Palette">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Palette  represents a palette of Fills.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Name" specifies the name that uniquely identifies this palette.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Entries" type="Fill" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The list element "Entries" represents the entries contained in the palette.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Fill">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Fill represents the information about how to fill a graphic element in a chart.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Type" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Type" specifies the type of the Fill.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="MultipleFill">
		<xsd:annotation>
			<xsd:documentation>MultipleFill extends type Fill to represent a pre-defined series 
of possible Fills, one of which will be selected to fill an chart 
element due to a certain condition. For example, the color of 
the increasing datapoints in a Stock Chart is different with the 
decreasing ones.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Fill">
				<xsd:sequence>
					<xsd:element name="Fills" type="Fill" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>The list element "Fills" represent the pre-defined candidates of Fill.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="ColorDefinition">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">ColorDefinition extends the type Fill to devote itself to representing a ARGB color. </xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Fill">
				<xsd:sequence>
					<xsd:element name="Transparency" type="xsd:int" default="255">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Transparency" specifies the transparency for the 
color, by default it's 255.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Red" type="RGBValue">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Red" specifies the red component for the color.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Green" type="RGBValue">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Green" specifies the green component for the color.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Blue" type="RGBValue">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Blue" specifies the blue component for the color.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Gradient">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Gradient extends type Fill specialized to represent a two-color gradient.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Fill">
				<xsd:sequence>
					<xsd:element name="StartColor" type="ColorDefinition">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "StartColor" specifies the start color of the gradient.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EndColor" type="ColorDefinition">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "EndColor" specifies the end color of the gradient.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Direction" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Direction" represents an angle in degree, which specifies 
the direction of  the gradient. e.g. If Direction is 45, the Gradient is 
at an angle of 45 degrees to vertical. With start color being on the left.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Cyclic" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Cyclic" specifies whether the gradient is cyclic or linear.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Transparency" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Transparency" specifies the transparency for the gradient.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="Image">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Image extends Fill specialized to represent an image.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Fill">
				<xsd:sequence>
					<xsd:element name="URL" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								The string attribute "URL" specifies the
								URL for the image.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="source" type="ImageSourceType">
						<xsd:annotation>
							<xsd:documentation>The string attribute "source" specifies the source of the URL.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="EmbeddedImage">
		<xsd:annotation>
			<xsd:documentation>EmbeddedImage extends type Image to devote itself to representing 
an embedded image, by which the image data will be encoded into a string.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Image">
				<xsd:sequence>
					<xsd:element name="Data" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>The string attribute "Data" provides the encoded image data for the image.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FontDefinition">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">FontDefinition holds all information about a certain font used by chart.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Name" specifies the name of the font.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Size" type="xsd:float">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Size" specifies the font size.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Bold" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Bold" specifies if the font is bold.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Italic" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Italic" specifies if the font is italic.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Strikethrough" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Strikethrough" specifies if the words are displayed with 
a horizontal line through the center of them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Underline" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Underlined" specifies if the words are displayed with 
a horizontal line under them.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="WordWrap" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "WordWrap" specifies if the wordwrap feature is enabled.					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Alignment" type="TextAlignment">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Element "Alignment" specifies how the text is horizontally and vertically 
aligned to its rendering area. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Rotation" type="xsd:double">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Rotation" represents an angle in degree, which specifies  
how much is the text rotated in counter-clockwise direction.

					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="FormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">FormatSpecifier specifies how to format the output text of a value.</xsd:documentation>
		</xsd:annotation>
	</xsd:complexType>
	<xsd:complexType name="DateFormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">DateFormatSpecifier extends the type FormatSpecifier to devote 
itself to formating text output of a date/time value.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="FormatSpecifier">
				<xsd:sequence>
					<xsd:element name="Type" type="DateFormatType" default="Long">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Type" specifies the DateFormatType, its candidates 
are Long, Short, Medium and Full.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Detail" type="DateFormatDetail" default="Date">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Detail" specifies whether the value to be formatted 
should be treated as date ore datetime.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="JavaDateFormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">JavaDateFormatSpecifier extends FormatSpecifier specialized to 
represent a java DateFormat instance.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="FormatSpecifier">
				<xsd:sequence>
					<xsd:element name="Pattern" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Pattern" specifies the pattern string used for establishing 
a DateFormat instance.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="NumberFormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">NumberFormatSpecifier extends FormatSpecifier specially for 
formatting numeric values.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="FormatSpecifier">
				<xsd:sequence>
					<xsd:element name="Prefix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Prefix" specifies the prefix of the output text.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Suffix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Suffix" specifies the suffix of the output text.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Multiplier" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Multiplier" specifies the multiplier by which a numeric value 
will be multiplied before being formatted.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="FractionDigits" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "FractionDigits" specifies the number of fractional 
digits to be shown.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="JavaNumberFormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">JavaNumberFormatSpecifier extends FormatSpecifier devotedly 
to represent an instance of  NumberFormat.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="FormatSpecifier">
				<xsd:sequence>
					<xsd:element name="Pattern" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Pattern" specifies the pattern string used to establish an instance 
of NumberFormat.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Multiplier" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "Multiplier" specifies the multiplier, by which a nummeric 
value will be multiplied before being formatted.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="FractionNumberFormatSpecifier">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">FractionNumberFormatSpecifier extends type FormatSpecifier 
and is specialized for displaying nummeric value as fraction number.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="FormatSpecifier">
				<xsd:sequence>
					<xsd:element name="Precise" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Attribute "Precies" specifies if the fraction result is precise with the decimal.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="FractionDigits" type="xsd:int">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Attribute "FractionDigits" specifies the fixed length of the 
denominator when in imprecise mode.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Numerator" type="xsd:double">
						<xsd:annotation>
							<xsd:documentation>Attribute "Numerator" specifies a fixed numerator for the fraction 
result when in imprecise mode. Zero means no effect. This setting 
will take the precedence than the FractionDigits setting.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Prefix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>Attribute "Prefix" specifies the prefix of the result.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Suffix" type="xsd:string">
						<xsd:annotation>
							<xsd:documentation>Attribute "Suffix" specifies the suffix of the result.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Delimiter" type="xsd:string" default="/">
						<xsd:annotation>
							<xsd:documentation>Attribute "Delimiter" specifies the string as the fraction stroke, by default it'is "/".</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<xsd:complexType name="AxisOrigin">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">AxisOrigin represents the intersection point for an axis.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Type" type="IntersectionType" default="Min">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Type"  specifies the position of origin on the axis, its candidates 
min, max and value indicate respectively that the origin is at the start or 
end point of the axis or at the position determined by the element "Value" 
of the AxisOrigin. 
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Value" type="data:DataElement">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Element "Value" specifies the actual value of the axis origin to determin 
its posision on the axis in case that the type attribute is set to "value".
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Marker">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">Marker represents the value marker for a line or scatter series.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Type" type="MarkerType"
				default="Crosshair">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Type" specifies the type of marker, e.g. Crosshair, 
Triangle, Box... etc.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Size" type="xsd:int">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Size" specifies the size of the marker in points.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Visible" type="xsd:boolean">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Visible" specifies whether the marker is to be rendered.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Fill" type="Fill" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Attribute "Fill" specifies the fill used to render the marker.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="IconPalette" type="Palette"
				minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>
						Deprecated. Use Fill property instead. This is
						kept just to maintain compatibility with old
						models.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>

			<xsd:element name="Outline" type="LineAttributes" maxOccurs="1" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Element "Outline" specifies the outline of marker.</xsd:documentation>
				</xsd:annotation></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DataPoint">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">DataPoint holds the settings for establishing the label text of a series' datapoints.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Components" type="DataPointComponent" maxOccurs="unbounded">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">The list element "Components" specifies the data components (values) 
used for establishing the label text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Prefix" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Prefix" specifies the prefix of the label text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Suffix" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Suffix" specifies the prefix of the label text.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Separator" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Separator" specifies the separator used to separate 
different components.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="DataPointComponent">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">DataPointComponent represents the data value being used for 
establishing the label text of a series' datapoint.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Type" type="DataPointComponentType" default="Base_Value">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Type" of type DataPointComponentType  specifies 
the source of  the data point component, its candidates are 
BaseValue, OrthogonalValue, SeriesValue and 
PercentileOrthogonalValue.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="FormatSpecifier" type="FormatSpecifier">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Element "FormatSpecifier" specifies the format specifier 
being used to format the text output of the data point 
component.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="OrthogonalType" type="xsd:string" default="">
				<xsd:annotation>
					<xsd:documentation>Attribute OrthogonalType specifies the orthogonal type of data 
point component, it's only valid when Type is OrthogonalValue.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="StyleMap">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">StyleMap represents the style map for the chart.  It includes a list of supported chart 
components and the styles associated with them.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="ComponentName" type="StyledComponent" default="Chart_All">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					Specifies the name of a chart component that can have styles associated with it.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Style" type="Style">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">
					Defines the style identifier(s) to be associated with this entry.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="Style">
		<xsd:annotation>
			<xsd:documentation>Style provides a holder for all properties that can be styled.</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Font" type="FontDefinition">
				<xsd:annotation>
					<xsd:documentation>Speicifies the font setting for this style.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Color" type="ColorDefinition">
				<xsd:annotation>
					<xsd:documentation>Specifies the font color for this style.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="BackgroundColor" type="ColorDefinition" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Specifies the background color for this style.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="BackgroundImage" type="Image" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Specifies the background image for this style.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Padding" type="Insets" minOccurs="0">
				<xsd:annotation>
					<xsd:documentation>Specifies the padding for this style.</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:complexType name="ExtendedProperty">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">ExtendedProperty is a name-value pair which is specialized for representing an extended property 
entry that is created to hold data for minor extensions to a chart.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:sequence>
			<xsd:element name="Name" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Name" specifies the unique name for the property entry.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
			<xsd:element name="Value" type="xsd:string">
				<xsd:annotation>
					<xsd:documentation xml:lang="en">Attribute "Value" specifies the value for the property entry.
					</xsd:documentation>
				</xsd:annotation>
			</xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	<xsd:simpleType name="LineDecorator">
		<xsd:annotation>
			<xsd:documentation>This type represents the possible line head decorators.</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:string">
			<xsd:enumeration value="Arrow"/>
			<xsd:enumeration value="Circle"/>
			<xsd:enumeration value="None"/>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:simpleType name="CursorType">
        <xsd:annotation>
        	<xsd:documentation>The cursor type defines standard cursor types which are supported by all devices, 
including SWT, Swing, SVG and HTML/Image.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">

			<xsd:enumeration value="Auto"></xsd:enumeration>
			<xsd:enumeration value="Crosshair"></xsd:enumeration>
			<xsd:enumeration value="Default"></xsd:enumeration>
			<xsd:enumeration value="Pointer"></xsd:enumeration>
			<xsd:enumeration value="Move"></xsd:enumeration>
			<xsd:enumeration value="Text"></xsd:enumeration>
			<xsd:enumeration value="Wait"></xsd:enumeration>
			<xsd:enumeration value="E-Resize"></xsd:enumeration>
			<xsd:enumeration value="NE-Resize"></xsd:enumeration>
			<xsd:enumeration value="NW-Resize"></xsd:enumeration>
			<xsd:enumeration value="N-Resize"></xsd:enumeration>
			<xsd:enumeration value="SE-Resize"></xsd:enumeration>
			<xsd:enumeration value="SW-Resize"></xsd:enumeration>
			<xsd:enumeration value="S-Resize"></xsd:enumeration>
			<xsd:enumeration value="W-Resize"></xsd:enumeration>
			<xsd:enumeration value="Custom"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="Cursor">
        <xsd:annotation>
        	<xsd:documentation>This type represents a mouse cursor being displayed in chart.  When mouse is moving over the 
hotspot area, the mouse cursor will become the specified cursor.</xsd:documentation>
        </xsd:annotation>
        <xsd:sequence>
        	<xsd:element name="Type" type="CursorType" maxOccurs="1"
        		minOccurs="1">
                <xsd:annotation>
                	<xsd:documentation>The type attribute indicates the cursor type.</xsd:documentation>
                </xsd:annotation>
        	</xsd:element>

        	<xsd:element name="Image" type="Image" maxOccurs="unbounded" minOccurs="0">
        		<xsd:annotation>
        			<xsd:documentation>The attribute stores custom cursor images, it might be image uri or embedded image.</xsd:documentation>
        		</xsd:annotation></xsd:element>
        </xsd:sequence>
	</xsd:complexType>

	<xsd:complexType name="EStringToStringMapEntry" ecore:instanceClass="java.util.Map$Entry">
		<xsd:sequence>
			<xsd:element name="Key" type="xsd:string">

			</xsd:element>
			<xsd:element name="Value" type="xsd:string"></xsd:element>
		</xsd:sequence>
	</xsd:complexType>
	
    <xsd:complexType name="MultiURLValues">
        <xsd:annotation>
        	<xsd:documentation>MultiURLValues extends ActionValue to devote itself to providing 
multiple hyperlink values for 'url_redirection' action, it enables 
multiple options for an 'url-redirection' action.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
            <xsd:extension base="ActionValue">
                <xsd:sequence>
                    <xsd:element name="URLValues" type="URLValue"
                        maxOccurs="unbounded" minOccurs="0">
                        <xsd:annotation>
                        	<xsd:documentation></xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>
                    <xsd:element name="Tooltip" type="xsd:string"></xsd:element>

                    <xsd:element name="PropertiesMap"
                        type="EStringToStringMapEntry" maxOccurs="unbounded"
                        minOccurs="0">
                        <xsd:annotation>
                        	<xsd:documentation>The map is used to store styles properties for hyperlink menu.</xsd:documentation>
                        </xsd:annotation>
                    </xsd:element>

                </xsd:sequence>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>

    <xsd:simpleType name="MenuStylesKeyType">
    	<xsd:restriction base="xsd:string">
    		<xsd:enumeration value="Menu"></xsd:enumeration>
    		<xsd:enumeration value="MenuItem"></xsd:enumeration>
    		<xsd:enumeration value="OnMouseOver"></xsd:enumeration>
    		<xsd:enumeration value="OnMouseOut"></xsd:enumeration>
    	</xsd:restriction>
    </xsd:simpleType>

    <xsd:complexType name="StringFormatSpecifier">
    	<xsd:annotation>
    		<xsd:documentation>StringFormatSpecifier extends type FormatSpecifier to devote 
itself to formatting a string value.
    		</xsd:documentation>
    	</xsd:annotation>
    	<xsd:complexContent>
    		<xsd:extension base="FormatSpecifier">
    			<xsd:sequence>
    				<xsd:element name="Pattern" type="xsd:string">
    					<xsd:annotation>
    						<xsd:documentation>Attribute "Pattern" specifies the format pattern.</xsd:documentation>
    					</xsd:annotation></xsd:element>
    			</xsd:sequence>
    		</xsd:extension>
    	</xsd:complexContent>
    </xsd:complexType>

	<xsd:simpleType name="PatternBitmap">
		<xsd:annotation>
			<xsd:documentation>
				This type represents the bitmap of a PatternFill.
    		</xsd:documentation>
		</xsd:annotation>
		<xsd:restriction base="xsd:long">
		</xsd:restriction>
	</xsd:simpleType>

	<xsd:complexType name="PatternImage">
		<xsd:annotation>
			<xsd:documentation>
				This type represents the pattern image.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="Image">
				<xsd:sequence>
					<xsd:element name="Bitmap" type="PatternBitmap">
						<xsd:annotation>
							<xsd:documentation>The 8x8 bitmap.</xsd:documentation>
						</xsd:annotation></xsd:element>
					<xsd:element name="ForeColor" type="ColorDefinition">
						<xsd:annotation>
							<xsd:documentation>The foreground color.</xsd:documentation>
						</xsd:annotation></xsd:element>
					<xsd:element name="BackColor" type="ColorDefinition">
						<xsd:annotation>
							<xsd:documentation>The background color.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>


	<xsd:simpleType name="ImageSourceType">
        <xsd:annotation>
        	<xsd:documentation>This property specifies how to reference the image URL. Static source means the image is using static URL. Report source means the image is using the embedded image from report. File source means the image is from resource files.</xsd:documentation>
        </xsd:annotation>
        <xsd:restriction base="xsd:string">
			<xsd:enumeration value="static"></xsd:enumeration>
			<xsd:enumeration value="report"></xsd:enumeration>
			<xsd:enumeration value="file"></xsd:enumeration>
		</xsd:restriction>
	</xsd:simpleType>
</xsd:schema>
