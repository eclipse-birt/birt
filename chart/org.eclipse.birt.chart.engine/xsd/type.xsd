<?xml version="1.0" encoding="UTF-8"?>
<!-- edited with XMLSPY v2004 rel. 4 U (http://www.xmlspy.com) by aa (ORiON) -->
<xsd:schema targetNamespace="http://www.birt.eclipse.org/ChartModelType" xmlns="http://www.birt.eclipse.org/ChartModelType" xmlns:attribute="http://www.birt.eclipse.org/ChartModelAttribute" xmlns:chart="http://www.birt.eclipse.org/ChartModel" xmlns:component="http://www.birt.eclipse.org/ChartModelComponent" xmlns:data="http://www.birt.eclipse.org/ChartModelData" xmlns:layout="http://www.birt.eclipse.org/ChartModelLayout" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModel" schemaLocation="model.xsd"/>
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelAttribute" schemaLocation="attribute.xsd"/>
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelComponent" schemaLocation="component.xsd"/>
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelData" schemaLocation="data.xsd"/>
	<xsd:import namespace="http://www.birt.eclipse.org/ChartModelLayout" schemaLocation="layout.xsd"/>
	<!--	Bar Series	-->
	<xsd:complexType name="BarSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that, during design time, holds the query data for Bar charts, and during run time, 
holds the value for each riser in the series.  When rendered, a riser extends from the x-axis to the 
value of each data point.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="Riser" type="attribute:RiserType" minOccurs="0" default="Rectangle">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the 'Riser' to be used for displaying the data values in the chart.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="RiserOutline" type="attribute:ColorDefinition" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Defines the color to be used for the Riser outline.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Pie Series	-->
	<xsd:complexType name="PieSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that, during design time, holds the query data for Pie charts, and during run time, 
holds the value for each data point in the pie that represents the series.  When rendered, each series is 
drawn as a complete pie, and each data point in that series defines the size of the pie's slices.  A pie chart
with multiple series will draw multiple pies.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="Explosion" type="xsd:int"
						minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Specifies the 'Explosion' value to be
								used while displaying the pie slices.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ExplosionExpression"
						type="xsd:string" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>
								Specifies an expression to determine if
								the explosion will be applied to each
								slice.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Title" type="component:Label">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Holds the properties for a series title.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="TitlePosition"
						type="attribute:Position" default="Above">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Holds the position property for a series
								title.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LeaderLineAttributes"
						type="attribute:LineAttributes">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Holds the attributes for leader lines.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LeaderLineStyle"
						type="attribute:LeaderLineStyle" default="Fixed_Length">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Specifies how the leader lines are to be
								shown.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LeaderLineLength"
						type="attribute:Percentage">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Length for the leader lines. Used only
								if style is 'FIXED_LENGTH'.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="SliceOutline"
						type="attribute:ColorDefinition" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
								Defines the color to be used for the
								slice outline.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Ratio" type="xsd:double"
						default="1">
						<xsd:annotation>
							<xsd:documentation>
								Defines the ratio(height/width) of the
								oval, 1 means it's a circle, 0 means
								stretch automatically.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Rotation" type="xsd:double"
						default="0">
						<xsd:annotation>
							<xsd:documentation>
								Defines the rotation of the pie, 0 means
								start drawing the first slice from the
								east.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Clockwise" type="xsd:boolean"
						default="false">
						<xsd:annotation>
							<xsd:documentation>
								Attribute "Clockwise" Specifies whether
								the pie slices are rendered in clockwise
								direction, by default they will be
								rendered in counter-clockwise direction.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>

					<xsd:element name="InnerRadius" type="xsd:double"
						default="0">
						<xsd:annotation>
							<xsd:documentation>
								Defines inner radius, if inner radius
								greater than 0, it should be a dount
								pie. If value of inner radius is between
								0 and 1, the inner radius is percentage
								value of width/height of pie, otherwise
								it is actual size.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="InnerRadiusPercent" type="xsd:boolean" default="true">
						<xsd:annotation>
							<xsd:documentation>Indicates if the value of inner radius is a percent value or actual value.</xsd:documentation>
						</xsd:annotation></xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Line Series	-->
	<xsd:complexType name="LineSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that, during design time, holds the query data for Line charts, and during run time, 
holds the value for each data point in the line.  When rendered, a line connects each data point.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="Markers" type="attribute:Marker" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the marker to be used for displaying the data point on the line in the chart.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Marker" type="attribute:Marker" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Deprecated. Use Markers property instead. This is kept just to maintain the compatibility with old models.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LineAttributes" type="attribute:LineAttributes" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the attributes for the line used to represent this series.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="PaletteLineColor" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Indicates if use the series palette color to draw the line instead of the color in LineAttributes</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Curve" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Indicates whether the line segments joining data points in the series are to be drawn as curves or as straight lines.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ShadowColor" type="attribute:ColorDefinition">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the color to be used for the shadow.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ConnectMissingValue" type="xsd:boolean" default="true" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies if connect the missing values in the line or just skip drawing.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Scatter Series	-->
	<xsd:complexType name="ScatterSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that holds data for Scatter Charts.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="LineSeries"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Stock Series	-->
	<xsd:complexType name="StockSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that holds data for Stock Charts.
			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="Fill" type="attribute:Fill" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Defines the fill to be used for the Candle.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="LineAttributes" type="attribute:LineAttributes" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the style to be used to display the lines for this series.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ShowAsBarStick" type="xsd:boolean" default="false" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies if show graph as bar-stick look.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="StickLength" type="xsd:int" default="5" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the length of the stick when show as bar-stick look.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Area Series	-->
	<xsd:complexType name="AreaSeries">
		<xsd:annotation>
			<xsd:documentation>This is a Series type that, during design time, holds the query data for Area charts, and during run time, 
holds the value for each data point in the series.  When rendered, a line connects each data point, and 
the area below the line is filled with the series color.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="LineSeries"/>
		</xsd:complexContent>
	</xsd:complexType>
	<!--	Dial Series-->
	<xsd:complexType name="DialSeries">
		<xsd:annotation>
			<xsd:documentation>This is a Series type that holds data for Dial Charts.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="Dial" type="component:Dial">
						<xsd:annotation>
							<xsd:documentation>Specifies the Dial for this series</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Needle" type="component:Needle">
						<xsd:annotation>
							<xsd:documentation>Defines the needle to be used in the Dial</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--                Gantt Series-->
	<xsd:complexType name="GanttSeries">
		<xsd:annotation>
			<xsd:documentation>This is a Series type that holds data for Gantt Charts.</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="component:Series">
				<xsd:sequence>
					<xsd:element name="StartMarker" type="attribute:Marker">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
Specifies the marker to be used for displaying the start data point on the line in the chart.
</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="StartMarkerPosition" type="attribute:Position" default="Above">
						<xsd:annotation>
							<xsd:documentation>Specifies the position of the start marker relative to the connection line start point.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EndMarker" type="attribute:Marker">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
Specifies the marker to be used for displaying the end data point on the line in the chart.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="EndMarkerPosition" type="attribute:Position" default="Above">
						<xsd:annotation>
							<xsd:documentation>Specifies the position of the end marker relative to the connection line end point.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="ConnectionLine" type="attribute:LineAttributes">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
Specifies the attributes for the line used to represent this series.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="Outline" type="attribute:LineAttributes">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
Specifies the attributes for the outline used to represent this series.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="OutlineFill" type="attribute:Fill" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">Defines the extra fill to be used with outline.
</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="UseDecorationLabelValue" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Specifies if use decoration value as the datapoint label value</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DecorationLabel" type="component:Label">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Holds the properties for the decoration label, which could be used to decorate the primary base Axis.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="DecorationLabelPosition" type="attribute:Position" default="Above">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Holds the position property for the decoration label.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="PaletteLineColor" type="xsd:boolean">
						<xsd:annotation>
							<xsd:documentation>Indicates if use the series palette color to draw the line instead of the color in ConnectionLine</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--                Bubble Series-->
	<xsd:complexType name="BubbleSeries">
		<xsd:annotation>
			<xsd:documentation xml:lang="en">This is a Series type that holds data for Bubble Charts.			</xsd:documentation>
		</xsd:annotation>
		<xsd:complexContent>
			<xsd:extension base="ScatterSeries">
				<xsd:sequence>
					<xsd:element name="AccLineAttributes" type="attribute:LineAttributes" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation xml:lang="en">
							Specifies the attributes for the line used to represent the acceleration line to the Bubble.
							</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="AccOrientation" type="attribute:Orientation" minOccurs="0" default="Horizontal">
						<xsd:annotation>
							<xsd:documentation>Specifies the orientation of the acceleration line.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
	<!--                Difference Series-->
	<xsd:complexType name="DifferenceSeries">
        <xsd:annotation>
        	<xsd:documentation>This is a Series type that, during design time, holds the query data for Difference charts, and during 
run time, holds the values for each data point in the series.  Each data point in a Difference Series
holds two values.  When rendered, a line connects each high value of each data point, another line
connects each low value of each data point, and the area between the high and low lines is filled with 
the series color.</xsd:documentation>
        </xsd:annotation>
        <xsd:complexContent>
			<xsd:extension base="AreaSeries">
				<xsd:sequence>
					<xsd:element name="NegativeMarkers" type="attribute:Marker" minOccurs="0" maxOccurs="unbounded">
						<xsd:annotation>
							<xsd:documentation>Specifies the marker to be used for displaying the data point on the negative line in the chart.</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
					<xsd:element name="NegativeLineAttributes" type="attribute:LineAttributes" minOccurs="0">
						<xsd:annotation>
							<xsd:documentation>Specifies the attributes for the negative line used to represent this series.
</xsd:documentation>
						</xsd:annotation>
					</xsd:element>
				</xsd:sequence>
			</xsd:extension>
		</xsd:complexContent>
	</xsd:complexType>
</xsd:schema>
