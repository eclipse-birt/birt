<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2007 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/06/2007
 *  Build script for project org.eclipse.birt.chart.web
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "ExportWAR" - Export the project as an deployable war format
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *        -Ddtp.home=<your DTP plugins source home>   [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 * 
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 *
-->

<project name="BIRT Chart Web Viewer" default="Jar" basedir=".">
	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.
		     eclipse.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	<property name="eclipse.home" location="." />
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />

	<!-- Compiler properties -->
	<property name="compilerArg" value="" />
	<property name="compileLevel" value="1.6" />

	<!-- Path properties -->
	<property name="module.name" value="org.eclipse.birt.chart.viewer" />
	<property name="birt.dir" value="${basedir}/WebContent" />
	<property name="bin" value="${birt.dir}/WEB-INF/classes" />
	<property name="jar.name" value="chart-viewer.jar" />
	<property name="war.name" value="chart-viewer-sample.war" />
	<property name="war.folder" value="ChartViewerSample" />
	<property name="src" value="${basedir}/src"/>
	<property name="integrate.dir" value="${eclipse.home}"/>
	<property name="baseLocation" value="${eclipse.home}"/>
	<property name="baseLocation.emf" value="${baseLocation}" />
    <property name="buildDirectory" value="${eclipse.home}"/>

	<!-- set platform related properties-->
	<condition property="basews" value="win32">
		<os family="windows" />
	</condition>
	<condition property="basews" value="gtk">
		<not>
			<os family="windows" />
		</not>
	</condition>

	<!-- build init -->
	<target name="init">

	</target>

	<!-- Prepare some extension and eclipse jars -->
	<target name="extensions">
		<echo message="copy resources from : ${integrate.dir}/plugins"/>
		<echo message="copy resources to : ${birt.dir}/WEB-INF/lib"/>
		
		<copy todir="${birt.dir}/WEB-INF/lib" failonerror="true" flatten="true">
			<fileset dir="${integrate.dir}/plugins">
				<include name="org.eclipse.birt.core_*.jar" />
				<include name="org.eclipse.birt.chart.engine_*.jar" />
				<include name="org.eclipse.birt.chart.engine.extension_*.jar" />
				<include name="org.eclipse.birt.chart.device.extension_*.jar" />
				<include name="org.eclipse.birt.chart.device.svg_*.jar" />
				<include name="org.eclipse.birt.chart.device.pdf_*.jar" />
				<include name="org.eclipse.birt.chart.examples.core_*.jar"/>
				<include name="org.mozilla.javascript_*.jar" />
				<!-- batik.pdf has been moved to Orbit -->
				<!--
				<include name="org.apache.batik.pdf_*/lib/*.jar" />
				<include name="org.apache.commons.codec_*/lib/*.jar" />
				-->
			</fileset>
			<fileset dir="${baseLocation}/plugins">
				<!-- orbit projects -->
				<include name="com.ibm.icu_*.jar" />
				<include name="javax.servlet_*.jar" />
				<include name="javax.servlet.jsp_*.jar" />
				<include name="org.apache.jasper_*.jar" />
				<include name="org.apache.commons.logging_*.jar" />
				<include name="org.apache.commons.el_*.jar"/>
				<include name="org.apache.xerces_*.jar"/>
				<include name="org.apache.xml.serializer_*.jar"/>
				<include name="org.apache.xml.resolver_*.jar"/>
				<include name="javax.xml_*.jar"/>
			</fileset>
			<fileset dir="${baseLocation.emf}/plugins">
				<include name="org.eclipse.emf.common_*.jar" />
				<include name="org.eclipse.emf.ecore.xmi_*.jar" />
				<include name="org.eclipse.emf.ecore_*.jar" />
			</fileset>
			<fileset dir="${buildDirectory}/plugins">
				<include name="org.eclipse.orbit.xml-apis-ext_*.jar"/>
				<include name="org.w3c.css.sac_*.jar"/>
				<include name="org.w3c.dom*.jar"/>
				<include name="org.apache.commons.codec_*.jar"/>
				<include name="org.apache.batik.*jar"/>				
				<exclude name="org.apache.batik.swing_*.jar"/>
				<exclude name="org.apache.batik.extension_*.jar"/>
			</fileset>
		</copy>
	</target>

	<!-- Precompile the jsp pages -->
	<target name="precompile" depends="init,extensions" description="Precompile jsp pages.">
		<echo message="compile bin: ${bin}"/>
		<echo message="compile src: ${src}"/>

		<mkdir dir="${bin}" />
		<javac destdir="${bin}" source="${compileLevel}" target="${compileLevel}" executable="${jvm16_home}/bin/javac" fork="yes">
			<classpath>
				<fileset dir="${birt.dir}/WEB-INF/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<src path="${src}" />
		</javac>
	</target>

	<!-- Compile source code and generate jar for this project-->
	<target name="Jar" depends="precompile" description="Build jar for web API.">
		<jar jarfile="${jar.name}" basedir="${bin}" />
		<delete dir="${bin}" />
	</target>

	<!-- Clean up web viewer -->
	<target name="Clean" depends="init" description="Clean the plug-in.">
		<delete includeemptydirs="true">
			<fileset dir="." includes="${jar.name}" />
			<fileset dir="." includes="${war.name}" />
		</delete>
		<delete dir="${export.dir}" />
		<delete dir="${javadoc.dir}" />
	</target>

	<!-- Export the project, including jar files and war files	
					 Parameters:
					 		- ${export.dir} target directory to put the plugin binaries
					 		- ${plugin.version} the version of plugin exported
	-->
	<target name="Export" depends="Jar">
		<property file="META-INF/MANIFEST.MF" />
		<property name="plugin.package" value="${module.name}" />
		<echo message="Export Chart Web Viewer version = ${Bundle-Version}" />

		<copy todir="${birt.dir}/WEB-INF/lib" failonerror="false">
			<fileset dir="." includes="${jar.name}" />
		</copy>

		<jar destfile="${export.dir}/${war.name}">
			<fileset dir="${birt.dir}">
				<include name="*.*" />
				<include name="*/**" />
				<!--
				Sevelets cause blank page issue in WebSphere.
				-->
				<exclude name="**/javax.servlet_*.jar"/>
				<exclude name="**/javax.servlet.jsp_*.jar"/>
				<!--
				Jasper causes classloading issue in JBoss.
				-->
				<exclude name="**/org.apache.jasper_*.jar"/>
				<!--
				Javax XML parser causes classloading issue in WebSphere/WebLogic.
				-->
				<exclude name="**/javax.xml_*.jar"/>
			</fileset>
		</jar>
	</target>

	<!-- public task UnitTest will not explicitly depend on complie, Top level script should call compile before calling UnitTest -->
	<!-- Run Unit test.
				 Parameters:
				 		- ${utest.report.dir} target directory to put the unit test report
	-->
	<target name="UnitTest" description="run all the unit tests" />


	<!-- Generate the JavaDoc.
		 Parameters:
		 		- ${javadoc.dir} target directory to put the java document
	 -->
	<target name="Javadoc" depends="init, extensions">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" author="true" version="true" use="true" windowtitle="BIRT Chart Viewer Project" source="${compileLevel}" executable="${jvm16_home}/bin/javac" packagenames="${module.name}.*">
			<classpath>
				<fileset dir="${birt.dir}/WEB-INF/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
			<packageset dir="src" defaultexcludes="yes" />
			<bottom>
				<![CDATA[<i>Copyright &#169;  2007 Actuate Corp. All rights reserved. </i>]]></bottom>
	</javadoc>
</target>

</project>
