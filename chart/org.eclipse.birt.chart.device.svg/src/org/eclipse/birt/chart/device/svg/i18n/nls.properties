#/*******************************************************************************
# * Copyright (c) 2021 Contributors to the Eclipse Foundation
# * 
# * This program and the accompanying materials are made available under the
# * terms of the Eclipse Public License 2.0 which is available at
# * https://www.eclipse.org/legal/epl-2.0/.
# * 
# * SPDX-License-Identifier: EPL-2.0
# * 
# * Contributors:
# *   See git history
# *******************************************************************************/
SVGRendererImpl.exception.UnableToWriteChartImage=Unable to write chart image to SVG output handle defined by {0}
SVGGraphics2D.drawImage.image=SVG Renderer -drawImage(Image arg0, AffineTransform arg1, ImageObserver arg2) - unsupported
SVGGraphics2D.drawImage.buffer=SVG Renderer -drawImage(BufferedImage arg0, BufferedImageOp arg1, int arg2,\tint arg3) - unsupported
SVGGraphics2D.drawRenderImage.RenderImage=SVG Renderer -drawRenderedImage(RenderedImage arg0, AffineTransform arg1) - unsupported
SVGGraphics2D.drawRenderableImage.RenderableImage=SVG Renderer - drawRenderableImage(RenderableImage arg0, AffineTransform arg1) - unsupported
SVGGraphics2D.drawString.StringInt=SVG Renderer - drawString(String arg0, int arg1, int arg2) - unsupported
SVGGraphics2D.drawString.StringFloat=SVG Renderer - drawString(String arg0, float arg1, float arg2) - unsupported
SVGGraphics2D.drawString.AttributeInt=SVG Renderer - drawString(AttributedCharacterIterator arg0, int arg1, int arg2) - unsupported
SVGGraphics2D.drawString.AttributeFloat=SVG Renderer - drawString(AttributedCharacterIterator arg0, float arg1, float arg2) - unsupported
SVGGraphics2D.hit.Rectangle=SVG Renderer - hit(Rectangle arg0, Shape arg1, boolean arg2) - unsupported
SVGGraphics2D.getDeviceConfig=SVG Renderer - GraphicsConfiguration getDeviceConfiguration() - unsupported
SVGGraphics2D.setComposite=SVG Renderer - setComposite(Composite arg0) - unsupported
SVGGraphics2D.getRenderingHint.Key=SVG Renderer - getRenderingHint(Key arg0) - unsupported
SVGGraphics2D.setRenderingHints.Map=SVG Renderer - setRenderingHints(Map arg0) - unsupported
SVGGraphics2D.ddRenderingHints.Map=SVG Renderer - ddRenderingHints(Map arg0) - unsupported
SVGGraphics2D.getRenderingHints=SVG Renderer - getRenderingHints() - unsupported
SVGGraphics2D.transform.AffineTransform=SVG Renderer - transform(AffineTransform arg0) - unsupported
SVGGraphics2D.setTransform.Affine=SVG Renderer - setTransform(AffineTransform arg0) - unsupported
SVGGraphics2D.getTransform=SVG Renderer - AffineTransform getTransform() - unsupported
SVGGraphics2D.getComposite=SVG Renderer - Composite getComposite() - unsupported
SVGGraphics2D.setPaintMode=SVG Renderer - setPaintMode() - unsupported
SVGGraphics2D.setXORModel.Color=SVG Renderer - setXORMode(Color arg0) - unsupported
SVGGraphics2D.getFontMetrics.Font=SVG Renderer - FontMetrics getFontMetrics(Font arg0) - unsupported
SVGGraphics2D.CopyArea.Int=SVG Renderer - CcopyArea(int arg0, int arg1, int arg2, int arg3, int arg4, int arg5) - unsupported
SVGGraphics2D.clearRect.Int=SVG Renderer - clearRect(int arg0, int arg1, int arg2, int arg3)  - unsupported
SVGGraphics2D.drawPolyline.Int=SVG Renderer - drawPolyline(int[] arg0, int[] arg1, int arg2) - unsupported
