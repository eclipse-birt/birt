<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.birt.report.engine">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.birt.report.engine" id="reportitemgeneration" name="Extended Item Generation-Time Support"/>
      </appInfo>
      <documentation>
         This extension point specifies how the new report item should be instantiated,  processed, and persisted at report generation time. In a server environment, the plugin registry uses this extension point registration to discover supported report item extensions.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <choice>
            <element ref="reportItem" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="reportItemExecutor" minOccurs="0"
maxOccurs="unbounded"/>
         </choice>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reportItem">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the unique name of the extended item, i.e.,
&quot;org.eclipse.birt.chart&quot; for chart extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the fully qualified name of the java class that implements
&lt;code&gt;IReportItemGeneration&lt;/code&gt;
               </documentation>
               <appInfo>
                  <meta.attribute kind="java"
basedOn=":org.eclipse.birt.report.engine.extension.IReportItemGeneration"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reportItemExecutor">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>

               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>

               </documentation>
               <appInfo>
                  <meta.attribute kind="java"
basedOn=":org.eclipse.birt.report.engine.extension.IReportItemExecutor"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is a sample usage of the reportItemGeneration extension point:

&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.eclipse.birt.report.engine.reportitemGeneration&quot; name=&quot;chart generation extension&quot;&gt;
  &lt;reportItem name=&quot;chart&quot; class=&quot;org.eclipse.birt.report.chartitem.ChartGeneration&quot; createReportQuery=&quot;item&quot;/&gt;
 &lt;/extension&gt;
 &lt;/pre&gt;
 &lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The value of the class attribute must be the fully qualified name of a class that implements &lt;code&gt;org.eclipse.birt.engine.extension.IReportItemGeneration&lt;/code&gt;. The interface provides the following functions:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;public void setModelObject(ExtendedItemHandle handle)&lt;/code&gt; ---- 
 passes the model object to the extension provider. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void onRowSets(IRowSet[] rowSets) throws BirtException&lt;/code&gt; ----
processes the extended item in report generation environment. The data that the report item needs is passed in through the rowSets array&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public boolean needSerialization() &lt;/code&gt; ----
returns whether the extended item has anything to be serialized to report document.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void serialize(OutputStream ostream) throws BirtException&lt;/code&gt; ---- 
serializes the extended item generation time state. The application developer should not assume that the output stream is a file stream. Engine only guarantees that a corresponding input stream is available for deserializing what is written by this function.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void Size getSize()&lt;/code&gt; ---- 
gets the size of the extended item. The size is a Dimension object. The width and height can only be in absolute units (inch, mm, etc.) or pixel. It can not be a relative size such as 150% or 1.2em. An extended item can obtain its design-time size information by querying DE. This function is needed because the actual size may not be the same as the design-time size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void finish()&lt;/code&gt; ---- 
performs cleanup jobs&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Chart as an extended item
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005 Actuate Corporation. All rights reserved. This program and 
the accompanying materials are made available under the terms of the Eclipse 
Public License v2.0 which accompanies this distribution, and is available at 
https://www.eclipse.org/legal/epl-2.0/&lt;br&gt;&lt;br&gt;

Contributors: Actuate Corporation - initial API and implementation
      </documentation>
   </annotation>

</schema>
