<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.birt.report.engine">
<annotation>
      <appInfo>
         <meta.schema plugin="org.eclipse.birt.report.engine" id="reportitempresentation" name="Extended Item Presentation-Time Support"/>
      </appInfo>
      <documentation>
         This extension point specifies how the new report item should be instantiated,  processed, and rendered at presentation (rendering) time. In a server environment, the plugin registry uses this extension point registration to discover supported report item extensions.
      </documentation>
   </annotation>

   <element name="extension">
      <complexType>
         <sequence>
            <element ref="reportItem" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  a fully qualified identifier of the target extension point
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  an optional identifier of the extension instance
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  an optional name of the extension instance
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reportItem">
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  the unique name of the extended item, i.e., &quot;org.eclipse.birt.chart&quot; for BIRT supplied chart extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  the java class that implements the &lt;code&gt;IReportItemPresentation&lt;/code&gt;
               </documentation>
            </annotation>
         </attribute>
         <attribute name="supportedFormats" type="string">
            <annotation>
               <documentation>
                  The supported rendering formats for this extended item. The value for this attribute is a comma-separated string, i.e., &quot;HTML,PDF,EXCEL&apos;, etc. The string is case-insensitive.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="examples"/>
      </appInfo>
      <documentation>
         The following is a sample usage of the reportItemPresentation extension point:

&lt;p&gt;
&lt;pre&gt;
&lt;extension point=&quot;org.eclipse.birt.report.engine.reportitempresentation&quot; 
name=&quot;chart presentation extension&quot;&gt;
  &lt;reportItem name=&quot;org.eclipse.birt.chart&quot; class=&quot;org.eclipse.birt.report.chartitem.ChartPresentation&quot; 
  supportedFormats=&quot;FO,HTML,PDF&quot;/&gt;
 &lt;/extension&gt;
 &lt;/pre&gt;
 &lt;p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="apiInfo"/>
      </appInfo>
      <documentation>
         The value of the class attribute must be the fully qualified name of a class that implements &lt;code&gt;org.eclipse.birt.engine.extension.IReportItemPresentation&lt;/code&gt;. The interface provides the following functions:

&lt;ul&gt;
&lt;li&gt;&lt;code&gt;public void setModelObject(ExtendedItemHandle handle)&lt;/code&gt; ---- 
 passes the model object to the extension provider. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void setResolution(int dpi)&lt;/code&gt; ---- 
passes the rendering environment resolution (dpi, i.e., dot per inch) to extension provider.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void setOutputFormat(String outputFormat)&lt;/code&gt; ---- 
passes the output format, i.e., HTMl, PDF, etc. to extension provider.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void setSupportedImageFormats(String supportedImageFormats)&lt;/code&gt; ---- 
passes the supported image formats in the rendering environments to the extension provider. Image formats are separated by semi-colon. For example, the argument could be JPG;PNG;BMP;SVG&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void setLocale(Locale locale)&lt;/code&gt; ---- passes the rendering locale to the extension provider.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public Object onRowSets(IRowSet[] rowSets) throws BirtException&lt;/code&gt; ---- 
processes the extended item in report presentation environment. The data that the report item needs is passed in through the rowSets array. The return value captures the presentation time output of the report item, and differs for different rendering primitives. &lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void deserialize(InputStream istream)&lt;/code&gt; ---- 
deserializes the report item generation time state&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public int getOutputType(String mimeType)&lt;/code&gt; ---- 
returns the output type, which could be one of the supported primitive, i.e., image, string, html segment, etc.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void Size getSize()&lt;/code&gt; ---- 
gets the size of the extended item. The size is a Dimension object. The width and height can only be in absolute units (inch, mm, etc.) or pixel. It can not be a relative size such as 150% or 1.2em. An extended item can obtain its design-time size information by querying DE. This function is needed because the actual size may not be the same as the design-time size.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;public void finish()&lt;/code&gt; ---- 
performs cleanup jobs&lt;/li&gt;&lt;p&gt;
&lt;/ul&gt;
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         Chart as an extended item
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright (c) 2005 Actuate Corporation. All rights reserved. This program and 
the accompanying materials are made available under the terms of the Eclipse 
Public License v2.0 which accompanies this distribution, and is available at 
https://www.eclipse.org/legal/epl-2.0/&lt;br&gt;&lt;br&gt;

Contributors: Actuate Corporation - initial API and implementation
      </documentation>
   </annotation>

</schema>
