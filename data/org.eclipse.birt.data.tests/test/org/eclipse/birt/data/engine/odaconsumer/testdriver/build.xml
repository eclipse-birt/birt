<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2008 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.report.data.oda.flatfile
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *		  -Ddtp.home=<your DTP plugins source home>  [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 * 
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->

<project name="BIRT Data Engine ODA Consumer Tester" default="build.jars" basedir=".">
	<description>IRT Data Engine ODA Consumer Tester</description>
	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.

		     eclipse.home
		     dtp.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	
	<!-- ===== Default value for public properties ============= -->
	<property name="plugin.version" value="2.0.0" />
	<property name="eclipse.home" location="." />
	<property name="dtp.home" location=".." />
	
 	<property name="dir.src" value="." />
 	<property name="dir.test" value="." />
 	<property name="dir.bin" value="bin" />
 	<property name="dir.lib" value="lib" />

	<property name="module.name" value="org.eclipse.birt.data.engine.odaconsumer.testdriver"/>
	<property name="project-jar.name" value="testDriver.jar" />
	<property name="core.dir" location="../../../../../../../../../org.eclipse.birt.core" />
	<property name="dtp.oda.dir" location="${dtp.home}/org.eclipse.datatools.connectivity.oda" />
 	<property name="dtp.oda.jar" value="oda.jar" />

	<path id="class.path">
		<pathelement path="${dir.bin}" />
<!--	<fileset dir="${core.dir}">
			<include name="core.jar"/>
			<include name="lib/*.jar"/>
		</fileset>
		<fileset dir="${core.dir}/lib">
			<include name="*.jar"/>
		</fileset>
-->
		<fileset dir="${birt.install.home}/eclipse/plugins">
			<include name="org.eclipse.birt.core_*.jar"/>
		</fileset>
<!--	<fileset dir="${dtp.oda.dir}">
			<include name="${dtp.oda.jar}"/>
		</fileset>		
-->
		<fileset dir="${dtp.install.home}/eclipse/plugins">
			<include name="org.eclipse.datatools.connectivity.oda_*.jar"/>
		</fileset>
	</path>
	

	<!-- Compile source code and generate jar for this project.
		 Input parameters:
		 	eclipse.home
		 	dtp.home
	-->
	<target name="build.jars" depends="compileSource">
		<jar destfile="${project-jar.name}">
			<fileset dir="${dir.bin}">
				<include name="**/*.class" />
				<include name="**/*.properties" />
			</fileset>
<!--			<zipfileset src="${dtp.oda.dir}/${dtp.oda.jar}" excludes="**/*.MF"/>
-->
		</jar>
	</target>
	
	<!-- Clean all objects created by this script -->
	<target name="clean" description="clean up">
		<!-- Delete the compiled files in ${dir.bin} -->
		<delete>
			<fileset dir="${dir.bin}" includes="*.class" />
		</delete>
		<!-- Delete the target jar file -->
		<delete file="${project-jar.name}" />
	</target>
		
	<target name="buildDependency">
<!--		<echo message="start call Jar task in ${dtp.oda.dir}"/>
		<echo message="dtp home= ${dtp.home}"/>
		<ant dir="${dtp.oda.dir}" antfile="buildAnt.xml" target="build.jars" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="end call Jar task in ${dtp.oda.dir}"/>
-->
	</target>
	
	<target name="compileSource" depends="buildDependency" description="compile the source ">
		<mkdir dir="${dir.bin}" />
		<javac srcdir="${dir.src}" 
			   destdir="${dir.bin}" 
			   encoding="utf-8" 
			   source="1.5" 
			   debug="true">			
			<classpath refid="class.path" />
		</javac>
	</target>

</project>

