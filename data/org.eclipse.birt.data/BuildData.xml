<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.data
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *        -Ddtp.home=<your DTP plugins source home>   [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->

<project name="BIRT Data Engine Project" default="Jar" basedir=".">
    <description>BIRT Data Engine Project.</description>
	
	<!-- set global properties for this build -->
    <!-- Public properties, used by public targets, top level build script will pass on the value 
	 	 at runtime. Properties will have there default value:
		     eclipse.home
		     dtp.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	
	<!-- ===== Default value for public properties ============= -->
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="api.javadoc.dir" location="docs/birt/api"/>
	<property name="export.dir" location="export" />

	<property name="eclipse.home" location="." />
	<property name="dtp.home" location=".." />
	
	<property name="core.dir" location="../org.eclipse.birt.core" />
	<property name="dtp.oda.dir" location="${dtp.home}/org.eclipse.datatools.connectivity.oda" />
	<property name="dtp.oda.consumer.dir" location="${dtp.home}/org.eclipse.datatools.connectivity.oda.consumer" />
	<property name="oda.jdbc.dir" location="../org.eclipse.birt.report.data.oda.jdbc" />
	<property name="js.dir" location="../org.mozilla.rhino" />
	<property name="derby.dir" location="../org.apache.derby.core" />
	<property name="module.name" value = "org.eclipse.birt.data" />
	<property name="src" location="src" />
	<property name="test.src" location="test" />
	<property name="testOdaDriver.dir" location="test/org\eclipse\birt\data\engine\odaconsumer\testdriver" />
	<property name="testOdaDriver.plugin.name" value="org.eclipse.birt.data.engine.odaconsumer.testdriver" />
	<property name="testBirtOdaDriver.dir" location="test/org\eclipse\birt\data\engine\odaconsumer\birtdriver" />
	<property name="testBirtOdaDriver.plugin.name" value="org.eclipse.birt.data.engine.odaconsumer.birtdriver" />
	
	<property name="testDataSource" value="JDBC" />
	<property name="src" value="src" />
	<property name="core.dir" location="../org.eclipse.birt.core" />
	<property name="oda.jdbc.dir" location="../org.eclipse.birt.report.data.oda.jdbc" />
	<property name="oda.flatfile.dir" location="../org.eclipse.birt.report.data.oda.flatfile" />
	<property name="dtp.oda-flatfile.dir" location="${dtp.home}/org.eclipse.datatools.connectivity.oda.flatfile" />
	<property name="dtp.oda.adapter.dir" location="../org.eclipse.birt.data.oda.adapter.dtp" />
	<property name="dtp.home" location="../" />
	<property name="bin" value="bin" />
	<property name="doc" value="doc" />
	<property name="test_src" value="test" />
	<property name="def_logdir" value="log" />
	<property name="def_user" value="user" />
	<property name="def_password" value="password" />
	<property name="def_host" value="localhost" />
	<property name="def_url" value="jdbc:derby:${def_database}" />
	<property name="def_database" value="DTETest" />
	<property name="lib" value="lib" />
	<property name="java_encoding" value="utf-8" />
	<property name="sourceVer" value="1.4" />
	<property name="driverLoc" value="test" />
	<property name="dte.jar" value="dte.jar" />
	<property name="oda.jar" value="oda.jar" />
	<property name="core.jar" value="core.jar" />
	<property name="dtp.oda.adapter.jar" value="oda-adapter.jar" />
	<property name="oda.jdbc.jar" value="oda-jdbc.jar" />
	<property name="oda.flatfile.jar" value="oda-flatfile.jar" />
	
	<path id="class.path">
		<pathelement path="${bin}" />
		<fileset dir="${lib}">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${core.dir}">
			<include name="core.jar"/>
		</fileset>
		<fileset dir="${core.dir}/lib">
			<include name="*.jar"/>
		</fileset>
<!--	<fileset dir="${dtp.oda.dir}">
			<include name="oda.jar"/>
		</fileset>
		<fileset dir="${dtp.oda.consumer.dir}">
			<include name="odaconsumer-helper.jar"/>
		</fileset>
-->		<fileset dir="${derby.dir}">
			<include name="derby.jar"/>
		</fileset>
		<fileset dir="${js.dir}/lib">
			<include name="*.jar"/>
		</fileset>

		<!-- Dependent on Eclipse due to Plugin class -->
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.core.runtime*.jar"/>
			<include name="org.eclipse.equinox.*.jar"/>
			<include name="org.eclipse.osgi*.jar"/>
			<include name="org.junit_*/*.jar"/>
			<include name="com.ibm.icu*.jar"/>
			<include name="org.eclipse.datatools.connectivity*.jar"/>
            <include name="org.eclipse.datatools.connectivity*/*.jar"/>
		</fileset>
		
	</path>
	
	<path id="class.path.test">
		<path refid="class.path" />
		<fileset dir="${core.dir}">
			<include name="lib/*.jar"/>
		</fileset>
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.equinox*.jar"/>
		</fileset>
	</path>
	
	<!-- Compile source code and generate jar for this project.
		 Input parameters:
		 	eclipse.home
		 	dtp.home
	-->
	<target name="Jar" depends="compileSource" description="package the classes of source file">
		<jar destfile="dte.jar">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="**/*Test.class" />
				<exclude name="testutil/**" />
				<exclude name="**/regre/**" />
				<exclude name="**/perf/**" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
		</jar>
		<jar destfile="dteapi.jar">
			<fileset dir="${bin}">
				<include name="org/eclipse/birt/data/engine/api/**/*.class" />
				<exclude name="org/eclipse/birt/data/engine/api/**/*Test*.class" />
				<include name="org/eclipse/birt/data/engine/olap/api/**/*.class" />
				<exclude name="org/eclipse/birt/data/engine/olap/api/**/*Test*.class" />
				<include name="javax/olap/**/*.class" />
				<include name="org/eclipse/birt/data/engine/core/DataException.class" />
				<include name="org/eclipse/birt/data/engine/i18n/*.*" />
				<exclude name="org/eclipse/birt/data/engine/i18n/package.html" />
			</fileset>
		</jar>
	</target>

	<!-- Jar all code, since some project might have interest on it.
	-->
	<target name="JarAll" depends="compileSource, compileTest" description="package all classes including test cases">		
		<jar destfile="dte.jar">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
		</jar>
	</target>	
	
	<!-- Export the project, for instance, jar files are copied to a designated folder
			 the dependency on Jar should implement in top level script by call sequence	
			 Parameters:
			 		- ${export.dir} target directory to put the plugin binaries
			 		- ${plugin.version} the version of plugin exported
	-->
	<target name="Export">
		<mkdir dir="export" />
		<property file="META-INF/MANIFEST.MF" />
		<xmlproperty file="plugin.xml" collapseAttributes="true"/>
	  	<!--copy todir="${export.dir}/${module.name}_${Bundle-Version}">
	        <fileset dir="." 
	        	includes="dte.jar, about.html, plugin.xml, .options, schema/**, META-INF/**"
	        />
	    </copy-->
		
		<jar destfile="${export.dir}/${module.name}_${Bundle-Version}.jar" manifest="META-INF/MANIFEST.MF">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="**/*Test.class" />
				<exclude name="testutil/**" />
				<exclude name="**/regre/**" />
				<exclude name="**/perf/**" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
			<fileset dir=".">
				<include name="plugin.xml"/>
				<include name="plugin*.properties"/>
				<include name="about.html"/>
				<include name=".options"/>
				<include name="META-INF/MANIFEST.MF"/>
				<include name="schema/**"/>
			</fileset>
		</jar>
	</target>

	<!-- Run Unit Test -->
	<target name="UnitTest" depends="compileTest, testDependency" description="run all the unit tests">
		<ant dir="../org.eclipse.birt.core" antfile="BuildCore.xml" target="UnitTest" inheritAll="false" inheritRefs="false">			
			<property name="dir.utest" value="utest" />
			<property name="utest.report.dir" value="${utest.report.dir}" />
			<property name="module.name" value="${module.name}" />
			<property name="classname" value="org.eclipse.birt.data.engine.AllTests" />
		</ant>
	</target>
	
	<!-- Clean all objects created by this script -->
	<target name="Clean" depends="init" description="clean up">
		<antcall target="cleanBuild"/>
		<antcall target="cleanUnitTest"/>
		<antcall target="cleanJar"/>
	</target>

	<!-- Generate the JavaDoc.
		 Parameters:
		 		- ${javadoc.dir} target directory to put the java document
	 -->	
	<target name="Javadoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" 
				 author="true" 
				 version="true" 
				 use="true" 
				 windowtitle="Birt Data API" 
				 source="1.4"
				 packagenames="${module.name}.*">
				<packageset dir="${src}" defaultexcludes="yes" />
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
				<classpath refid="class.path" />
		</javadoc>
	</target>
	
	<target name="apiJavaDoc">
		<mkdir dir="${api.javadoc.dir}" />
		<javadoc destdir="${api.javadoc.dir}" 
				author="true" 
				version="true" 
				use="true" 
				windowtitle="BIRT Data Engine API 2.0.0 Specification - Provisional" 
				doctitle="BIRT Data Engine API 2.0.0 (Provisional)"  
				source="1.4"
				packagenames="${module.name}.*">
			  	<packageset dir="${src}" defaultexcludes="yes">
					<include name="org/eclipse/birt/data/engine/api/**" />
			  	</packageset>
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
				<classpath refid="class.path" />
		</javadoc>
	</target>
	
	<target name="init" description="initialization">
		<condition property="url_isset">
			<isset property="url" />
		</condition>
		<condition property="url" value="${def_url}">
			<isfalse value="${url_isset}" />
		</condition>
		<condition property="logdir_isset">
			<isset property="logdir" />
		</condition>
		<condition property="logdir" value="${def_logdir}">
			<isfalse value="${logdir_isset}" />
		</condition>
		<condition property="database_isset">
			<isset property="database" />
		</condition>
		<condition property="database" value="${def_database}">
			<isfalse value="${database_isset}" />
		</condition>
		<condition property="user_isset">
			<isset property="user" />
		</condition>
		<condition property="user" value="${def_user}">
			<isfalse value="${user_isset}" />
		</condition>
		<condition property="password_isset">
			<isset property="password" />
		</condition>
		<condition property="password" value="${def_password}">
			<isfalse value="${password_isset}" />
		</condition>
		<condition property="host_isset">
			<isset property="host" />
		</condition>
		<condition property="host" value="${def_host}">
			<isfalse value="${host_isset}" />
		</condition>
	</target>
	
	<!-- compile the source code -->
	<target name="compileSource" depends="init, buildDependency" description="compile the source ">
		<mkdir dir="${bin}" />

		<copy todir="${bin}">
			<fileset dir="${src}">
				<include name="**/Messages*.properties"/>
			</fileset>
		</copy>
		<javac srcdir="${src}"
			   destdir="${bin}" 
			   encoding="utf-8" 
			   source="1.4" 
			   debug="true">
			<classpath refid="class.path" />
		</javac>
	</target>

	<!-- Compile Data Test Files 
		 javac.failonerror should be true.
	-->
	<target name="compileTest" depends="init" description="compile the test ">
		<mkdir dir="${bin}" />
	
		<!-- Copy messages.properties file to class directory-->
		<copy tofile="${bin}/testutil/messages.properties" file="${test.src}/testutil/messages.properties"/>
		<copy tofile="${bin}/org/eclipse/birt/data/engine/expression/messages.properties" file="${test.src}/org/eclipse/birt/data/engine/expression/messages.properties"/>
		
		<javac srcdir="${test.src}"
			   destdir="${bin}" 
			   encoding="utf-8" 
			   source="1.4" 
			   failonerror="true"
			   debug="true">
			<classpath refid="class.path.test" />
		</javac>
	</target>
		
	<target name="testJDBC">
		<echo>Run jUnit test cases against JDBC</echo>
		
		<!-- run junit for each testcase -->
		<junit dir="." fork="yes" taskname="Data Engine Tests">
			<jvmarg value="-ea" />
			<sysproperty key="DTETest.url" value="${url}" />
			<sysproperty key="DTETest.user" value="${user}" />
			<sysproperty key="DTETEst.password" value="${password}" />
			<sysproperty key="DTETest.host" value="${host}" />
			<sysproperty key="DTETest.database" value="${database}" />
			
			<!-- The property "instance" has not been defined. ??-->
			<sysproperty key="DTETest.instace" value="${instance}" />
			
			<sysproperty key="DTETest.driverLoc" value="${driverLoc}" />
			<sysproperty key="DTETest.testSource" value="JDBC"/>
			<classpath refid="class.path.test" />
			<formatter type="xml" />
			<batchtest todir="${utest.report.dir}">
				<fileset dir="${test.src}">
					<include name="**/*Test.java" />
					<exclude name="**/*ManualTest.java" /> 
					<exclude name="**/perf/*.java" /> 
					<exclude name="**/regre/db/*.java" /> 
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	<target name="cleanBuild" description= "clean files generated by build">
		<delete dir="${bin}"/>
	</target>
	<target name="cleanUnitTest" description= "clean files generated by unit tests">
		<delete dir="${utest.report.dir}" />
		<delete>
			<fileset dir="." includes="*junit*" />
		</delete>
	</target>
	<target name="cleanJar" description = "clean jar files">
		<delete file="dte.jar" />
	</target>
	
	
	<target name="buildDependency">
		<echo message="${module.name} start call Jar task in ${core.dir}"/>
		<ant dir="${core.dir}" antfile="BuildCore.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${core.dir}"/>
		
<!--	<echo message="${module.name} start call Jar task in ${dtp.oda.dir}"/>
		<ant dir="${dtp.oda.dir}" antfile ="build.xml" target="build.jars" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${dtp.oda.dir}"/>
		
		<echo message="${module.name} start call Jar task in ${dtp.oda.consumer.dir}"/>
		<ant dir="${dtp.oda.consumer.dir}" antfile ="build.xml" target="build.jars" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${dtp.oda.consumer.dir}"/>
-->	</target>
	
	<target name="testDependency">
		<echo message="${module.name} start call Jar task in ${dtp.oda.adapter.dir}"/>		
		<ant dir="${dtp.oda.adapter.dir}" antfile="BuildDtpOdaAdapter.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${oda.dtp.adapter.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda.adapter.dtp/${dtp.oda.adapter.jar}" file="${dtp.oda.adapter.dir}/${dtp.oda.adapter.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.data.oda.adapter.dtp/plugin.xml" file="${dtp.oda.adapter.dir}/plugin.xml"/>
		
		<echo message="${module.name} start call Jar task in ${oda.jdbc.dir}"/>		
		<ant dir="${oda.jdbc.dir}" antfile="BuildOdaJdbc.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${oda.jdbc.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.jdbc/${oda.jdbc.jar}" file="${oda.jdbc.dir}/${oda.jdbc.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.jdbc/plugin.xml" file="${oda.jdbc.dir}/plugin.xml"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.jdbc/plugin.properties" file="${oda.jdbc.dir}/plugin.properties"/>

<!--	<echo message="${module.name} start call Jar task in ${oda.flatfile.dir}"/>		
		<ant dir="${oda.flatfile.dir}" antfile="BuildOdaFlatfile.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>		
		<echo message="${module.name} end call Jar task in ${oda.flatfile.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.flatfile/${oda.flatfile.jar}" file="${oda.flatfile.dir}/${oda.flatfile.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.flatfile/plugin.xml" file="${oda.flatfile.dir}/plugin.xml"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.birt.report.data.oda.flatfile/plugin.properties" file="${oda.flatfile.dir}/plugin.properties"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.datatools.connectivity.oda.flatfile/${oda.flatfile.jar}" file="${dtp.oda-flatfile.dir}/${oda.flatfile.jar}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.datatools.connectivity.oda.flatfile/plugin.xml" file="${dtp.oda-flatfile.dir}/plugin.xml"/>
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.datatools.connectivity.oda.flatfile/plugin.properties" file="${dtp.oda-flatfile.dir}/plugin.properties"/>
		<mkdir dir="${test.src}/plugins/org.eclipse.datatools.connectivity.oda.flatfile/META-INF" />
		<copy overwrite="true" tofile="${test.src}/plugins/org.eclipse.datatools.connectivity.oda.flatfile/META-INF/MANIFEST.MF" file="${dtp.oda-flatfile.dir}/META-INF/MANIFEST.MF"/>
-->	
		<echo message="${module.name} start call Jar task in ${testOdaDriver.dir}"/>		
		<ant dir="${testOdaDriver.dir}" antfile="build.xml" target="build.jars" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="./../../../../../../../../${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${testOdaDriver.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/${testOdaDriver.plugin.name}/testDriver.jar" file="${testOdaDriver.dir}/testDriver.jar"/>
		<copy overwrite="true" tofile="${test.src}/plugins/${testOdaDriver.plugin.name}/plugin.xml" file="${testOdaDriver.dir}/plugin.xml"/>
		
		<echo message="${module.name} start call Jar task in ${testBirtOdaDriver.dir}"/>		
		<ant dir="${testBirtOdaDriver.dir}" antfile="build.xml" target="build.jars" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
			<property name="dtp.home" value="${dtp.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${testBirtOdaDriver.dir}"/>
		<copy overwrite="true" tofile="${test.src}/plugins/${testBirtOdaDriver.plugin.name}/testBirtDriver.jar" file="${testBirtOdaDriver.dir}/testBirtDriver.jar"/>
		<copy overwrite="true" tofile="${test.src}/plugins/${testBirtOdaDriver.plugin.name}/plugin.xml" file="${testBirtOdaDriver.dir}/plugin.xml"/>
	</target>
</project>

