<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.data
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *        -Ddtp.home=<your DTP plugins source home>   [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->

<project name="BIRT Data Engine Project" default="Jar" basedir=".">
    <description>BIRT Data Engine Project.</description>
	<property file="build.properties"/>		
	
	<!-- set global properties for this build -->
    <!-- Public properties, used by public targets, top level build script will pass on the value 
	 	 at runtime. Properties will have there default value:
		     eclipse.home
		     dtp.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	
	<!-- ===== Default value for public properties ============= -->
	<property name="bin" location="bin" />
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="api.javadoc.dir" location="docs/birt/api"/>
	<property name="export.dir" location="export" />

	<property name="eclipse.home" location="." />
	
	<property name="core.dir" location="../org.eclipse.birt.core" />
	<property name="data.dir" location="../org.eclipse.birt.data" />
	<property name="model.dir" location="../org.eclipse.birt.report.model"/>
	<property name="js.dir" location="../org.mozilla.rhino" />
	<property name="module.name" value = "org.eclipse.birt.report.data.adapter" />
	<property name="src" location="src" />
	<property name="test.src" location="test" />
	
	<property name="jar.name" location="dataadapter.jar" />
	<property name="api.jar.name" location="dataadapterapi.jar" />
	<property name="all.jar.name" location="dataadapterall.jar" />
	
	<path id="class.path">
		<pathelement path="${bin}" />
		<fileset dir="${core.dir}">
			<include name="core.jar"/>
		</fileset>
		<fileset dir="${core.dir}/lib">
			<include name="*.jar"/>
		</fileset>
		<fileset dir="${data.dir}">
			<include name="dte.jar"/>
		</fileset>
		<fileset dir="${model.dir}">
			<include name="model.jar"/>
		</fileset>
		<fileset dir="${js.dir}/lib">
			<include name="*.jar"/>
		</fileset>

		<!-- Dependent on Eclipse due to Plugin class -->
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.core.runtime_*/runtime.jar"/>
			<include name="org.eclipse.osgi_*/*.jar"/>
			<include name="org.eclipse.core.runtime*.jar"/>
			<include name="org.eclipse.osgi*.jar"/>
			<include name="org.junit_*/*.jar"/>
			<include name="com.ibm.icu*.jar"/>
		</fileset>
		
	</path>
	
	<path id="class.path.test">
		<path refid="class.path" />
		<fileset dir="${core.dir}">
			<include name="lib/*.jar"/>
		</fileset>
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.equinox*.jar"/>
		</fileset>
	</path>
	
	<!-- Compile source code and generate jar for this project.
		 Input parameters:
		 	eclipse.home
		 	dtp.home
	-->
	<target name="Jar" depends="compileSource" description="package the classes of source file">
		<jar destfile="${jar.name}">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="**/*Test.class" />
				<exclude name="testutil/**" />
				<exclude name="**/regre/**" />
				<exclude name="**/perf/**" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
		</jar>
		<jar destfile="${api.jar.name}">
			<fileset dir="${bin}">
				<include name="org/eclipse/birt/report/data/adapter/api/**/*.class" />
				<exclude name="org/eclipse/birt/report/data/adapter/api/**/*Test*.class" />
				<include name="org/eclipse/birt/report/data/adapter/i18n/*.*" />
				<exclude name="org/eclipse/birt/report/data/adapter/i18n/package.html" />
			</fileset>
		</jar>
	</target>

	<!-- Jar all code, since some project might have interest on it.
	-->
	<target name="JarAll" depends="compileSource, compileTest" description="package all classes including test cases">		
		<jar destfile="${all.jar.name}">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
		</jar>
	</target>	
	
	<!-- Export the project, for instance, jar files are copied to a designated folder
			 the dependency on Jar should implement in top level script by call sequence	
			 Parameters:
			 		- ${export.dir} target directory to put the plugin binaries
			 		- ${plugin.version} the version of plugin exported
	-->
	<target name="Export">
		<mkdir dir="export" />
		<property file="META-INF/MANIFEST.MF" />
		<xmlproperty file="plugin.xml" collapseAttributes="true"/>		
		<jar destfile="${export.dir}/${module.name}_${Bundle-Version}.jar" manifest="META-INF/MANIFEST.MF">
			<fileset dir="${bin}">
				<include name="**/*.class" />
				<include name="**/*.txt" />
				<include name="**/*.xml" />
				<include name="**/*.def" />
				<include name="**/*.properties" />
				<include name="**/*.jar" />
				<exclude name="**/*Test*.class" />
				<exclude name="testutil/**" />
				<exclude name="**/regre/**" />
				<exclude name="**/perf/**" />
				<exclude name="plugins/**" />
				<exclude name="**/input/**" />
				<exclude name="**/output/**" />
				<exclude name="**/golden/**" />
			</fileset>
			<fileset dir=".">
				<include name="plugin.xml"/>
				<include name="plugin*.properties"/>
				<include name="about.html"/>
				<include name=".options"/>
				<include name="META-INF/MANIFEST.MF"/>
				<include name="schema/**"/>
			</fileset>
		</jar>
	</target>

	<!-- Run Unit Test -->
	<target name="UnitTest" depends="compileTest, testDependency" description="run all the unit tests">
		<ant dir="../org.eclipse.birt.core" antfile="BuildCore.xml" target="UnitTest" inheritAll="false" inheritRefs="false">			
			<property name="dir.utest" value="utest" />
			<property name="utest.report.dir" value="${utest.report.dir}" />
			<property name="module.name" value="${module.name}" />
			<property name="classname" value="org.eclipse.birt.report.data.adapter.AllTests" />
		</ant>
	</target>
	
	<!-- Clean all objects created by this script -->
	<target name="Clean" depends="init" description="clean up">
		<antcall target="cleanBuild"/>
		<antcall target="cleanUnitTest"/>
		<antcall target="cleanJar"/>
	</target>

	<!-- Generate the JavaDoc.
		 Parameters:
		 		- ${javadoc.dir} target directory to put the java document
	 -->	
	<target name="Javadoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" 
				 author="true" 
				 version="true" 
				 use="true" 
				 windowtitle="Birt Data Adapter API" 
				 source="1.4"
				 packagenames="${module.name}.*">
				<packageset dir="${src}" defaultexcludes="yes" />
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
				<classpath refid="class.path" />
		</javadoc>
	</target>
	
	<target name="apiJavaDoc">
		<mkdir dir="${api.javadoc.dir}" />
		<javadoc destdir="${api.javadoc.dir}" 
				author="true" 
				version="true" 
				use="true" 
				windowtitle="BIRT Data Engine Adapter API 2.0.0 Specification - Provisional" 
				doctitle="BIRT Data Engine Adapter API 2.0.0 (Provisional)"  
				source="1.4"
				packagenames="${module.name}.*">
			  	<packageset dir="${src}" defaultexcludes="yes">
					<include name="org/eclipse/birt/report/data/adapter/api/**" />
			  	</packageset>
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
				<classpath refid="class.path" />
		</javadoc>
	</target>
	
	<target name="init" description="initialization">
	</target>
	
	<!-- compile the source code -->
	<target name="compileSource" depends="init, buildDependency" description="compile the source ">
		<mkdir dir="${bin}" />

		<copy todir="${bin}">
			<fileset dir="${src}">
				<include name="**/Messages*.properties"/>
			</fileset>
		</copy>
		<javac srcdir="${src}"
			   destdir="${bin}" 
			   encoding="utf-8" 
			   source="1.4" 
			   debug="true">
			<classpath refid="class.path" />
		</javac>
	</target>

	<!-- Compile Data Test Files 
		 javac.failonerror should be true.
	-->
	<target name="compileTest" depends="init" description="compile the test ">
		<mkdir dir="${bin}" />
	
		<javac srcdir="${test.src}"
			   destdir="${bin}" 
			   encoding="utf-8" 
			   source="1.4" 
			   failonerror="true"
			   debug="true">
			<classpath refid="class.path.test" />
		</javac>
	</target>
	
	<target name="cleanBuild" description= "clean files generated by build">
		<delete dir="${bin}"/>
	</target>
	<target name="cleanUnitTest" description= "clean files generated by unit tests">
		<delete dir="${utest.report.dir}" />
		<delete>
			<fileset dir="." includes="*junit*" />
		</delete>
	</target>
	<target name="cleanJar" description = "clean jar files">
		<delete file="${jar.name}" />
		<delete file="${api.jar.name}" />
		<delete file="${all.jar.name}" />
	</target>
	
	
	<target name="buildDependency">
		<echo message="${module.name} start call Jar task in ${core.dir}"/>
		<ant dir="${core.dir}" antfile="BuildCore.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${core.dir}"/>
		
		<echo message="${module.name} start call Jar task in ${data.dir}"/>
		<ant dir="${data.dir}" antfile="BuildData.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="${module.name} end call Jar task in ${core.dir}"/>
		
		<echo message="start call Jar task in ${model.dir}"/>
		<ant dir="${model.dir}" antfile="BuildModel.xml" target="Jar" inheritAll="false" inheritRefs="false" >
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>	
		<echo message="end call Jar task in ${model.dir}"/>		
	</target>
	
	<target name="testDependency">
	</target>
</project>

