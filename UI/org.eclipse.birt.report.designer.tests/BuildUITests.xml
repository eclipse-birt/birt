<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  BuildUITests.xml
 *
 *  Created on 03/16/2005
 *  Build script for project org.eclipse.birt.report.designer.tests
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *
 * Default target is "Jar".
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/16/2005: initial version
 *    2. 03/16/2006: single jar version
 *
-->


<project name="BIRT UI Tests Project" default="Jar" basedir=".">


	<description>BIRT Core Project.</description>
	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.
		     eclipse.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->

	
	<!-- ===== Default value for public properties ============= -->
	<property name="eclipse.home" location="." />

	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />
	
	<property name="dir.src" location="src" />
	<property name="dir.test" location="test" />
	<property name="dir.bin" location="temp.folder" />
	
	<property name="module.name" value="org.eclipse.birt.report.designer.tests" />
	<property name="engine.dir" value="../org.eclipse.birt.report.engine" />
	<property name="designer.ui.ide.dir" value="../org.eclipse.birt.report.designer.ui.ide" />
	<property name="oda.ui.dir" value="../org.eclipse.birt.report.data.oda.jdbc.ui" />
	<property name="junit.classpath" value="${eclipse.home}/plugins/org.junit_3.8.1/junit.jar" />
	
	<property name="arch" value="x86" />
	
	<!-- set platform related properties-->
	<condition property="ws" value="win32">
		<os family="windows"/>
	</condition>
	<condition property="ws" value="gtk">
		<not>
			<os family="windows"/>
		</not>
	</condition>

	<condition property="os" value="win32">
		<os family="windows"/>
	</condition>
	<condition property="os" value="linux">
		<not>
			<os family="windows"/>
		</not>
	</condition>
	
	<property name="workspace.dir" value="${eclipse.home}/plugins/${module.name}/tempworkspace"/>
	<property name="result.filename" value="${eclipse.home}/plugins/${module.name}/org.eclipse.birt.report.designer.tests.xml"/>


	<target name="checkBuildScript">
		<available file="build.xml" property="buildScript.available" />
	</target>

	<!-- Compile source code and generate jar for this project.
		 Input parameters:
		 	eclipse.home
	-->
	<target name="Jar" depends="build,clearJars">
		<java classpath="${eclipse.home}/startup.jar" classname="org.eclipse.core.launcher.Main" fork="true" dir="." failonerror="true">
			<arg line="-application org.eclipse.ant.core.antRunner -file build.xml build.update.jar" />
			<jvmarg line="-Declipse.home=${eclipse.home} -Dclean=true -Dos=${os} -Dws=${ws} -Darch=${arch} -DjavacSource=1.4 -DjavacTarget=1.4" />
		</java>
	</target>

	<target name="Export" />

	<!-- No unit tests, dummy target -->
	<target name="UnitTest">
		<delete dir="${workspace.dir}"/>
		<delete file="${result.filename}"/>
		<java classname="org.eclipse.core.launcher.Main" fork="true" dir="${eclipse.home}" timeout="3600000">
			<classpath>
				<pathelement location="${eclipse.home}/startup.jar" />
			</classpath>
			<arg line="-application org.eclipse.test.uitestapplication" />
			<arg line="-dev bin -data ${workspace.dir}" />
			<arg line="formatter=org.apache.tools.ant.taskdefs.optional.junit.XMLJUnitResultFormatter,${result.filename}" />
			<arg line="-testPluginName ${module.name}" />
			<arg line="-className org.eclipse.birt.report.designer.tests.AllTests" />
			<arg line="-os ${os}" />
			<arg line="-ws ${ws}" />
			<arg line="-arch ${arch}" />
		</java>
		<move file="${result.filename}" todir="${utest.report.dir}"/>
	</target>

	<!-- Clean all objects created by this script -->
	<target name="Clean" description="clean up">
		<antcall target="cleanByScript" />
		<antcall target="exceptionalClean" />
		<delete dir="${workspace.dir}"/>
		<delete file="${result.filename}"/>
	</target>

	<!-- Clean all objects by the script generated -->
	<target name="cleanByScript" description="clean up by script generated" depends="checkBuildScript" if="buildScript.available">
		<ant target="clean" />
	</target>

	<!-- Clean all objects manually when the script generated is lost-->
	<target name="exceptionalClean" depends="checkBuildScript,clearJars" unless="buildScript.available">
		<delete dir="${dir.bin}" />
	</target>

	<target name="Javadoc" />

	<target name="doGenerateBuildScript">
		<eclipse.buildScript elements="plugin@${module.name}" workingDirectory="${eclipse.home}" />
	</target>


	<target name="generateBuildScript">
		<java classname="org.eclipse.core.launcher.Main" fork="true" dir="." failonerror="true">
			<classpath>
				<pathelement location="${eclipse.home}/startup.jar" />
			</classpath>
			<arg line="-application org.eclipse.ant.core.antRunner" />
			<arg line="-file BuildUITests.xml doGenerateBuildScript" />
			<arg line="-Declipse.home=${eclipse.home}" />
			<arg line="-os ${os}" />
			<arg line="-ws ${ws}" />
			<arg line="-arch ${arch}" />
		</java>
		<delete dir="workspace" />
	</target>

	<target name="buildDependents">
		<ant dir="${engine.dir}" antfile="BuildEngine.xml" target="Jar" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<ant dir="${oda.ui.dir}" antfile="BuildOdaUI.xml"  target="Jar" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
			<property name="os" value="${os}" />
			<property name="ws" value="${ws}" />
			<property name="arch" value="${arch}" />
		</ant>
		<ant dir="${designer.ui.ide.dir}" antfile="BuildDesignerIDE.xml"  target="build" inheritAll="false">
			<property name="eclipse.home" value="${eclipse.home}" />
			<property name="os" value="${os}" />
			<property name="ws" value="${ws}" />
			<property name="arch" value="${arch}" />
		</ant>						
	</target>
	
	<target name="build" depends="buildDependents,generateBuildScript">
		<ant inheritAll="false">
			<property name="javacFailOnError" value="true" />
			<property name="javacSource" value="1.4" />
			<property name="javacTarget" value="1.4" />
			<property name="os" value="${os}" />
			<property name="ws" value="${ws}" />
			<property name="arch" value="${arch}" />
		</ant>
	</target>
	
	<target name="clearJars">
		<delete>
			<fileset dir=".">
				<include name="${module.name}*.jar" />
			</fileset>
		</delete>
	</target>

</project>
