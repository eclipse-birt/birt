#/*******************************************************************************
# * Copyright (c) 2021 Contributors to the Eclipse Foundation
# * 
# * This program and the accompanying materials are made available under the
# * terms of the Eclipse Public License 2.0 which is available at
# * https://www.eclipse.org/legal/epl-2.0/.
# * 
# * SPDX-License-Identifier: EPL-2.0
# * 
# * Contributors:
# *   See git history
# *******************************************************************************/
###########################################################
#Solution reports descriptions

#Listing
ProductCatalog=Prints the Classic Models product catalog, grouped by product category. Provides product name, cost and description. Demonstrates one level grouping and using a grid within a table row to structure spacing. Also shows image inclusion and use of the <value-of> tag in text item to include the content of a database column. Finally, the report makes use of styles to simplify maintenance and achieve a consistent look. 
TopSellingProducts=Displays a pie chart showing revenue by product line. Lists the top selling products, sorted by revenue. Demonstrates use of a chart and sorting a result set. Also shows image inclusion and use of grid and tables to organize report content. Finally, the report makes use of styles to simplify maintenance and achieve a consistent look. 
TopNPercent=Making use of the top n and top percent filter capabilities added in BIRT 2.0, this report shows a bar chart with the top N customers by revenue, followed by a listing of the top M% customers by revenue sorted by customer name. This requires multiple passes over the data, but it is all done "under the covers" by the BIRT report engine. N and M are passed into the report as parameters to allow report users to select the number and percentage at run time. 
StaticCrosstab=This example illustrates building a static crosstab report using the BIRT Total function. The report presents annual sales revenue by quarter for each of the product lines that Classic Models Inc currently sales. In addition totals are aggregated across horizontal and vertical dimensions. The BIRT Total function can accept a second parameter that filters the aggregate data. In this example this feature is used to only display values that pertain to a product offering, such as Trains. The first parameter in the Total function is the value to aggregate, and in this example it is set to quantity sold multiplied by price each. The second parameter is the filter. So if the filter where specified as dataSetRow["Products::PRODUCTLINE"]=="Motorcycles", only the Motorcycles product line would be aggregated. 

#Business Forms
SalesInvoice=Prints an invoice for the selected order, including customer and invoice details and products ordered. Demonstrates use of a parameter to select the order to invoice and expressions for several calculated fields, including discount and order total. Uses expression to build customer address string and illustrates suppression of nulls in database fields with javascript function replace. Also shows image inclusion and sophisticated use of grids and tables to organize report content. Finally, the report makes use of styles to simplify maintenance and achieve a consistent look. 

###########################################################
#Reporting Feature Examples descriptions

#XML Data Source
XMLDS_After=A simple report that demonstrates using XML data sources. 

#Libraries
Newsfeeds=This example demonstrates how BIRT can be used to build reusable component report libraries. In this example, we start by creating a library. We utilize URI's to the Eclipse RSS Newsfeed as the data source for a report and store it in the library. We then publish the library to a resource folder. This example demonstrates the creation of non-visual items in a library. It is important to note that visual items can also be created and stored in a library. 
Newsfeeds_After=This example demonstrates how BIRT can be used to build reusable component report libraries. In this example, we start by creating a library. We utilize URI's to the Eclipse RSS Newsfeed as the data source for a report and store it in the library. We then publish the library to a resource folder. This example demonstrates the creation of non-visual items in a library. It is important to note that visual items can also be created and stored in a library.

#Combination Chart
CustomerOrdersFinal=This example demonstrates how a Combination Chart can be created within BIRT. In addition this example also demonstrates how to add drill to details, using internal bookmarks and the Chart Interactivity Editor. The combination chart presents the outstanding debt for the top 5 customers in Bar Chart format with a Line series representing each customers credit limit superimposed. The bars within the chart are then linked to order details for each customer. 

#Cascading
cascade=This example demonstrates how to build a BIRT report that uses a cascaded parameter group. A cascaded parameter group allows a group of parameters to be interlinked, where selecting a value for the first parameter affects the choices available in the subsequent parameters. Cascaded parameters can be tied to one or more Data Sets. The Data Sets populate each level of the cascade. Combined with Data Set parameters this offers very good flexibility for culling of returned data for a report.

#Drill to details
MasterDetailOneReport=This example illustrates building a report with master and detail information in one report.
OrderMasterAfter=This example demonstrates building a master report and a detail report. The master report list orders and allows the report user to click on a particular order number to drill into a detail report for the selected order. This example illustrates using a simple parameter to cull results in the detail report and the hyperlink property within the master report to pass this parameter to the detail report. The hyperlink property within the master report is generated dynamically based on results retrieved from a query.
OrderDetailAfter=The detail report drilled into from clicking on master report.

#Dynamic Report Parameter
ParameterToDataSetParameter=This example illustrates linking a report parameter to a data set parameter.

#Expressions
Expressions=This example demonstrating how to build a BIRT report that uses funcitons.

#Grouping
CustomerListAfter_Grouping=This example demonstrates building a grouped report in BIRT. The example report shows a list of customers and groups these by country. Key BIRT features that are covered in this demonstration are grouping, page breaks, table of contents, and aggregating data per group or as a total. 

#Highlighting and Conditional Formatting
ProductListAfter=This example demonstrates how to add highlighting and conditional formatting to a BIRT report. A Products list report is developed that displays all company products. The example report uses alternating row colors and highlights rows that represent a product that is low in quantity. This report also illustrates adding a script to the onCreate event of a row to modify the row style to italics for products with high markup values. 

#Mapping and Sorting 
CustomerListAfter_Mapping=This example demonstrates using the Mapping and Sorting features of BIRT. Mapping allows a BIRT report element to display a different value based on an expression. For example if a query returns a numerical field for month (1-12) the mapping feature can be used to present January - December. In this example we use mapping to display a credit rank for Classic Models customers. Sorting is used in many places in BIRT and is very flexible. In this example we demonstrate adding a sort expression to a Table element that is tied to a report parameter. The parameter allows entering a search string, which is then used in the sort expression to set the sort order for the table. 

#Parallel Report 
EmployeeAfter=This example demonstrates how to build a report with parallel sections. It also illustrates using table filters to cull the data displayed. The report uses a grid element to layout two columns. In each column a set of nested tables are added to retrieve employee information and group by position hierarchy. The tables are filtered by office code. 

#Query Modification
NullParameter=This example demonstrates how to modify the query based on report parameters using data set events. As an example, the query gets modified if a value is provided for the report parameter. 
OrderDetailsAfter=This example demonstrates how to modify a JDBC query using Property Binding or Script. Property Binding is a feature within BIRT that allows run time modification of Data Source and Data Set public properties. This can be useful to add context sensitive information to either element. As an example, the where clause can be modified to retrieve the user name from session or the database URL can be switched between development and production based on a report parameter. 

#Report Elements
ProductLinesAfter=This example demonstrates using Label, Text, Dynamic Text, Data, and Image elements within a report design. Some key features and differences between the elements are also identified. This example also illustrates retrieving BLOB and CLOB data from a datasource. 

#Sub Report
OrdersAfter=This example demonstrates building a report that uses nested tables. The query that is bound to the inner table is parameterized to return order details for a given order number in the outer table. This example also illustrates referencing outer table columns within a nested table. This allows BIRT reports to be designed with master detail information contained within the same report. As the outer table is processing its rows the inner table query is re-executed based on information from the outer table. 

#Sorting
SortTableByReportParameter=This example demonstrates building a report that uses nested tables. The query that is bound to the inner table is parameterized to return order details for a given order number in the outer table. This example also illustrates referencing outer table columns within a nested table. This allows BIRT reports to be designed with master detail information contained within the same report. As the outer table is processing its rows the inner table query is re-executed based on information from the outer table. 

#Cross tab
CrosstabSampleRevenue=This example demonstrates building a simple report with a cross tab report item ( which is based on a BIRT cube). It create a cross tab with product line along the column area and year->quarter along the row area.
###########################################################
#Contribute Samples
Contribute_Samples=Please submit a bugzilla entry at https://bugs.eclipse.org/bugs/enter_bug.cgi?product=BIRT&bug_severity=enhancement, attach the report design file and the screen shot of report output(in .png image format, 800*600 resolution, no larger than 250 KB)

###########################################################
#Scripting

#Dynamic Map Rule
DynamicMapRule=This example illustrates calling the Design Engine API within the beforeFactory script to add a map rule to a report element.  

#Group Separator
GroupSeparator=This example illustrates adding a separator every 3 rows within a group. This count is reset on a page break.  

#Retrieve Session Information
Application_Session_IntegrationBF=This example illustrates using a JavaScript to retrieve information from Session.

#Scripted Data Source
ScriptedDatasourceExampleAfter=This section of Examples focuses on scripting within BIRT. Simple reports are used to illustrate scripting functionality. Most examples will have a before and after report that can be downloaded. In order to load the exported java object and allow the report using it, please restart BIRT after opening this sample report.  

#Visibility Rule
Addvisrule=This example illustrates adding a visibility rule in script.  

#Chart
SimpleChartAPI=This example illustrates many of the available java script methods within the simple Chart API.  They are called from the beforeFactory event handler of the report.

###########################################################
#Extending BIRT

#Aggreate function extension point
optim=This section of Examples focuses on Extending BIRT. The examples here focus on implementing BIRT supplied extension points, giving the BIRT developer the capability to add to, or change the default behavior of the designer or runtime engine. This includes adding Chart Types, aggregate functions, Data Sources and Report Items. 


 
