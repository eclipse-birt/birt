Shared.Lbl.OK=\ \ \ OK   
Shared.Lbl.Cancel=キャンセル
Shared.Lbl.Triggers=トリガ
Shared.Tooltip.FormatSpecifier=書式設定サブエディタの起動

Shared.mne.Visibile_v=可視(&V)
Shared.mne.Visibile_s=可視(&S)
Shared.mne.Background_K=背景 (&K):

ChartWithAxesImpl.Z_Axis.title=Z 軸のタイトル
ChartSheetImpl.Buttom.Auto=自動(&U)
ChartSheetImpl.Button.AutoHide=データがないグラフを非表示にする(&D)
ChartSheetImpl.Button.EnableStudyLayout=補助レイアウトを有効にする
ChartSheetImpl.Button.ShowEmptyMsg=次のメッセージを持つグラフを表示する(&M) :
ChartSheetImpl.Group.EmptyMessage=表示/非表示
ChartSheetImpl.Group.EmptyMessage&=可視性(&V)
ChartSheetImpl.Label.Outline=外枠 :
ChartLegendImpl.Group.Rotation=回転
ChartPlotSheetImpl.Label.Outline=外枠 :
ChartPlotSheetImpl.Label.Visible=可視(&V)
ChartPlotSheetImpl.Label.Visible2=可視(&I)
ChartPlotSheetImpl.Label.PlotArea=プロットの領域
ChartPlotSheetImpl.Label.AreaFormat=領域の書式設定
ChartPlotSheetImpl.Label.AreaFormat&=領域の書式設定(&A)
ChartTitleSheetImpl.Label.ChartTitle=グラフのタイトル (&H):
ChartTitleSheetImpl.Label.Interactivity=タイトルの相互作用
ChartTitleSheetImpl.Titel.Tooltip=タイトルのツールチップ
ChartTitleSheetImpl.Label.Tooltip=ツールチップ :

ScriptSheetImpl.Lbl.Script=スクリプト :
ScriptSheetImpl.Lbl.Update=更新
ScriptSheetImpl.Title.SheetTitle=スクリプト - グラフのスクリプトの設定と編集

GeneralSheetImpl.Lbl.ChartTitle=グラフのタイトル :
GeneralSheetImpl.Lbl.Description=説明 (&D):
GeneralSheetImpl.Lbl.GeneralProperties=一般プロパティ
GeneralSheetImpl.Lbl.Type=型 :
GeneralSheetImpl.Lbl.Subtype=サブタイプ :
GeneralSheetImpl.Lbl.Units=単位 :
GeneralSheetImpl.Lbl.ColumnCount=列の数 :
GeneralSheetImpl.Lbl.ChartBackground=背景 :
GeneralSheetImpl.Lbl.ChartWall=壁 :
GeneralSheetImpl.Lbl.ChartFloor=床 :
GeneralSheetImpl.Lbl.ChartOutline=グラフの外枠
GeneralSheetImpl.Lbl.TitleProperties=タイトルのプロパティ
GeneralSheetImpl.Lbl.ExtendedProperties=拡張プロパティ
GeneralSheetImpl.Lbl.SeriesWidth=系列の奥行き (&S): \n ({0})
GeneralSheetImpl.Title.SheetTitle=全般 - グラフの全般的なプロパティの設定

BaseAxisDataSheetImpl.Lbl.Type=型 :
BaseAxisDataSheetImpl.Lbl.Title=軸タイトル :
BaseAxisDataSheetImpl.Lbl.Origin=原点 :
BaseAxisDataSheetImpl.Lbl.Value=値 (&U):
BaseAxisDataSheetImpl.Lbl.YAxisCount=Y 軸の数 :
AbstractScaleSheet.AutoExpand=自動調節(&U)
AbstractScaleSheet.Label.Step=ステップグラフ
AbstractScaleSheet.Label.Auto=自動(&A)
AbstractScaleSheet.Label.Factor=ファクタ (値/ポイント)(&F) : 
BaseAxisDataSheetImpl.Lbl.Minimum=最小 (&M):
BaseAxisDataSheetImpl.Lbl.MajorGridStepNum=目盛線のステップ番号(&N) :
BaseAxisDataSheetImpl.Lbl.Maximum=最大 (&X):
AbstractScaleSheet.Label.StepSize=ステップの間隔(&I) :
BaseAxisDataSheetImpl.Lbl.Unit=単位(&U) :
BaseAxisDataSheetImpl.Lbl.MinorGridCount=補助目盛線の数 (単位ごと) (&M):
BaseAxisDataSheetImpl.Lbl.BaseAxis=カテゴリ軸
BaseAxisDataSheetImpl.Title.SheetTitle=データ > X 軸 - X 軸データの設定
BaseAxisDataSheetImpl.Lbl.BaseAxis2=カテゴリ軸 ({0})

BaseAxisAttributeSheetImpl.Lbl.GapWidth=間隔の幅 :
BaseAxisAttributeSheetImpl.Lbl.MajorGrid=目盛線
BaseAxisAttributeSheetImpl.Lbl.MinorGrid=補助目盛線
BaseAxisAttributeSheetImpl.Lbl.Orientation=向き :
BaseAxisAttributeSheetImpl.Lbl.PercentSign=%
BaseAxisAttributeSheetImpl.Lbl.ShowAxisLine=軸線の表示(&X)
BaseAxisAttributeSheetImpl.Lbl.IsTickBetweenCategories=カテゴリ間で交差(&B)
BaseAxisAttributeSheetImpl.Lbl.AxisLineColor=軸線の色(&C) :
BaseAxisAttributeSheetImpl.Exception.IllegalArgument=軸の属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。
BaseAxisAttributeSheetImpl.Title.SheetTitle=属性 > X 軸 - X 軸の属性のカスタマイズ

BaseAxisMarkerAttributeSheetImpl.Lbl.Value=値 (&U):
BaseAxisMarkerAttributeSheetImpl.Lbl.Anchor=アンカー (&C):
BaseAxisMarkerAttributeSheetImpl.Lbl.Fill=塗つぶし (&F):
BaseAxisLabelAttributeSheetImpl.Lbl.Label=ラベル
BaseAxisLabelAttributeSheetImpl.Lbl.Title=タイトル
BaseAxisLabelAttributeSheetImpl.Exception.IllegalArgument=軸ラベルの属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。
BaseAxisLabelAttributeSheetImpl.Lbl.ShowLabelsStaggered=ラベルをずらして表示する
BaseAxisLabelAttributeSheetImpl.Title.SheetTitle=属性 > X 軸 > ラベル - X 軸のラベルのカスタマイズ

BaseAxisMarkerAttributeSheetImpl.Lbl.AddLine=線の追加(&A)
BaseAxisMarkerAttributeSheetImpl.Lbl.AddRange=範囲の追加(&D)
BaseAxisMarkerAttributeSheetImpl.Lbl.AddRegion=領域の追加(&A)
BaseAxisMarkerAttributeSheetImpl.Lbl.RemoveEntry=エントリの削除(&R)
BaseAxisMarkerAttributeSheetImpl.Lbl.StartValue=開始値(&T) :
BaseAxisMarkerAttributeSheetImpl.Lbl.EndValue=終了値 (&E):
BaseAxisMarkerAttributeSheetImpl.Lbl.RangeOutline=範囲の外枠
BaseAxisMarkerAttributeSheetImpl.Lbl.ForAxis=\ - 軸 
BaseAxisMarkerAttributeSheetImpl.Lbl.MarkerLineAttributes=マーカ線の属性
BaseAxisMarkerAttributeSheetImpl.Lbl.MarkerProperties=マーカのプロパティ
BaseAxisMarkerAttributeSheetImpl.Lbl.MarkerLine=マーカの線 {0} {1}
BaseAxisMarkerAttributeSheetImpl.Lbl.MarkerRange=マーカの範囲 {0} {1}
BaseAxisMarkerAttributeSheetImpl.Title.SheetTitle=属性 > X 軸 > マーカ - X 軸のマーカを設定
BaseAxisMarkerAttributeSheetImpl.Lbl.InnerRadius=内側半径 (&I):
BaseAxisMarkerAttributeSheetImpl.Lbl.OuterRadius=外側半径 (&O):
BaseAxisMarkerAttributeSheetImpl.Lbl.DialProperties=領域のプロパティ
BaseAxisMarkerAttributeSheetImpl.Lbl.DialLabelProperties=領域ラベルのプロパティ
BaseAxisMarkerAttributeSheetImpl.Lbl.MarkerLabelProperties=マーカラベルのプロパティ
BaseAxisMarkerAttributeSheetImpl.Lbl.MoveDown=下へ(&N)
BaseAxisMarkerAttributeSheetImpl.Lbl.MoveUp=上へ(&P)
BaseAxisMarkerAttributeSheetImpl.Exception.IllegalArgument=軸マーカの属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。

BaseSeriesDataSheetImpl.Choice.Unsorted=ソート未処理
BaseSeriesDataSheetImpl.Lbl.DataSorting=データのソート(&S) :
BaseSeriesDataSheetImpl.Lbl.YSeriesCount=Y 系列の数 :
BaseSeriesAttributeSheetImpl.Lbl.Palette=パレット
BaseAxisDataSheetImpl.Exception.IllegalArgument=軸の属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。

BaseSeriesAttributeSheetImpl.Lbl.SeriesType=系列 :
BaseSeriesAttributeSheetImpl.Title.SheetTitle=属性 > X 系列 - カテゴリ (X) 系列の属性のカスタマイズ
BaseSeriesDataSheetImpl.Lbl.DataDefinitions=データの定義
BaseSeriesDataSheetImpl.Lbl.OrthogonalSeriesDefinitions=値系列の定義
BaseSeriesDataSheetImpl.Lbl.OrthogonalSeriesDefinition=値系列の定義
BaseSeriesDataSheetImpl.Title.SheetTitle=データ > カテゴリ (X) 系列 - カテゴリ (X) 系列データの設定
BaseSeriesDataSheetImpl.Lbl.DialSeriesCount=ダイヤル数 :
BaseSeriesDataSheetImpl.Lbl.DialSeriesDefinitions=ダイヤル系列の定義

DialScaleDialog.Title.DialScale=ダイヤルのスケール
DialTicksDialog.Title.DialTicks=ダイヤルの目盛り

OrthogonalAxisAttributeSheetImpl.Lbl.HideAxisLine=軸線を非表示にする
OrthogonalAxisAttributeSheetImpl.Lbl.Orientation=向き :
OrthogonalAxisAttributeSheetImpl.Lbl.PercentSign=%
OrthogonalAxisAttributeSheetImpl.Lbl.GapWidth=間隔の幅 :
OrthogonalAxisAttributeSheetImpl.Lbl.MajorGrid=目盛線
OrthogonalAxisAttributeSheetImpl.Lbl.MinorGrid=補助目盛線
OrthogonalAxisAttributeSheetImpl.Lbl.AxisLineColor=軸線の色 :
OrthogonalAxisAttributeSheetImpl.Exception.IllegalArgument=軸の属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。
OrthogonalAxisAttributeSheetImpl.Title.SheetTitle=属性 > Y 軸 - Y 軸の属性のカスタマイズ

OrthogonalAxisDataSheetImpl.Lbl.Type=型 (&P):
OrthogonalAxisDataSheetImpl.Lbl.Title=軸タイトル :
OrthogonalAxisDataSheetImpl.Lbl.Origin=原点 (&O):
OrthogonalAxisDataSheetImpl.Lbl.Value=値 :
OrthogonalAxisDataSheetImpl.Lbl.PrimaryAxis=主軸
OrthogonalAxisDataSheetImpl.Lbl.Scale=スケール
OrthogonalAxisDataSheetImpl.Lbl.Minimum=最小 :
OrthogonalAxisDataSheetImpl.Lbl.Maximum=最大 :
OrthogonalAxisDataSheetImpl.Lbl.Step=ステップ :
OrthogonalAxisDataSheetImpl.Lbl.Unit=単位 :
OrthogonalAxisDataSheetImpl.Lbl.MinorGridCount=補助目盛線の数 (単位ごと) :
OrthogonalAxisDataSheetImpl.Lbl.SeriesDefinitionCount=系列の定義の数 :
OrthogonalAxisDataSheetImpl.Lbl.SeriesGroupingKey=系列のグループ化キー (オプション)
OrthogonalAxisDataSheetImpl.Lbl.OrthogonalAxis=値軸
OrthogonalAxisDataSheetImpl.Exception.IllegalArgument=軸の属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。
OrthogonalAxisDataSheetImpl.Title.SheetTitle=データ > Y 軸 - Y 軸データの設定

OrthogonalAxisLabelAttributeSheetImpl.Lbl.Label=ラベル
OrthogonalAxisLabelAttributeSheetImpl.Lbl.Title=タイトル
OrthogonalAxisLabelAttributeSheetImpl.Lbl.ShowLabelsStaggered=ラベルをずらして表示する
OrthogonalAxisLabelAttributeSheetImpl.Title.SheetTitle=属性 > Y 軸 > ラベル - Y 軸のラベルのカスタマイズ
OrthogonalAxisLabelAttributeSheetImpl.Exception.IllegalArgument=軸ラベルの属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。

OrthogonalAxisMarkerAttributeSheetImpl.Lbl.Values=値 :
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.Anchor=アンカー :
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.AddLine=線の追加
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.AddRange=範囲の追加
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.EndValue=終了値 :
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.ForAxis=\ - {0} 軸
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.RemoveEntry=エントリの削除
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.StartValue=開始値 :
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.RangeOutline=範囲の外枠
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.MarkerLine=MarkerLine {0,number,integer} {1}
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.MarkerRange=MarkerRange 
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.Fill=Fill:
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.MarkerProperties=マーカのプロパティ
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.MarkerLineAttributes=マーカ線の属性
OrthogonalAxisMarkerAttributeSheetImpl.Lbl.MarkerLabelProperties=マーカラベルのプロパティ
OrthogonalAxisMarkerAttributeSheetImpl.Exception.IllegalArgument=軸マーカの属性シートの引数が無効です。グラフは、ChartWithAxes 型に指定する必要があります。

OrthogonalSeriesAttributeSheetImpl.Lbl.Remove=削除(&R)
OrthogonalSeriesAttributeSheetImpl.Lbl.Add=追加(&A)
OrthogonalSeriesAttributeSheetImpl.Lbl.Prefix=接頭辞 (&F):
OrthogonalSeriesAttributeSheetImpl.Lbl.Suffix=接尾辞 (&X):
OrthogonalSeriesAttributeSheetImpl.Lbl.SeriesType=系列 :
OrthogonalSeriesAttributeSheetImpl.Lbl.HideSeries=系列の非表示
OrthogonalSeriesAttributeSheetImpl.Lbl.Palette=パレット
OrthogonalSeriesAttributeSheetImpl.Lbl.DataPoint=データポイント
OrthogonalSeriesAttributeSheetImpl.Lbl.Separator=区切り文字(&E) :
OrthogonalSeriesAttributeSheetImpl.Lbl.SeriesDetails=系列の詳細
OrthogonalSeriesAttributeSheetImpl.Lbl.SeriesDataPoint=系列のデータポイント
OrthogonalSeriesAttributeSheetImpl.Lbl.SeriesDataPointComponent=系列のデータポイントコンポーネント - {0}
OrthogonalSeriesAttributeSheetImpl.Lbl.StackSeriesElements=積み上げ系列の要素
OrthogonalSeriesAttributeSheetImpl.Title.SheetTitle=属性 > Y 系列 - 値 (Y) 系列の属性のカスタマイズ

OrthogonalSeriesDataSheetImpl.Lbl.Triggers=相互作用
OrthogonalSeriesDataSheetImpl.Lbl.DataDefinitions=データの定義
OrthogonalSeriesDataSheetImpl.Lbl.Scale=スケール
OrthogonalSeriesDataSheetImpl.Lbl.Minimum=最小 (&M):
OrthogonalSeriesDataSheetImpl.Lbl.Maximum=最大 (&X):
OrthogonalSeriesDataSheetImpl.Lbl.Step=ステップ (&S):
OrthogonalSeriesDataSheetImpl.Lbl.Unit=単位 :
OrthogonalSeriesDataSheetImpl.Lbl.MinorGridCount=補助目盛線の数 (単位ごと) (&U):
OrthogonalSeriesDataSheetImpl.Lbl.MajorGrid=目盛線
OrthogonalSeriesDataSheetImpl.Lbl.MinorGrid=補助目盛線
OrthogonalSeriesDataSheetImpl.Title.SheetTitle=データ > 値 (Y) 系列 - 値 (Y) 系列データの設定

OrthogonalSeriesLabelAttributeSheetImpl.Lbl.Label=ラベル
OrthogonalSeriesLabelAttributeSheetImpl.Lbl.Title=タイトル
OrthogonalSeriesLabelAttributeSheetImpl.Title.SheetTitle=属性 > Y 系列 > ラベル - 値 (Y) 系列のラベルのカスタマイズ

AreaChart.Txt.PercentStackedDescription=積み上げ面積グラフ (割合)。積み上げ面積グラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
AreaChart.Txt.StackedDescription=積み上げ面積グラフ。積み重なった面積で表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
AreaChart.Txt.OverlayDescription=オーバーレイ面積グラフ。各系列の面積がそれぞれ個別に表示されます。\n面積は、系列の値を結合します。
AreaChart.Txt.HelpText=面積グラフは、レンダリングされる各系列を表します。オプションのマーカを使用して、プロット中のデータに対応するポイントを強調表示することもできます。積み上げ面積グラフは、面積系列のデータポイントに対して低い位置にあるカテゴリポイントを表します。積み上げ面積グラフ (割合) では、各データ値が、カテゴリの合計の割合でプロットされます。
AreaChart.Txt.DefaultAreaChartTitle=面積グラフのタイトル
AreaChart.Txt.DisplayName=面積グラフ
AreaChart.SubType.Stacked=積み上げ
AreaChart.SubType.PercentStacked=積み上げ (割合)
AreaChart.SubType.Overlay=オーバーレイ
AreaSeriesUIProvider.Lbl.SeriesDefinition=系列の定義

MeterChart.Txt.DefaultMeterChartTitle=メーターグラフのタイトル
MeterChart.Txt.DisplayName=メーターグラフ
MeterChart.SubType.Standard=標準メーターグラフ
MeterChart.SubType.Superimposed=重ね合わせメーターグラフ
MeterChart.Tooltip.InputExpression=各項目の凡例として表示されている式を入力してください。
MeterChart.Txt.HelpText=メーターグラフ。データの測定値を示します。測定値の範囲に応じて領域を色分けします。メーター上のダイヤルを指す針によって値が示されます。
MeterChart.Txt.Description=標準メーターグラフには、1つのダイヤルが含まれます。\nダイヤルの背景は、いくつかの領域に色分けできます。
MeterChart.Txt.SuperimposedDescription=重ね合わせメーターグラフには、同じ領域を持つ複数のダイヤルが含まれます。\n各ダイヤルは重なり合い、1つの領域に複数の針を表示できます。
MeterSeriesAttributeComposite.Lbl.Radius=半径 (&U):
MeterSeriesAttributeComposite.Lbl.StartAngle=基線の角度 (&G):
MeterSeriesAttributeComposite.Lbl.StopAngle=終端の角度 (&E):
MeterSeriesAttributeSheetImpl.Lbl.Type=次のように入力します。
MeterSeriesAttributeSheetImpl.Lbl.Fill=塗りつぶし(&I) :
MeterSeriesAttributeComposite.Lbl.DialTicks=目盛り(&T)
MeterSeriesAttributeComposite.Lbl.DialScale=スケール(&C)
BarSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、BarSeriesAttributeComposite の引数としては使用できません。
BarSeriesUIProvider.Lbl.SeriesDefinition=系列の定義
BarSeriesAttributeComposite.Lbl.SeriesOutline=シリーズのアウトライン(&O) :
BarBottomAreaComponent.Label.CategoryXSeries=カテゴリ系列 (X)(&C) :

StockSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、StockSeriesAttributeComposite の引数としては使用できません。
StockSeriesDataDefinitionComposite.Lbl.StockSeriesDefinition=株価系列の定義
StockSeriesAttributeComposite.Lbl.CandleFill=ローソク足の塗りつぶし :
StockSeriesAttributeComposite.Lbl.StickLength=棒の長さ :
StockSeriesAttributeComposite.Lbl.Line=線
StockSeriesDataDefinitionComposite.Lbl.High=高値 :
StockSeriesDataDefinitionComposite.Lbl.HighValue=\n - 最高値
StockSeriesDataDefinitionComposite.Lbl.Low=安値 :
StockSeriesDataDefinitionComposite.Lbl.LowValue=\n - 最安値
StockSeriesDataDefinitionComposite.Lbl.Open=始値 :
StockSeriesDataDefinitionComposite.Lbl.OpenValue=\n - 取引開始時の値
StockSeriesDataDefinitionComposite.Lbl.Close=終値 :
StockSeriesDataDefinitionComposite.Lbl.CloseValue=\n - 取引終了時の値

StockChart.Txt.DefaultStockChartTitle=株価グラフのタイトル
StockChart.Txt.DisplayName=株価グラフ
StockChart.Txt.BarStickDescription=棒株価グラフ。棒状の縦線とそれらを結ぶ 2 本の横線から構成されます。\n縦線の上下のポイントは株価の始値と終値を示します。\n2 本の横線は、高値と安値を示します。
StockChart.Txt.CandleStickDescription=ローソク足株価グラフ。ボックスとその上下両端から伸びる線から構成されます。\nボックスの上下の両端は株価の始値と終値を示します。\n各線の上端は高値を表し、下端は安値を表します。 
StockChart.Txt.HelpText=株価グラフ。各線が 1 つの株取引を表します。各線の上端は取引の高値を表し、下端は安値を表します。始値と終値を結ぶ線によって、各データポイントの上にローソク状の形が表示されます。 
StockChart.SubType.CandleStick=ローソク足株価グラフ
StockChart.SubType.BarStick=棒株価グラフ

LineAttributesComposite.Lbl.Style=スタイル :
LineAttributesComposite.Lbl.Width=幅 :
LineAttributesComposite.Lbl.Color=カラー :
LineAttributesComposite.Lbl.IsVisible=可視
LineSeriesUIProvider.Lbl.SeriesDefinition=系列の定義
LineSeriesAttributeComposite.Lbl.ShadowColor=影(&D) :
LineSeriesAttributeComposite.Lbl.Marker=マーカ
LineChart.Txt.PercentStackedDescription=積み上げ線グラフ (割合)。積み上げ線グラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
LineSeriesAttributeComposite.Lbl.IsVisible=可視(&V)
LineSeriesAttributeComposite.Lbl.Type=型 :
LineSeriesAttributeComposite.Lbl.Size=サイズ (&S):
LineSeriesAttributeComposite.Lbl.Line=線
LineSeriesMarkerSheet.Label.Markers=マーカ
LineSeriesMarkerSheet.Label.Add=追加(&A)
LineSeriesMarkerSheet.Label.Remove=削除(&R)
LineSeriesAttributeComposite.Lbl.LinePalette=系列パレットを線の色として使用する(&P)
LineChart.Txt.DefaultLineChartTitle=線グラフのタイトル
LineSeriesAttributeComposite.Lbl.ConnectMissingValue=不明な値を結ぶ(&O)
LineChart.Txt.DisplayName=線グラフ
LineChart.SubType.Stacked=積み上げ
LineChart.SubType.PercentStacked=積み上げ (割合)
LineChart.SubType.Overlay=オーバーレイ
LineChart.Txt.StackedDescription=積み上げ線グラフ。積み重なった横線で表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
LineChart.Txt.OverlayDescription=オーバーレイ線グラフ。各系列の折れ線がそれぞれ個別に表示されます。\n折れ線は、系列の値を結合します。
LineSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、LineSeriesAttributeComposite の引数としては使用できません。
LineSeriesAttributeComposite.Lbl.ShowLinesAsCurves=直線を曲線で表示する(&H)
LineChart.Txt.HelpText=線グラフは、レンダリングされる各系列を表します。オプションのマーカを使用して、プロット中のデータに対応するポイントを強調表示することもできます。積み上げ線グラフは、線系列のデータポイントに対して低い位置にあるカテゴリポイントを表します。積み上げ線グラフ (割合) では、各データ値が、カテゴリの合計の割合でプロットされます。

ScatterChart.Txt.Description=分布グラフ。カテゴリデータと値データを座標とし、値を点でプロットします。\n各データ値はマーカで示します。
ScatterChart.Txt.HelpText=分布グラフ。カテゴリのない軸に対応するデータ値をランダムな間隔で表示します。各データポイントは、X 軸と Y 軸のスケールに対応します。
ScatterSeriesUIProvider.Lbl.SeriesDefinition=系列の定義
ScatterChart.Txt.DefaultScatterChartTitle=分布グラフのタイトル
ScatterChart.Txt.DisplayName=分布グラフ
ScatterChart.SubType.Standard=標準分布グラフ

BarChart.Txt.DefaultBarChartTitle=棒グラフのタイトル
BarChart.Txt.DisplayName=棒グラフ
BarChart.SubType.Stacked=積み上げ
BarChart.SubType.PercentStacked=積み上げ (割合)
BarChart.SubType.Side=並列
BarChart.Txt.StackedDescription=積み上げ棒グラフ。積み重なった横棒で表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
BarChart.Txt.PercentStackedDescription=積み上げ棒グラフ (割合)。積み上げ棒グラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
BarChart.Txt.HelpText=データのクラスやグループを比較するには、棒グラフを作成します。同じカテゴリに複数の系列データがある場合は、別の棒として並列表示するか、1 つの棒に積み重なって表示されます。表示方法は、選択したサブタイプによって決まります。
BarChart.Txt.SideBySideDescription=並列棒グラフ。各系列の棒が横に並んで表示されます。\n各棒の幅はすべて等しく、プロットされる系列の数に基づいて決まります。

TubeChart.Txt.DefaultTubeChartTitle=円筒グラフのタイトル
TubeChart.Txt.DisplayName=円筒
TubeChart.SubType.Stacked=積み上げ
TubeChart.SubType.PercentStacked=積み上げ (割合)
TubeChart.SubType.Side=並列
TubeChart.Txt.StackedDescription=積み上げ円筒グラフ。積み重なった円筒で表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
TubeChart.Txt.PercentStackedDescription=積み上げ円筒グラフ (割合)。積み上げ円筒グラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
TubeChart.Txt.HelpText=データのクラスやグループを比較するには、円筒グラフを作成します。同じカテゴリに複数の系列データがある場合は、別の円筒として並列表示するか、1 つの円筒に積み重なって表示されます。表示方法は、選択したサブタイプによって決まります。
TubeChart.Txt.SideBySideDescription=並列円筒グラフ。各系列の円筒が横に並んで表示されます。\n各円筒の幅はすべて等しく、プロットされる系列の数に基づいて決まります。

ConeChart.Txt.DefaultConeChartTitle=円錐グラフのタイトル
ConeChart.Txt.DisplayName=円錐
ConeChart.SubType.Stacked=積み上げ
ConeChart.SubType.PercentStacked=積み上げ (割合)
ConeChart.SubType.Side=並列
ConeChart.Txt.StackedDescription=積み上げ円錐グラフ。積み重なった円錐で表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
ConeChart.Txt.PercentStackedDescription=積み上げ円錐グラフ (割合)。積み上げ円錐グラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
ConeChart.Txt.HelpText=データのクラスやグループを比較するには、円錐グラフを作成します。同じカテゴリに複数の系列データがある場合は、別の円錐として並列表示するか、1 つの円錐に積み重なって表示されます。表示方法は、選択したサブタイプによって決まります。
ConeChart.Txt.SideBySideDescription=並列円錐グラフ。各系列の円錐が横に並んで表示されます。\n各円錐の幅はすべて等しく、プロットされる系列の数に基づいて決まります。

PyramidChart.Txt.DefaultPyramidChartTitle=ピラミッドグラフのタイトル
PyramidChart.Txt.DisplayName=ピラミッド
PyramidChart.SubType.Stacked=積み上げ
PyramidChart.SubType.PercentStacked=積み上げ (割合)
PyramidChart.SubType.Side=並列
PyramidChart.Txt.StackedDescription=積み上げピラミッドグラフ。積み重なったピラミッドで表示されます。\n正の値と負の値は、原点をはさんで上下にそれぞれ積み重ねられます。
PyramidChart.Txt.PercentStackedDescription=積み上げピラミッドグラフ (割合)。積み上げピラミッドグラフの高さの合計\n(各単位の最低点から最高点まで) は 100 になります。
PyramidChart.Txt.HelpText=データのクラスやグループを比較するには、ピラミッドグラフを作成します。同じカテゴリに複数の系列データがある場合は、別のピラミッドとして並列表示するか、1 つのピラミッドに積み重なって表示されます。表示方法は、選択したサブタイプによって決まります。
PyramidChart.Txt.SideBySideDescription=並列ピラミッドグラフ。各系列のピラミッドが横に並んで表示されます。\n各ピラミッドの幅はすべて等しく、プロットされる系列の数に基づいて決まります。

PieChart.Txt.DefaultPieChartTitle=パイグラフのタイトル
PieChart.Txt.DisplayName=パイグラフ
PieChart.SubType.Standard=標準パイグラフ
PieSeriesUIProvider.Lbl.OrthogonalPrefix=値 
PieSeriesUIProvider.Lbl.SeriesDefinition=系列の定義
PieBottomAreaComponent.Label.Percentage=割合 (%)
PieSeriesAttributeComposite.Button.Direction=時計回り方向
PieSeriesAttributeComposite.Button.Direction.ToolTipText=パイスライスを時計回り方向にレンダリングするかどうかを指定します。
PieSeriesAttributeComposite.Button.InnerRadius=内側半径 :
PieSeriesAttributeComposite.Grp.Slice=スライス
PieSeriesAttributeComposite.Lbl.SliceOutline=スライスの外枠(&O) :
PieSeriesAttributeComposite.Lbl.LeaderLine=引き出し線
PieSeriesAttributeComposite.Lbl.LeaderLineStyle=引き出し線の種類(&A) :
PieSeriesAttributeComposite.Lbl.LeaderLineLength=引き出し線の長さ(&L) :
PieBottomAreaComponent.Label.AnySliceWithASize=入力サイズより小さいスライスは、他のカテゴリに統合されます。
PieBottomAreaComponent.Label.ExplodeSliceWhen=スライスを切り出す条件 (&X):
PieBottomAreaComponent.Label.ByDistance=間隔(&D) :
PieBaseSeriesComponent.Label.CategoryDefinition=カテゴリの定義(&C) :
PieBaseSeriesComponent.Text.SpecifyExplodeSlice=切り出すスライスの指定
PieBaseSeriesComponent.Tooltip.EnterBooleanExpression=どのスライスを切り出すかを決めるための論理式を入力してください。このフィールドを空白のままにすると、スライスを切り出す間隔がすべてのスライスに適用されます。
PieLeftAreaComponent.Label.SliceSizeDefinition=スライスのサイズ :
PieSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、PieSeriesAttributeComposite の引数としては使用できません。
PieSeriesAttributeComposite.Lbl.Explosion=切り出し :
PiesBottomAreaComponent.Label.TheRotationOfTheChart=パイの回転 : 最初のパイスライスの開始角度
PieBottomAreaComponent.Label.Rotation=パイの回転(&N):
PieBottomAreaComponent.Label.MinimumSlice=最小スライス (&M):
PieBottomAreaComponent.Label.MinSliceLabel=スライスラベル (&L):
PieSeriesUIProvider.Lbl.BasePrefix=カテゴリ 
PieBottomAreaComponent.Label.Value=値
PieBottomAreaComponent.Label.Ratio=パイの比率(&P) :
PieBottomAreaComponent.Label.TheRatioOfTheChart=パイの比率 : 高さ/幅の比率 (0: 自動調整)
PieChart.Txt.Description=パイグラフ。それぞれの値を 1 つのスライスとして表します。\n各スライスの大きさは、全体に占める割合を表します。\n複数の系列をパイグラフで表す場合は、各系列につき 1 つのパイがプロットされ、\n複数のパイグラフが作成されます。
PieChart.Txt.HelpText=パイグラフは、系列またはカテゴリのデータ値を全体に占める割合 (スライス) として表します。系列が複数ある場合は、グリッド上に複数のパイグラフが表示されます。

SeriesUIProvider.Lbl.OrthogonalPrefix=値 
SeriesUIProvider.Lbl.SeriesDefinition=系列の定義
SeriesSheetImpl.Label.CategoryBaseSeries=カテゴリ系列
SeriesUIProvider.Lbl.BasePrefix=カテゴリ 
SeriesSheetImpl.Label.Title=タイトル
SeriesSheetImpl.Label.Visible=可視
SeriesSheetImpl.Label.Stacked=積み上げ
SeriesSheetImpl.Label.Series=系列
SeriesYSheetImpl.Label.Needles=針
SeriesYSheetImpl.Label.Needles&=針(&N)
SeriesYSheetImpl.Label.Region=領域
SeriesYSheetImpl.Label.Region&=領域(&O)
SeriesYSheetImpl.Label.Labels=系列ラベル
SeriesYSheetImpl.Label.Labels&=ラベル(&E)
SeriesYSheetImpl.Label.DialLabels=ダイヤルラベル
SeriesYSheetImpl.Label.DialLabels&=ダイヤルラベル(&D) 
SeriesYSheetImpl.Label.Titles=タイトル
SeriesYSheetImpl.Label.Titles&=タイトル(&T)
SeriesYSheetImpl.Label.Markers=系列のマーカ
SeriesYSheetImpl.Label.PositiveMarkers=正数のマーカ
SeriesYSheetImpl.Label.NegativeMarkers=負数のマーカ
SeriesYSheetImpl.Label.Markers&=マーカ(&M)
SeriesYSheetImpl.Label.PositiveMarkers&=正数のマーカ(&P)
SeriesYSheetImpl.Label.NegativeMarkers&=負数のマーカ(&N)
SeriesYSheetImpl.Label.Decoration=タスク
SeriesYSheetImpl.Label.Decoration&=タスクラベル(&T)
SeriesLabelSheet.Label.Format=書式
SeriesLabelSheet.Label.Values=値
SeriesGroupingComposite.Lbl.Type=種類 (&T):
SeriesGroupingComposite.Lbl.Unit=単位 (&U):
SeriesYSheetImpl.Label.Trendline=曲線のあてはめ
SeriesYSheetImpl.Label.Trendline&=曲線のあてはめ(&C)
SeriesTrendlineSheet.Label.Label=ラベル
SeriesTrendlineSheet.Label.Label&=ラベル(&L) :
SeriesGroupingComposite.Lbl.Grouping=グループ化
SeriesGroupingComposite.Lbl.Enabled=有効化(&E)
SeriesSheetImpl.Label.ValueYSeries=値系列 (Y)
SeriesSheetImpl.Label.Translucent=半透明
SeriesSheetImpl.Label.SeriesPalette=系列パレット
SeriesSheetImpl.Label.SeriesPalette&=系列パレット(&S)
SeriesYSheetImpl.Label.DataPoint=データポイント
SeriesTrendlineSheet.Label.Outline=外枠
SeriesTrendlineSheet.SeriesTrendlineSheet.Lbl.IsVisible=可視(&I)
SeriesGroupingComposite.Lbl.Interval=間隔 (&V):
SeriesYSheetImpl.Label.ShowLabels=系列ラベルを表示する(&S)
SeriesYSheetImpl.Label.ShowDialLabels=ダイヤルラベルを表示する(&S)
SeriesYSheetImpl.Label.ShowDecoLabels=タスクラベルを表示する(&W)
SeriesYSheetImpl.Label.ShowTrendline=あてはめる曲線の表示(&U)
SeriesYSheetImpl.Label.Interactivity&=相互作用(&R)
SeriesYSheetImpl.Label.Interactivity=系列の相互作用
SeriesGroupingComposite.Lbl.AggregateExpression=集計式 (&A):
SeriesGroupingComposite.Tooltip.SelectIntervalForGrouping=グループ化の間隔を選択してください。このフィールドに 0 を指定すると、X 軸 (カテゴリ値) に基づいてグループ化されます。
SeriesPaletteSheet.Label.Auto=自動(&T)
SeriesPaletteSheet.Tab.Axis=軸 
SeriesPaletteSheet.Tab.Series=系列 
SeriesSheetImpl.Label.ValueOrthogonalSeries=値系列
TitleBlockAttributeSheetImpl.Lbl.Caption=ラベルのキャプション :
TitleBlockAttributeSheetImpl.Lbl.BlockProperties=ブロックのプロパティ
TitleBlockAttributeSheetImpl.Lbl.IsBlockVisible=ブロックを表示
TitleBlockAttributeSheetImpl.Lbl.Anchor=アンカー :
TitleBlockAttributeSheetImpl.Lbl.Stretch=拡大 :
TitleBlockAttributeSheetImpl.Lbl.Background=背景 :
TitleBlockAttributeSheetImpl.Lbl.Insets=インセット
TitlePropertiesSheet.Label.TitleArea=タイトルの領域
TitlePropertiesSheet.Label.Background=背景(&B) :
TitleBlockAttributeSheetImpl.Lbl.Outline=外枠
TitlePropertiesSheet.Label.Interactivity=相互作用
TitleBlockAttributeSheetImpl.Lbl.LabelProperties=ラベルのプロパティ
TitleBlockAttributeSheetImpl.Lbl.ChartTitle=グラフのタイトル
TitleBlockAttributeSheetImpl.Title.SheetTitle=レイアウト > タイトル風呂 - グラフのタイトル領域の書式設定

LegendAttributeSheetImpl.Lbl.GeneralProperties=一般プロパティ - 凡例の周辺領域
LegendAttributeSheetImpl.Lbl.ClientAreaProperties=クライアント領域のプロパティ - 凡例の領域
LegendAttributeSheetImpl.Title.SheetTitle=レイアウト > 凡例 - 凡例領域の書式設定
LegendLayoutSheet.Label.TitlePercent=タイトルの割合(&T) :
LegendLayoutSheet.Label.MaxPercent=最大の割合(&M) :
LegendLayoutSheet.Label.WrappingWidth=折り返し幅 (&W):
SampleDataSheetImpl.Lbl.XSeries=X 系列
SampleDataSheetImpl.Lbl.BaseSampleValues=サンプル値 :\n {0}
SampleDataSheetImpl.Lbl.SampleValues=サンプル値 :
SampleDataSheetImpl.Lbl.YSeries=Y 系列
SampleDataSheetImpl.Lbl.SimulateSeriesCount=シミュレートする系列の数 :
SampleDataSheetImpl.Lbl.Update=更新
SampleDataSheetImpl.Title.SheetTitle=データ > サンプル - サンプルデータをプレビュー用に設定

PlotAttributeSheetImpl.Lbl.GeneralProperties=一般プロパティ - 軸を含めた領域
PlotAttributeSheetImpl.Lbl.ClientAreaProperties=クライアント領域のプロパティ - 軸内の領域
PlotAttributeSheetImpl.Title.SheetTitle=レイアウト > プロット - プロット領域の書式設定

LabelBlockAttributeSheetImpl.Lbl.LabelCaption=ラベルのキャプション :
LabelBlockAttributeSheetImpl.Lbl.BlockProperties=ブロックのプロパティ
LabelBlockAttributeSheetImpl.Lbl.IsBlockVisible=ブロックを表示
LabelBlockAttributeSheetImpl.Lbl.Anchor=アンカー :
LabelBlockAttributeSheetImpl.Lbl.Stretch=拡大 :
LabelBlockAttributeSheetImpl.Lbl.Background=背景 :
LabelBlockAttributeSheetImpl.Lbl.Insets=インセット
LabelAttributesComposite.Lbl.IsVisible=可視(&V)
LabelAttributesComposite.Lbl.IsVisible2=可視(&E)
LabelAttributesComposite.Lbl.Position=位置 (&P):
LabelAttributesComposite.Lbl.Background=背景(&B) :
LabelAttributesComposite.Lbl.Outline=外枠
LabelBlockAttributeSheetImpl.Lbl.Outline=外枠
LabelBlockAttributeSheetImpl.Lbl.LabelProperties=ラベルのプロパティ
LabelBlockAttributeSheetImpl.Lbl.LabelBlock=ラベルブロック 

DataDefinitionComposite.Tooltip.InvokeExpressionBuilder=計算式ビルダの起動
DataDefinitionSelector.Exception.NotSupportedForMultipleAxes=\ は、複数軸には使用できません。\
DataDefinitionComposite.Tooltip.InvokeRuleEditor=規則エディタの起動

RuleEditorDialog.Title.RuleEditor=規則エディタ - {0}
RuleEditorDialog.Lbl.Rules=規則
RuleEditorDialog.Lbl.Type=型 :
RuleEditorDialog.Lbl.Value=値 :
RuleEditorDialog.Lbl.Remove=削除
RuleEditorDialog.Lbl.Add=追加
RuleEditorDialog.Lbl.Update=更新
RuleEditorDialog.Exception.InvalidRule=エラー : 無効な規則インデックスが渡されました。

FillCanvas.Transparent=透明
FillCanvas.Auto=自動
FillChooserComposite.Button.Pattern=パターン
FillChooserComposite.Lbl.Opacity=透明度 : {0, number, integer}
FillChooserComposite.Lbl.Gradient=グラデーション
FillChooserComposite.Lbl.Transparent=透明
FillChooserComposite.Lbl.CustomColor=カスタムカラー
FillChooserComposite.Lbl.Image=イメージ
FillChooserComposite.Lbl.PositiveNegative=正数/負数
FillChooserComposite.Lbl.Auto=自動

ClientAreaAttributeComposite.Lbl.Background=背景 :
ClientAreaAttributeComposite.Lbl.Shadow=影(&D) :
ClientAreaAttributeComposite.Lbl.Outline=外枠

InsetsComposite.Lbl.Insets=インセット ({0})
InsetsComposite.Lbl.Top=上(&T):
InsetsComposite.Lbl.Left=左(&L):
InsetsComposite.Lbl.Bottom=下(&M):
InsetsComposite.Lbl.Right=右(&R):
InsetsEditorDialog.Title.InsetsEditor=インセットエディタダイアログボックス
InsetsEditorDialog.Lbl.UnitsMessage=* すべての値は {0} 単位で表示されます。

ExternalizedTextEditorDialog.Title.ExternalizeText=テキストの外部化
ExternalizedTextEditorDialog.Lbl.ExternalizeText=テキストの外部化(&X)
ExternalizedTextEditorComposite.Warn.KeyNotFound=キーがプロパティファイルにないか、プロパティファイルが存在しません。
ExternalizedTextEditorComposite.Lbl.EditText=外部テキストエディタの起動
ExternalizedTextEditorDialog.Lbl.LookupKey=検索キー (&L):
ExternalizedTextEditorDialog.Lbl.DefaultValue=デフォルト値 (&D):
ExternalizedTextEditorDialog.Lbl.ExternalizedValue=外部化された値 :
ExternalizedTextEditorDialog.Warn.KeyNotFound=キーがプロパティファイルにないか、プロパティファイルが存在しません。
ExternalizedTextEditorDialog.Lbl.Value=<キーの値 ''{0}''>

Format.Button.Label=書式
Format.Button.Lbl&=書式(&M)
FormatSpecifierComposite.error.Title=書式指定子のエラー
FormatSpecifierComposite.error.Message=無効な書式指定子のパラメタ値 : "{0}"
FormatSpecifierComposite.Lbl.DataType=データ型 (&D):
FormatSpecifierComposite.Lbl.DateTime=日付 / 時間
FormatSpecifierComposite.Lbl.Undefined=なし(&N)
FormatSpecifierComposite.Lbl.Numerator=分子の値(&V)(1 〜 100):
FormatSpecifierComposite.Lbl.Standard=標準(&S)
FormatSpecifierComposite.Lbl.String=文字列
FormatSpecifierComposite.Lbl.Type=型 (&Y):
FormatSpecifierComposite.Lbl.None=<なし>
FormatSpecifierComposite.Lbl.Details=詳細 (&E):
FormatSpecifierComposite.Lbl.Delimiter=区切り文字 (&E):
FormatSpecifierComposite.Lbl.Pattern=パターン (&P):
FormatSpecifierComposite.Lbl.Prefix=接頭辞 (&P):
FormatSpecifierComposite.Lbl.Preview=プレビュー :
FormatSpecifierComposite.Lbl.Approximate=近似 (&R):
FormatSpecifierComposite.Lbl.Suffix=接尾辞 (&X):
FormatSpecifierComposite.Lbl.Number=数値
FormatSpecifierPreview.Lbl.NoFormat=形式が指定されていません。
FormatSpecifierComposite.Lbl.Multiplier=乗数 (&M):
FormatSpecifierComposite.Lbl.FractionDigits=小数点以下桁数 (&G):
FormatSpecifierComposite.Tooltip.InputAPositiveInteger=固定分子には正の整数を指定してください。
FormatSpecifierComposite.Tooltip.FractionDigits=プロパティの詳細設定 : 近似値の精度を決定します。
FormatSpecifierComposite.Lbl.MaxRecursionTimes=分母の最大桁数(&O)(1 〜 8) :
FormatSpecifierComposite.Lbl.Fraction=分数(&F)
FormatSpecifierDialog.Title.EditFormat=書式の編集
FormatSpecifierComposite.Lbl.Advanced=詳細設定(&A)
FormatSpecifierComposite.Lbl.DatePattern=パターン (&P):
FormatSpecifierComposite.Lbl.ExampleFormats=サンプルの書式(&E) :
FormatSpecifierComposite.Lbl.NumberPattern=パターン (&P):
FormatSpecifierComposite.StringFormat.LowerCase=小文字
FormatSpecifierComposite.StringFormat.PhoneNumber=電話番号
FormatSpecifierComposite.StringFormat.SocialSNumber=社会保険番号
FormatSpecifierComposite.StringFormat.UpperCase=大文字
FormatSpecifierComposite.StringFormat.WhiteSpace=スペースを残す
FormatSpecifierComposite.StringFormat.ZipCode=郵便番号 +4
FormatSpecifierPreview.Lbl.NotAvailable=使用できません。
GridAttributesComposite.Lbl.Ticks=目盛を付ける
GridAttributesComposite.Lbl.Style=種類 :
GradientEditorDialog.Lbl.EndColor=終了色 :
GradientEditorDialog.Lbl.Rotation=回転

FontDefinitionDialog.Lbl.Rotation=回転:
FontDefinitionDialog.Tooltip.Accept=確認
FontDefinitionDialog.Tooltip.Bold=太字
FontDefinitionDialog.Tooltip.Italic=斜体
FontDefinitionDialog.Tooltip.AlignTopCenter=配置 - 中央上
FontDefinitionDialog.Tooltip.AlignCenter=配置 - 中央
FontDefinitionDialog.Tooltip.Underline=下線
FontDefinitionDialog.Tooltip.AlignTopRight=配置 - 右上
FontDefinitionDialog.Tooltip.Strikethrough=取り消し線
FontDefinitionDialog.Title.FontDescriptor=フォントの編集
FontDefinitionDialog.Lbl.Font=フォント名 (&F):
FontDefinitionDialog.Lbl.Size=サイズ (&Z):
FontDefinitionDialog.Lbl.Color=カラー (&C):
FontDefinitionDialog.Lbl.Style=種類 :
FontDefinitionDialog.Lbl.Format=書式 :
FontDefinitionDialog.Lbl.Wrap=折り返し
FontDefinitionDialog.Lbl.Preview=プレビュー:
FontDefinitionDialog.Lbl.Alignment=配置:
FontDefinitionDialog.Label.Degree=度(&D) :
FontDefinitionDialog.Tooltip.AlignTopLeft=配置 - 左上
FontDefinitionDialog.Tooltip.AlignCenterLeft=配置 - 中央左
FontDefinitionDialog.Tooltip.AlignCenterRight=配置 - 右上
FontDefinitionDialog.Tooltip.AlignBottomLeft=配置 - 左下
FontDefinitionDialog.Tooltip.AlignBottomCenter=配置 - 中央下
FontDefinitionDialog.Tooltip.AlignBottomRight=配置 - 右下
FontDefinitionDialog.Lbl.Strikethrough=取り消し線(&S)
FontDefinitionComposite.Tooltip.FontDialog=フォントエディタの起動

TriggerEditorDialog.Title.TriggerEditor=インタラクションエディタ - {0}
TriggerDataComposite.Lbl.ActionDetails=アクションの詳細
TriggerDataComposite.Lbl.SeriesDefinition=系列の定義 :
TriggerDataComposite.Label.CallbackDescription=CallBack アクションは API の SWT (または Swing レンダリング) で使用し、Java イベントハンドラをフッキングを可能にします。
TriggerDataComposite.Label.HighlightDescription=対応するデータ要素をハイライトします (該当する場合)。
TriggerDataComposite.Label.VisiblityDescription=対応するデータ要素の表示と非表示を切り替えます (該当する場合)。
TriggerDataComposite.Label.Description=URL をその種類に応じて編集します (URI、内部ブックマーク、ドリルスルーリンクなど)。
TriggerDataComposite.Label.DPVisibilityDescription=対応するデータ要素のラベルの表示と非表示を切り替えます (該当する場合)。
TriggerDataComposite.Label.OptionalURLParameters=各データポイントの次の値を表わすオプションの URL パラメタを指定してください。
TriggerDataComposite.Label.TooltipUsingDataLabelOfSeries=ツールチップのテキストを指定しない場合は、対応する系列のデータラベルが使用されます。
TriggerDataComposite.Tooltip.InvokeURLBuilder=URL ビルダの起動
TriggerDataComposite.Tooltip.Advanced=オプションの URL パラメタの表示
TriggerDataComposite.Label.None=なし
TriggerDataComposite.Tooltip.ParameterCategory=カテゴリのパラメタ名 : ...&&&name=<カテゴリ> 
TriggerDataComposite.Tooltip.ParameterValue=値のパラメタ名 : ...&&&name=<値> 
TriggerDataComposite.Tooltip.ParameterSeries=系列のパラメタ名: ...&&&name=<系列>
TriggerDataComposite.Lbl.TooltipDelay=ツールチップを表示するまでの時間 (ミリ秒) (&D):
TriggerDataComposite.Lbl.ParameterNames=オプションのデータポイントの URL パラメタ
TriggerDataComposite.Lbl.CategorySeries=カテゴリ系列(&C) :
TriggerDataComposite.Lbl.Cursor=カーソル(&S) :
TriggerDataComposite.TemporaryName.Hyperlink=ハイパーリンク
TriggerDataComposite.Text.EditBaseURL=ベース URL の編集(&U)...
TriggerDataComposite.Text.Advanced=詳細設定(&A) >>
TriggerDataComposite.Text.OpenAdvanced=詳細設定(&A) <<
TriggerDataComposite.Lbl.ValueSeries=値系列(&V) :
TriggerDataComposite.Lbl.ValueSeriesName=値系列の名前(&S) :
TriggerDataComposite.Tooltip.InputScript=\ 表示環境内で実行するスクリプト (通常は JavaScript) を入力してください。
TriggerEditorComposite.Lbl.Remove=削除(&R)
TriggerEditorComposite.Lbl.Add=追加(&A)
TriggerDataComposite.Lbl.Event=イベント(&V) :
TriggerDataComposite.Lbl.None.accessibility=<なし>
TriggerDataComposite.Lbl.None.MouseClick=<なし>
TriggerDataComposite.Lbl.None.MouseHover=<なし>
TriggerDataComposite.Lbl.None.onblur=<なし>
TriggerDataComposite.Lbl.None.onclick=<なし>
TriggerDataComposite.Lbl.None.ondblclick=<なし>
TriggerDataComposite.Lbl.None.onfocus=<なし>
TriggerDataComposite.Lbl.None.onkeydown=<なし>
TriggerDataComposite.Lbl.None.onkeypress=<なし>
TriggerDataComposite.Lbl.None.onkeyup=<なし>
TriggerDataComposite.Lbl.None.onload=<なし>
TriggerDataComposite.Lbl.None.onmousedown=<なし>
TriggerDataComposite.Lbl.None.onmousemove=<なし>
TriggerDataComposite.Lbl.None.onmouseout=<なし>
TriggerDataComposite.Lbl.None.onmouseover=<なし>
TriggerDataComposite.Lbl.None.onmouseup=<なし>
TriggerDataComposite.Lbl.Action=アクション (&C):
TriggerDataComposite.Lbl.Script=スクリプト (&P):
TriggerDataComposite.Lbl.Target=ターゲット :
TriggerEditorComposite.Lbl.Update=<< 更新(&U)
TriggerDataComposite.Lbl.TooltipText=ツールチップのテキスト (&X):
TriggerDataComposite.Lbl.BaseURL=ベース URL の編集 :
TriggerDataComposite.Lbl.Image=イメージ(&I)

GradientEditorDialog.Lbl.GradientEditor=グラデーションエディタ 
GradientEditorDialog.Lbl.StartColor=開始色 :
GradientEditorDialog.Lbl.Preview=プレビュー

PaletteEditorComposite.Lbl.Add=追加(&A)
PaletteEditorComposite.Lbl.Remove=削除(&R)
PaletteEditorComposite.Lbl.Up=上へ
PaletteEditorComposite.Lbl.Down=下へ
PatternImageEditorDialog.Button.Cancel=キャンセル(&C)
PatternImageEditorDialog.Button.OK=OK(&O)
PatternImageEditorDialog.Group.Color=カラー :
PatternImageEditorDialog.Group.Pattern=パターン :
PatternImageEditorDialog.Label.Background=背景(&B) :
PatternImageEditorDialog.Label.Foreground=前景(&F) :
PatternImageEditorDialog.Title.PatternFillEditor=Pattern Image Editor

LabelAttributesComposite.Lbl.Label=ラベル
LabelAttributesComposite.Lbl.Font=フォント(&O) :
LabelAttributesComposite.Lbl.Shadow=影(&S) :
LabelBlockAttributeSheetImpl.Title.SheetTitle=レイアウト > ラベルブロック - ラベルブロック領域の書式設定

BlockAttributeComposite.Lbl.IsBlockVisible=ブロックを表示
BlockAttributeComposite.Lbl.Anchor=アンカー (&A):
BlockAttributeComposite.Lbl.Stretch=拡大 (&S):
BlockAttributeComposite.Lbl.Insets=インセット
BlockPropertiesSheet.Label.Outline=外枠
BlockAttributeComposite.Lbl.Outline=外枠
BlockAttributeComposite.Lbl.HorizontalSpacing=左右の間隔 (&H):
BlockAttributeComposite.Lbl.VerticalSpacing=上下の間隔 (&V):
BlockAttributeComposite.Lbl.Orientation=向き (&O):
BlockAttributeComposite.Lbl.Direction=方向 (&D):
BlockAttributeComposite.Lbl.Position=位置 (&P):
BlockAttributeComposite.Lbl.ItemType=項目の型 :
BlockAttributeComposite.Title.PlotBlock=プロットブロック
BlockAttributeComposite.Title.LegendBlock=凡例ブロック
BlockAttributeComposite.Title.TitleBlock=タイトルブロック
BlockAttributeComposite.Title.LabelBlock=ラベルブロック
BlockPropertiesSheet.Label.Interactivity=相互作用

LayoutSheetImpl.Lbl.ChartProperties=グラフブロックのプロパティ
LayoutSheetImpl.Lbl.Background=背景 :
LayoutSheetImpl.Lbl.Insets=インセット
LayoutSheetImpl.Lbl.Outline=外枠
LayoutSheetImpl.Title.SheetTitle=レイアウト - グラフブロックの書式設定

AttributeSheetImpl.Lbl.ChartProperties=グラフのプロパティ
AttributeSheetImpl.Lbl.Type=種類 :
AttributeSheetImpl.Lbl.Subtype=サブタイプ :
AttributeSheetImpl.Lbl.Units=単位 (&U):
AttributeSheetImpl.Lbl.ColumnCount=グリッドの列数 (&C):
AttributeSheetImpl.Lbl.ChartBackground=グラフの背景 :
AttributeSheetImpl.Lbl.PropertyEditorDialog=拡張プロパティ
AttributeSheetImpl.Lbl.ChartWall=グラフの壁(&W) :
AttributeSheetImpl.Lbl.ChartFloor=グラフの床(&F) :
AttributeSheetImpl.Lbl.UnitSpacing=単位の間隔 (0〜100)(&P):
AttributeSheetImpl.Title.SheetTitle=属性 - グラフの属性のカスタマイズ

PropertyEditorDialog.Title.PropertyEditorDialog=拡張プロパティエディタ
PropertyEditorDialog.Lbl.Key=キー
PropertyEditorDialog.Lbl.Value=値
PropertyEditorDialog.Lbl.Add=追加(&A)
PropertyEditorDialog.Lbl.Remove=削除(&R)
HeadStyleAttributeComposite.Lbl.HeadStyle=針の先端 :
HyperlinkEditorDialog.BaseURL.Message=ベース URL を設定してください。
HyperlinkEditorDialog.ErrorMessage.ExistingText=同じ名前が既に存在します。別の名前に変更してください。
HyperlinkEditorDialog.ErrorMessage.NullText=名前は空白にできません\!
HyperlinkEditorDialog.HyperlinkName.Title.Warning=警告
HyperlinkEditorDialog.Text.MenuLabel=名前(&N) :
HyperlinkEditorDialog.Title.HyperlinkEditor=ハイパーリンクエディタ

TaskSelectType.TaskExp=グラフの種類の選択
TaskSelectType.Label.Preview=グラフのプレビュー
TaskSelectType.Label.Oritention=向き :
TaskSelectType.Label.FlipAxis=軸の反転(&X)
TaskSelectType.Selection.None=なし
TaskSelectType.Label.MultipleYAxis=複数の Y 軸(&M) :
TaskSelectType.Label.AddSecondaryAxis=2 番目の軸の追加
TaskSelectType.Selection.SecondaryAxis=2 番目の軸
TaskSelectType.Label.SeriesType=系列(&S) :
TaskSelectType.Task.Description=グラフの種類と出力形式を選択します。
TaskSelectType.Label.OutputFormat=出力形式(&O) :
TaskSelectType.Selection.MoreAxes=その他の軸
TaskSelectType.Label.SelectChartType=グラフの種類の選択
TaskSelectType.Label.SelectSubtype=サブタイプの選択
TaskSelectType.Exception.CannotSupportAxes=ChartWithoutAxes では軸を使用できません。
TaskSelectType.Exception.NotSupportedForMultipleAxes=\ は、複数軸には使用できません。\!
TaskSelectType.Label.ChartTypes=グラフの種類
TaskSelectType.Label.Dimension=次元(&D) :
TaskSelectType.Label.ChartSubtypes=グラフのサブタイプ

TaskSelectData.TaskExp=データの選択
TaskSelectData.Label.ToBindADataColumn=右クリックしてポップアップメニューを使用するか、列を系列フィールドにドラッグします。
TaskSelectData.Label.ChartPreview=グラフのプレビュー
TaskSelectData.Label.SelectDataSet=データの選択
TaskSelectData.Label.UseReportData=コンテナからデータを継承する(&I)
TaskSelectData.Label.UseReportItem=レポート項目を使用する(&R)
TaskSelectData.Label.UseDataSet=データセットを使用する(&D)
TaskSelectData.Label.CreateNew=新規作成(&C)...
TaskSelectData.Label.DataPreview=データのプレビュー
TaskSelectData.Label.DataBinding=データバインド(&A)...
TaskSelectData.Warning.TypeCheck={0} のデータ式は {1} と互換性がありません。式を修正してください。
TaskSelectData.Label.Filters=フィルタ(&T)...
TaskSelectData.Label.Parameters=パラメタ(&P)...
TaskSelectData.Task.Description=グラフに表示して系列に関連付けるデータを選択します。
TaskSelectData.Exception.UnableToSwitchToDataset=データセットに切り替えることができません。 
TaskSelectData.Label.InsertAggregation=統計を挿入する
TaskSelectData.Label.DataExpressionBuilder=データ計算式ビルダ
TaskSelectData.Label.Component=\ コンポーネント
TaskSelectData.Label.Overlay=オーバーレイ 
TaskSelectData.Label.Series=系列 
TaskSelectData.Label.UseAsCategoryXAxis=カテゴリ軸 (X) として使用する
TaskSelectData.Label.UseAsCategorySeries=カテゴリ系列として使用する
TaskSelectData.Label.PlotAsValueYSeries=値系列 (Y) としてプロットする
TaskSelectData.Tooltip.CreateNewDataset=データセットの新規作成
TaskSelectData.Label.PlotAsGaugeValue=メーター値としてプロットする
TaskSelectData.Label.PlotAsValueSeries=値系列としてプロットする
TaskSelectData.Label.UseToGroupYSeries=Y 系列のグループ化に使用する
TaskSelectData.Label.EnableLivePreview=ライブグラフプレビューの有効化
TaskSelectData.Label.UseToGroupValueSeries=値系列のグループ化に使用する

TaskFormatChart.TaskExp=グラフの書式設定
TaskFormatChart.Label.Preview=グラフのプレビュー
TaskFormatChart.LivePreviewTask.BindData=グラフプレビュー用のデータを取得・バインドしています
TaskFormatChart.Task.Description=系列のプロパティ、相互作用、レイアウト、テキストの書式、影、背景色、枠線などを指定して、グラフを調整します。

CustomPreviewTable.Exception.InvalidColumnIndexNotDefined=指定した列インデックス {0} が無効か、列がまだ定義されていません。
CustomPreviewTable.Exception.InvalidColumnIndexSpecified=指定した列インデックスが無効です。
CustomPreviewTable.Exception.InvalidColumnIndexSpecifiedOnly=指定した列インデックス {0} が無効です。テーブルには {1} 個の列しかありません。
CustomPreviewTable.Exception.RowIndexGreaterThan0=行インデックスは、0 かそれ以上にしてください。
AbstractSelectDataCustomizeUI.Label.SeriesGrouping=系列のグループ化
AbstractSelectDataCustomizeUI.Label.YAxis=Y 軸 
AbstractSelectDataCustomizeUI.Label.Series=系列 
AbstractScaleSheet.Label.ShowValuesOutside=軸の範囲外の値を表示する(&O)
MultipleHyperlinksComposite.Btn.Add=追加(&A)
MultipleHyperlinksComposite.Btn.Delete=削除(&D)
MultipleHyperlinksComposite.Btn.Down=下へ(&N)
MultipleHyperlinksComposite.Btn.Edit=編集(&E)
MultipleHyperlinksComposite.Btn.Properties=プロパティ(&P)
MultipleHyperlinksComposite.Btn.Up=上へ(&U)
MultipleHyperlinksComposite.Group.Hyperlinks=ハイパーリンク
MultipleHyperlinksComposite.Label.Tooltip=ツールヒント(&T) :
MultipleSeriesComponent.Label.OptionalYSeriesGrouping=Y 系列のグループ化 (オプション)(&O) :
MultipleSeriesComponent.Label.OptionalOverlayGrouping=オーバーレイのグループ化 (オプション)(&O) :
MultipleSeriesComponent.Label.OptionalGrouping=グループ化 (オプション)(&O) :
MultipleSeriesComponent.Label.GroupSorting=グループのソート(&S) :
SelectDataChartWithAxisUI.Label.ValueYSeries=値系列 (Y) :
MultipleSeriesComponent.Label.Series=系列 
SelectDataChartWithoutAxisUI.Label.Series=系列 
DataDefinitionSelector.Label.Series=系列
DataDefinitionSelector.Text.NewSeries=<系列の新規作成...>
DataDefinitionSelector.Text.NewAxis=<軸の新規作成...>
DataDefinitionSelector.Tooltip.RemoveSeries=選択した系列の削除
DataDefinitionSelector.Tooltip.RemoveAxis=選択した軸の削除
DataDefinitionSelector.Label.YAxis=Y 軸 
DataDefinitionSelector.Label.Axis=軸 
DialBottomAreaComponent.Label.Dial=ダイヤル
DialBottomAreaComponent.Label.GaugeValueDefinition=メーター値の定義 :
PieBottomAreaComponent.Label.TheExplosionCondition=切り出す条件は、スライス 1 枚ずつに適用されます。
PieBottomAreaComponent.Label.TheAmplitudeOfTheExplosion=切り出しの振幅により、スライスをどの程度切り出すかを指定します。
AxisGridLinesSheet.MajorLabel.LineIsVisible=可視(&V)
AxisGridLinesSheet.MajorLabel.TickIsVisible=可視(&I)
AxisGridLinesSheet.MinorLabel.LineIsVisible=可視(&S)
AxisGridLinesSheet.MinorLabel.TickIsVisible=可視(&L)
AxisLabelSheet.Label.Ellipsis=省略記号(&I) :
AxisLabelSheet.Label.Ellipsis.Tooltip=長い文字列の場合は、ここで指定する文字数で切り捨て、省略記号を表示します。
AxisSheetImpl.Label.Aligned=配置
AxisSheetImpl.Label.Axis=軸
AxisSheetImpl.Label.AxisPercent=軸のパーセント
AxisSheetImpl.Label.Visible=可視
AxisSheetImpl.Label.ValueY=値 (Y)
AxisYSheetImpl.Label.Labels=ラベル(&A) :
AxisSheetImpl.Label.Type=種類
AxisSheetImpl.Label.Color=カラー
AxisYSheetImpl.Label.Title=タイトル (&E):
AxisYSheetImpl.Label.Scale=軸スケール
AxisYSheetImpl.Label.Scale&=スケール(&S)
AxisSheetImpl.Label.CategoryX=カテゴリ (X)
AxisSheetImpl.Label.AncillaryZ=補助 (Z)
AxisSheetImpl.Label.SideBySide=並列
AxisXSheetImpl.Label.Visible=可視
AxisYSheetImpl.Label.LabelFormat=軸ラベル
AxisYSheetImpl.Label.LabelFormat&=ラベル(&L)
AxisYSheetImpl.Label.TitleFormat=軸タイトル
AxisYSheetImpl.Label.TitleFormat&=タイトル(&T)
AxisYSheetImpl.Label.Gridlines=軸グリッド
AxisYSheetImpl.Label.Gridlines&=グリッド(&D)
AbstractAxisSubtask.Button.Fixed=固定
AbstractAxisSubtask.Lbl.IsCategoryAxis=カテゴリ軸(&X)
AbstractAxisSubtask.Label.Visible2=可視(&I)
AbstractScaleSheet.Label.StepNumber=ステップ数(&N) :
AxisYSheetImpl.Label.Markers=軸マーカ
AxisYSheetImpl.Label.Markers&=マーカ(&M)
AxisZSheetImpl.Label.Visible=可視(&V)
AxisXSheetImpl.Label.AxisData=軸データ
AbstractAxisSubtask.Label.Stagger=ずらす(&G)
AbstractAxisSubtask.Label.Interactivity=軸の相互作用
AbstractAxisSubtask.Label.LabelSpan=ラベルの幅(&N) :
AbstractAxisSubtask.Label.Points=(ポイント)
AbstractAxisSubtask.Label.ReverseCategory=カテゴリを逆順にする(&C)
AxisTextSheet.Label.Interval=間隔 (&E):
AxisMarkersSheet.Title.MarkerLine=マーカの線
AxisMarkersSheet.Label.Label=ラベル (&L):
AxisMarkersSheet.Title.MarkerRange=マーカの範囲
ChartLegendSheetImpl.Label.Outline=外枠 :
ChartLegendSheetImpl.Label.ShowValue=値の表示(&H)
ChartPlotSheetImpl.Label.Background=背景 (&K):
ChartPlotSheetImpl.Label.Background2=背景(&G) :
ChartPlotSheetImpl.Label.ClientArea=クライアント領域
ChartTitleSheetImpl.Text.Auto=自動(&A)
ChartTitleSheetImpl.Text.TitleLayout=タイトルのレイアウト
ChartTitleSheetImpl.Text.Layout&=レイアウト(&L)
ChartTitleSheetImpl.Text.TitleText=タイトルテキスト
ChartTitleSheetImpl.Text.TitleText&=テキスト(&T)
ChartSheetImpl.Title.ChartTitle=グラフのタイトル
ChartSheetImpl.Title.ChartArea=グラフの領域
ChartSheetImpl.Label.Visible=可視(&V)
ChartSheetImpl.Label.ColorBy=色付けの基準 (&C):
ChartSheetImpl.Label.Coverage=範囲(&A) :
ChartSheetImpl.Label.Background=背景 (&K):
ChartLegendSheetImpl.Label.Entries=エントリ(&E)
ChartLegendSheetImpl.Label.LegendTitle&=タイトル(&T)
ChartLegendSheetImpl.Title.LegendLayout=凡例のレイアウト
ChartLegendSheetImpl.Tooltip.ShowDataPointValue=各凡例エントリについて、凡例テキストの下に 1 行目のデータポイント値を表示します。
ChartLegendSheetImpl.Title.LegendEntries=凡例のエントリ
ChartLegendSheetImpl.Title.LegendTitle=凡例のタイトル
ChartLegendSheetImpl.Label.Layout=レイアウト(&A)
ChartLegendSheetImpl.Label.Legend=凡例
ChartLegendSheetImpl.Label.Title=タイトル(&L) :
ChartLegendSheetImpl.Label.Value=値 :
ChartLegendSheetImpl.Title.Tooltip=凡例のツールチップ
ChartLegendSheetImpl.Label.Interactivity=凡例の相互作用

ChartPlotSheetImpl.Label.AreaIncludingAxes=軸を含めた領域
ChartSheetImpl.Label.EnableInPreview=プレビュー(&P)
ChartSheetImpl.Label.Font=フォント(&T) :
ChartSheetImpl.Label.ResetValue=値のリセット(&V)
ChartPlotSheetImpl.Label.AreaWithinAxes=軸の内側
ChartSheetImpl.Label.Style=スタイル (&S):
ChartSheetImpl.Label.None=なし
ChartSheetImpl.Text.Outline=外枠
ChartSheetImpl.Text.Outline&=外枠(&O)
ChartSheetImpl.Text.GeneralProperties=一般プロパティ
ChartSheetImpl.Text.GeneralProperties&=一般プロパティ(&G)
ChartSheetImpl.Text.TitleInteractivity=タイトルの相互作用(&I)
ChartSheetImpl.Text.CustomProperties=カスタムプロパティ
ChartSheetImpl.Text.CustomProperties&=カスタムプロパティ(&C)
ChartSheetImpl.Text.ChartAreaInteractivity=グラフ領域の相互作用(&A)
ChartSheetImpl.Label.Interactivity=グラフ領域の相互作用
ChartSheetImpl.Label.InteractivityEnable=グラフの相互作用を有効にする(&E)
ChartSheetImpl.Label.Text=テキスト(&X) :
ChartLegendSheetImpl.Label.LegendBehaviorType=動作(&O) :
ChartLivePreviewThread_Text.PleaseWait=しばらくお待ちください...
ChartLivePreviewThread.ErrorMessage.NoDataEngine=No data engine to process data, please see previous exception for detail.
SeriesSheetImpl.Label.Type=種類
SeriesSheetImpl.Label.ZOrder=Z順序
LegendTextSheet.Label.Ellipsis=省略記号(&E) :
LegendTextSheet.Label.Font=フォント名 (&F):
LegendTextSheet.Label.Separator=区切り文字
LegendTextSheet.Tooltip.Ellipsis=長い文字列の場合は、ここで指定する文字数で切り捨て、省略記号を表示します。
MoreOptionsChartLegendSheet.Label.TextArea=テキスト領域
MoreOptionsChartLegendSheet.Label.Outline=外枠
MoreOptionsChartLegendSheet.Label.LegendArea=凡例の領域
MoreOptionsChartPlotSheet.Label.AreaIncludingAxes=軸を含めた領域
MoreOptionsChartPlotSheet.Label.Interactivity=相互作用
MoreOptionsChartPlotSheet.Label.AreaWithinAxes=軸の内側
MoreOptionsChartPlotSheet.Label.Anchor=アンカー (&A):
MoreOptionsChartPlotSheet.Label.Outline=外枠
MoreOptionsChartPlotSheet.Label.Stretch=拡大 (&S):
TitlePropertiesSheet.Label.Title=タイトル(&T)
TitlePropertiesSheet.Label.Visible=可視
TitlePropertiesSheet.Label.Anchor=アンカー (&A):
TitlePropertiesSheet.Label.Stretch=拡大 (&S):
TitlePropertiesSheet.Label.Outline=外枠
TitlePropertiesSheet.Label.Text=テキスト
BaseDataDefinitionComponent.Text.SpecifyDataDefinition=データ定義の指定
BaseDataDefinitionComponent.Label.EditGroupSorting=グループとソートの編集
BaseDataDefinitionComponent.Tooltip.InputValueExpression=値式の入力
BaseDataDefinitionComponent.Text.EditFormat=書式の編集
BaseDataDefinitionComponent.WarningMessage.ExpressionsForbidden=1 つのディメンジョンの式を選択して、カテゴリ系列と Y 軸のオプション値を同時に設定することはできません。
BaseGroupSortingDialog.Label.SortOn=ソート(&O) :

MarkerEditorComposite.Button.Outline=外枠(&O)
MarkerEditorComposite.Label.MarkerType=種類
MarkerIconDialog.Button.EmbeddedImage=埋め込まれたイメージ(&M)
MarkerIconDialog.Title.MarkerIconSelector=マーカのアイコンセレクタ
MarkerIconDialog.Label.Description.EmbeddedImage=マーカーのアイコンに指定する埋め込まれたイメージを選択してください。
MarkerIconDialog.Lbl.SelectIconFrom=アイコンの選択元 :
MarkerIconDialog.Lbl.URL=URL(&U)
MarkerIconDialog.Lbl.Local=ローカル(&L)
MarkerIconDialog.Lbl.EnterURL=URL の入力(&E) :
MarkerIconDialog.Lbl.Browse=参照(&B)
MarkerIconDialog.Lbl.Preview=プレビュー(&P)
MarkerIconDialog.Lbl.Add=追加
MarkerIconDialog.Chooser.Title=マーカのアイコンセレクタ
MarkerIconDialog.Lbl.Remove=削除
MarkerIconDialog.Lbl.Description=ローカルのイメージファイルからマーカのアイコンをインポートします。
MarkerIconDialog.Exception.ImageNotAvailable=イメージは現在使用できません。
MarkerIconDialog.Exception.InvalidURL=URL が無効です。修正してください。
MarkerIconDialog.ImageNotAvailableWarning=警告
MarkerIconDialog.ImageNotAvailableWarningMessage=このまま使用しますか ?

exception.data.DataBindingsAreNull=1 つまたは複数のデータバインドが NULL です。

DialLabelSheet.Label.Format=書式 :

ImageDialog.AddImage=イメージの追加(&A)...
ImageDialog.FileExist=このファイル名はすでに存在します。別の名前を指定して再ロードしてください。
ImageDialog.ImportFail=インポートできません
ImageDialog.label.SelectImageType=イメージの種類を選択 :
ImageDialog.label.URLImage=URL イメージ(&U)
ImageDialog.label.EmbeddedImage=埋め込んだイメージ(&M)
ImageDialog.label.EnterURL=イメージの URI を入力(&E) :
ImageDialog.label.EnterEmbed=埋め込むイメージのパスを入力してください (&E):
ImageDialog.label.Browse=参照(&B)...
ImageDialog.label.SelectFile=ファイルの選択
ImageDialog.label.Preview=プレビュー(&P)
ImageDialog.Label.ResourceImage=共有リソース内のイメージファイル(&I)
ImageDialog.label.SelectImage=イメージの選択
ImageDialog.uri.tooltip=(例 : http://host/cursor.gif、uri/cursor.gif)
ImageDialog.label.LocalImage=ローカルイメージファイル(&O)
ImageDialog.label.EnterLocal=ローカルイメージのパスを入力します(&E):

TextEditorComposite.Tooltip.EnterDecimalOrFractionValue=整数、小数または分数の値を入力してください。

PlotClientAreaSheet.Btn.Auto=自動(&U)
PlotClientAreaSheet.Btn.Auto2=自動(&O)
PlotClientAreaSheet.Label.HeightHint=高さのヒント (&N):
PlotClientAreaSheet.Label.WidthHint=幅のヒント (&T):

AxisMarkersSheet.MarkerLine.displayName=マーカの線
AxisMarkersSheet.MarkerRange.displayName=マーカの範囲
AxisMarkersSheet.Label.Interactivity=相互作用(&I)
AxisMarkersSheet.Label.IsVisible=可視(&S)
AbstractPopupSheet.Label.Close=閉じる
AbstractPopupSheet.Label.Help=ヘルプ
AggregateEditorComposite.Aggregate.Enabled=有効化
AggregateEditorComposite.AggregateDisplayName.Default=デフォルト
AggregateEditorComposite.AggregateDisplayName.None=なし
AggregateEditorComposite.AggregateParameterDefinition.Title=パラメタの定義の集計
AggregateEditorComposite.Button.Cancel=キャンセル
AggregateEditorComposite.Button.OK=OK
AggregateEditorComposite.Tooltip.SetAggregateFunction=集計関数の設定

LocalizedNumberEditorComposite.error.Title=数値の書式のエラー
LocalizedNumberEditorComposite.error.Message=数値 "{0}" は無効です。

SeriesRegionSheet.message.dialRegion=ダイヤル領域 - 
GroupSortingDialog.Composite.Group.Sorting=ソート
GroupSortingDialog.Composite.Label.SortLocale=ロケール(&L) :
GroupSortingDialog.Composite.Label.SortStrength=優先順位(&H) :
GroupSortingDialog.Label.GroupAndSorting=グループとソート
GroupSortingDialog.Sort.Locale.Auto=自動
GroupSortingDialog.Sort.Strength.ASCII=ASCII
GroupSortingDialog.Sort.Strength.IDENTICAL=同じ
GroupSortingDialog.Sort.Strength.PRIMARY=プライマリ
GroupSortingDialog.Sort.Strength.QUATENARY=フォース
GroupSortingDialog.Sort.Strength.SECONDARY=セカンダリ
GroupSortingDialog.Sort.Strength.TERTIARY=サード
GroupSortingDialog.Sort.SortOn.Warning.Title=SortOn の警告
GroupSortingDialog.Sort.SortOn.Warning.Message=SortOn の式は空白にできません。

GanttSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、GanttSeriesAttributeComposite の引数としては使用できません。
GanttChart.Txt.DefaultGanttChartTitle=ガントチャートのタイトル
GanttChart.Txt.DisplayName=ガントチャート
GanttChart.Txt.Description=標準のガントチャートでは、開始と終了のマーカを結ぶ線が表示されます。
GanttChart.Txt.HelpText=ガントチャートは、作業や活動にかかった時間を表すためのグラフです。
GanttChart.SubType.Standard=標準ガントチャート
GanttSeriesAttributeComposite.Lbl.Marker=マーカ
GanttSeriesAttributeComposite.Lbl.Start=開始 :
GanttSeriesAttributeComposite.Lbl.End=終了 :
GanttSeriesAttributeComposite.Lbl.Bars=棒
GanttSeriesAttributeComposite.Lbl.Outline=外枠
GanttSeriesAttributeComposite.Lbl.OutlineFill=外枠の塗りつぶし :
GanttSeriesAttributeComposite.Lbl.BarPalette=系列パレットを棒の色として使用する(&P)

DecorationSheet.Label.DecorationLabels=タスクラベル

BubbleChart.Txt.DefaultBubbleChartTitle=バブルチャートのタイトル
BubbleChart.Txt.Description=バブルチャート。カテゴリデータと値データを座標とし、値を点でプロットします。\n各データ値はマーカで示します。
BubbleChart.Txt.HelpText=バブルチャート。カテゴリのない軸に対応するデータ値をランダムな間隔で表示します。各データポイントは、X 軸と Y 軸のスケールに対応します。
BubbleChart.Txt.DisplayName=バブルチャート
BubbleChart.SubType.Standard=標準バブルチャート
BubbleSeriesAttributeComposite.Lbl.ShadowColor=影(&H) :
BubbleSeriesAttributeComposite.Lbl.Marker=マーカ
BubbleSeriesAttributeComposite.Lbl.IsVisible=可視
BubbleSeriesAttributeComposite.Lbl.Type=種類 :
BubbleSeriesAttributeComposite.Lbl.Size=サイズ :
BubbleSeriesAttributeComposite.Lbl.Line=線
BubbleSeriesAttributeComposite.Lbl.AccLine=アクセラレーション線
BubbleSeriesAttributeComposite.Lbl.LinePalette=系列パレットを線の色として使用する(&P)
BubbleSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、BubbleSeriesAttributeComposite の引数としては使用できません。
BubbleSeriesAttributeComposite.Lbl.ShowLinesAsCurves=線を曲線で表示する(&V)
BubbleSeriesAttributeComposite.Lbl.Orientation=向き(&O)

DifferenceChart.Txt.DefaultDifferenceChartTitle=差分チャートのタイトル
DifferenceChart.Txt.Description=差分チャートでは、2 色の塗りつぶしで正数と負数の範囲を示します。
DifferenceChart.Txt.HelpText=差分チャートは、2 つのデータフィールドの差を示すためのグラフです。
DifferenceChart.Txt.DisplayName=差分チャート
DifferenceChart.SubType.Standard=標準差分チャート
DifferenceSeriesAttributeComposite.Exception.IllegalArgument={0} 型の系列は、DifferenceSeriesAttributeComposite の引数としては使用できません。
DifferenceSeriesAttributeComposite.Lbl.Line=線
DifferenceSeriesAttributeComposite.Lbl.PositiveLine=正数
DifferenceSeriesAttributeComposite.Lbl.NegativeLine=負数
DifferenceSeriesAttributeComposite.Lbl.ShowLinesAsCurves=線を曲線で表示する(&C)
DifferenceSeriesAttributeComposite.Lbl.LinePalette=系列パレットを線の色として使用する(&U)

PositiveNegativeColorDialog.Lbl.PositiveNegativeColorEditor=正数/負数のカラーエディタ
PositiveNegativeColorDialog.Lbl.PositiveColor=正数の色
PositiveNegativeColorDialog.Lbl.NegativeColor=負数の色
PositiveNegativeColorDialog.Lbl.Preview=プレビュー

########### Field Assist Preferences ###########################
ssPreferencesContentAssistKey= コンテンツのアシストキー :
ssPreferencesContentAssistKeyCtlSpace= Ctrl + スペース(&S)
ssPreferencesContentAssistKeyAsterisk= * (アスタリスク)(&K)
ssPreferencesContentAssistKeyAnyKey= 英数字キー (自動アクティブ化の遅延時)(&H)
ssPreferencesContentAssistKeyCustom= カスタム(&C)
ssPreferencesContentAssistKeyPropagate= ポップアップがアクティブのとき、制御するキー入力を自動反映する(&P)
ssPreferencesContentAssistDelay= コンテンツのアシストが自動的にアクティブになったときの遅延 (ミリ秒)(&E) :
ssPreferencesDescription= このページでは、グラフビルダダイアログで使用される装飾を管理します。
ssPreferencesDecoratorVert= 縦位置 :
ssPreferencesDecoratorTop= 上(&T)
ssPreferencesDecoratorCenter= ページ中央揃え(&C)
ssPreferencesDecoratorBottom= 下(&B)
ssPreferencesDecoratorHorz= 横位置 :
ssPreferencesDecoratorLeft= 左(&L)
ssPreferencesDecoratorRight= 右(&R)
ssPreferencesDecoratorMargin= 余白(&M) :
ssPreferencesContentAssistDescription= このページでは、コンテンツアシストの動作を管理します。
ssPreferencesContentAssistResult= コンテンツの提案が選択されたとき :
ssPreferencesContentAssistResultReplace= フィールドコンテンツを置換する(&R)
ssPreferencesContentAssistResultInsert= フィールドコンテンツに挿入する(&I)
ssPreferencesContentAssistFilter= ポップアップが開いたまま入力したとき :
ssPreferencesContentAssistFilterCumulative= 累積入力でポップアップコンテンツをフィルタする(&L)
ssPreferencesContentAssistFilterCharacter= 最後に入力した文字でポップアップをフィルタする(&T)
ssPreferencesContentAssistFilterNone= フィルタなし(&N)
ssPreferencesShowRequiredFieldLabelIndicator= 必須フィールドの識別(&I)
ssPreferencesAssistSymbol= アシストシンボルの場所

ssDecoratorContentAssist= このフィールドで利用できるコンテンツのアシストについては、{0} を押します。
ssDecorationMenuItem=無効な文字を削除する


### Multiple Hyperlinks ###
MenuStyleDialog.Column.Properties=プロパティ
MenuStyleDialog.Column.Value=値
MenuStyleDialog.Style.Menu=メニュー
MenuStyleDialog.Style.MenuItem=メニュー項目
MenuStyleDialog.Style.OnMouseOver=マウスでポイントしているとき
MenuStyleDialog.Style.OnMouseOut=マウスポインタが外れているとき
MenuStylesDialog.Btn.Add=追加(&A)
MenuStylesDialog.Btn.Remove=削除(&R)
MenuStylesDialog.Label.Style=スタイル(&S) :
MenuStylesDialog.title=ハイパーリンクメニューのプロパティ
MenuStylesDialog.Title=ハイパーリンクメニューのスタイル

ItemLabel.Auto=自動
