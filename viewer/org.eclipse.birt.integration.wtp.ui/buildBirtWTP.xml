<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 09/27/2006
 *  Build script for project org.eclipse.birt.integration.wtp.ui
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clear" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *        -Ddtp.home=<your DTP plugins source home>   [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 * 
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 09/27/2006: initial version
 *
-->

<project name="BIRT WTP UI Project" default="Jar" basedir=".">

	<description>This project is to integrate WTP with BIRT.</description>

	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.
		     eclipse.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	<property name="eclipse.home" location="." />
	<property name="dtp.home" location=".." />
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />	
	<property name="export.dir" location="export" />
	
	<!-- Compiler properties -->
	<property name="compilerArg" value="" />

	<!-- Eclipse related. Default version 3.2.0 -->
	<property name="plugin.osgi" value="org.eclipse.osgi" />
	<property name="plugin.core.runtime" value="org.eclipse.core.runtime" />
	<property name="plugin.core.commands" value="org.eclipse.core.commands" />
	<property name="plugin.core.jobs" value="org.eclipse.core.jobs" />
	<property name="plugin.core.resources" value="org.eclipse.core.resources" />
	<property name="plugin.ui" value="org.eclipse.ui" />
	<property name="plugin.ui.ide" value="org.eclipse.ui.ide" />
	<property name="plugin.ui.workbench" value="org.eclipse.ui.workbench" />
	<property name="plugin.jface" value="org.eclipse.jface" />
	<property name="plugin.equinox" value="org.eclipse.equinox" />
	<property name="plugin.jdt.core" value="org.eclipse.jdt.core" />
	<property name="plugin.swt" value="org.eclipse.swt" />

	<!-- WTP related. Default version 1.5.0 -->
	<property name="plugin.wst.common.frameworks" value="org.eclipse.wst.common.frameworks" />
	<property name="plugin.wst.common.frameworks.ui" value="org.eclipse.wst.common.frameworks.ui" />
	<property name="plugin.wst.common.modulecore" value="org.eclipse.wst.common.modulecore" />
	<property name="plugin.wst.common.project.facet.core" value="org.eclipse.wst.common.project.facet.core" />
	<property name="plugin.wst.common.project.facet.ui" value="org.eclipse.wst.common.project.facet.ui" />
	<property name="plugin.wst.web.ui" value="org.eclipse.wst.web.ui" />
	<property name="plugin.jst.common.project.facet.core" value="org.eclipse.jst.common.project.facet.core" />
	<property name="plugin.jst.servlet.ui" value="org.eclipse.jst.servlet.ui" />
	<property name="plugin.jst.j2ee" value="org.eclipse.jst.j2ee" />
	<property name="plugin.jst.j2ee.core" value="org.eclipse.jst.j2ee.core" />
	<property name="plugin.jst.j2ee.web" value="org.eclipse.jst.j2ee.web" />
	<property name="plugin.jst.j2ee.ui" value="org.eclipse.jst.j2ee.ui" />
	<property name="plugin.emf.ecore" value="org.eclipse.emf.ecore" />
	<property name="plugin.emf.common" value="org.eclipse.emf.common" />
	<property name="plugin.jem.util" value="org.eclipse.jem.util" />
	
	<!--properties -->
	<property name="dir.src" location="src" />
	<property name="module.name" value="org.eclipse.birt.integration.wtp.ui" />
	<property name="viewer.dir" value="../org.eclipse.birt.report.viewer" />
	<property name="jar.name" value="birtwtp.jar" />

	<property name="arch" value="x86" />

	<!-- set platform related properties-->
	<condition property="ws" value="win32">
		<os family="windows" />
	</condition>
	<condition property="ws" value="gtk">
		<not>
			<os family="windows" />
		</not>
	</condition>

	<condition property="os" value="win32">
		<os family="windows" />
	</condition>
	<condition property="os" value="linux">
		<not>
			<os family="windows" />
		</not>
	</condition>
	
	<!-- Time Stamp -->
	<tstamp>
    	<format property="TODAY" pattern="yyyyMMdd-hhmm"/>
	</tstamp>
    		
	<!-- build init -->
	<target name="init">
		<condition property="pluginTemp" value="${buildTempFolder}/plugins">
			<isset property="buildTempFolder" />
		</condition>
		<property name="pluginTemp" value="${basedir}" />
		<condition property="build.result.folder" value="${pluginTemp}/${module.name}">
			<isset property="buildTempFolder" />
		</condition>

		<property name="build.result.folder" value="${basedir}" />
		<property name="plugin.destination" value="${basedir}" />
		<property name="temp.folder" value="${basedir}/temp.folder" />
		<property name="dir.runtime" value="${basedir}/runtime" />				
	</target>

	<!-- Prepare viewer related libraries  -->
	<target name="viewer" depends="init">
		<ant dir="${viewer.dir}" antfile="BuildWebViewer.xml" target="Jar" inheritall="false" inheritrefs="false">
			<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
	</target>

	<target name="buildDependents">
		<antcall target="viewer" />
	</target>

	<!-- Compile source code and generate jar for this project.
		 Input parameters:
		 	eclipse.home
	-->
	<target name="Jar" depends="init">
		<antcall target="build" />
	</target>

	<target name="build" depends="init">
		<delete dir="${temp.folder}/bin" />
		<mkdir dir="${temp.folder}/bin" />
		<javac destdir="${temp.folder}/bin" source="1.4">
			<compilerarg line="${compilerArg}" />
			<classpath>
				<fileset dir="${eclipse.home}/plugins">
					<include name="${plugin.osgi}_*.jar" />
					<include name="${plugin.core.runtime}_*.jar" />
					<include name="${plugin.core.commands}_*.jar" />						
					<include name="${plugin.core.jobs}_*.jar" />
					<include name="${plugin.core.resources}_*.jar" />
					<include name="${plugin.ui}_*.jar" />
					<include name="${plugin.ui.ide}_*.jar" />
					<include name="${plugin.ui.workbench}_*.jar" />
					<include name="${plugin.jface}_*.jar" />
					<include name="${plugin.equinox}*.jar" />
					<include name="${plugin.jdt.core}_*.jar" />
					<include name="${plugin.swt}*.jar" />
					<include name="${plugin.wst.common.frameworks}_*.jar" />
					<include name="${plugin.wst.common.frameworks.ui}_*.jar" />
					<include name="${plugin.wst.common.modulecore}_*.jar" />
					<include name="${plugin.wst.common.project.facet.core}_*.jar" />
					<include name="${plugin.wst.common.project.facet.ui}_*.jar" />
					<include name="${plugin.wst.web.ui}_*.jar" />
					<include name="${plugin.jst.common.project.facet.core}_*.jar" />
					<include name="${plugin.jst.servlet.ui}_*.jar" />
					<include name="${plugin.jst.j2ee}_*.jar" />
					<include name="${plugin.jst.j2ee.core}_*.jar" />
					<include name="${plugin.jst.j2ee.web}_*.jar" />
					<include name="${plugin.jst.j2ee.ui}_*.jar" />					
					<include name="${plugin.emf.ecore}_*.jar" />
					<include name="${plugin.emf.common}_*.jar" />
					<include name="${plugin.jem.util}_*.jar" />
				</fileset>
			</classpath>
			<src path="${dir.src}" />
		</javac>
		<copy todir="${temp.folder}/bin" failonerror="true">
			<fileset dir="${dir.src}" excludes="**/*.java, **/package.htm*" />
		</copy>
		<jar jarfile="${build.result.folder}/${jar.name}" basedir="${temp.folder}/bin"/>
		<delete dir="${temp.folder}/bin" />
		<delete dir="${temp.folder}" />
	</target>

	<target name="zip" depends="init">		
		<antcall target="buildDependents" />
		<delete file="${dir.runtime}/birt.zip" />
		<zip destfile="${dir.runtime}/birt.zip">
			<fileset dir="${viewer.dir}/birt_web/" 
				includes="*.jsp,*.rptdesign,webcontent/**,
						  WEB-INF/attachments/**,
						  WEB-INF/lib/**,
				          WEB-INF/tlds/**,
				          WEB-INF/platform/configuration/**,
				          WEB-INF/platform/plugins/**,
				          WEB-INF/*.wsdd,
				          WEB-INF/weblogic.xml"
				excludes="WEB-INF/classes/**,
						  WEB-INF/platform/plugins/org.eclipse.birt.report.data.oda.jdbc_*/drivers/*.jar,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity_*/**,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity*.nl/**,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity.oda.design*.jar,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity.oda.finfo*.jar,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity.oda.flatfile.ui*.jar,
						  WEB-INF/platform/plugins/org.eclipse.datatools.connectivity.oda.profile*.jar"/>
		</zip>
	</target>


	<!-- Export the project, for instance, jar files are copied to a designated folder
		 the dependency on Jar should implement in top level script by call sequence	
		 Parameters:
		 		- ${plugin.destination} target directory to put the plugin binaries
		 		- ${plugin.package} the version of plugin exported
	 -->
	<target name="Export" depends="init">

		<antcall target="zip" />		
		<antcall target="build" />

		<property file="META-INF/MANIFEST.MF" />
		<property name="plugin.package" value="${module.name}_${Bundle-Version}" />				
		<echo message="Export Viewer version = ${Bundle-Version}" />
					
		<copy todir="${export.dir}/${plugin.package}" failonerror="false">
			<fileset dir="." includes="${jar.name},about.html,plugin.xml,plugin.properties,META-INF/**,runtime/**,templates/**,icons/**,schema/**"/>
		</copy>
	</target>

	<!-- Generate the JavaDoc.
		 Parameters:
		 		- ${javadoc.dir} target directory to put the java document
	 -->	
	<target name="Javadoc" depends="init">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" 
				 author="true" 
				 version="true" 
				 use="true" 
				 windowtitle="BIRT WTP UI Project" 
				 source="1.4"
				 packagenames="${module.name}.*">
				<classpath>
					<fileset dir="${eclipse.home}/plugins">
						<include name="${plugin.osgi}_*.jar" />
						<include name="${plugin.core.runtime}_*.jar" />
						<include name="${plugin.core.commands}_*.jar" />		
						<include name="${plugin.core.jobs}_*.jar" />
						<include name="${plugin.core.resources}_*.jar" />
						<include name="${plugin.ui}_*.jar" />
						<include name="${plugin.ui.ide}_*.jar" />
						<include name="${plugin.ui.workbench}_*.jar" />
						<include name="${plugin.jface}_*.jar" />
						<include name="${plugin.equinox}*.jar" />
						<include name="${plugin.jdt.core}_*.jar" />
						<include name="${plugin.swt}*.jar" />
						<include name="${plugin.wst.common.frameworks}_*.jar" />
						<include name="${plugin.wst.common.frameworks.ui}_*.jar" />
						<include name="${plugin.wst.common.modulecore}_*.jar" />
						<include name="${plugin.wst.common.project.facet.core}_*.jar" />
						<include name="${plugin.wst.common.project.facet.ui}_*.jar" />
						<include name="${plugin.wst.web.ui}_*.jar" />
						<include name="${plugin.jst.common.project.facet.core}_*.jar" />
						<include name="${plugin.jst.servlet.ui}_*.jar" />
						<include name="${plugin.jst.j2ee}_*.jar" />
						<include name="${plugin.jst.j2ee.core}_*.jar" />
						<include name="${plugin.jst.j2ee.web}_*.jar" />	
						<include name="${plugin.jst.j2ee.ui}_*.jar" />		
						<include name="${plugin.emf.ecore}_*.jar" />	
						<include name="${plugin.emf.common}_*.jar" />	
						<include name="${plugin.jem.util}_*.jar" />						
					</fileset>
				</classpath>
				<packageset dir="${dir.src}" defaultexcludes="yes" />
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
		</javadoc>
	</target>

	<!-- Clean up -->
	<target name="Clean" depends="init">
		<delete file="${dir.runtime}/birt.zip" />
		<delete file="${build.result.folder}/${jar.name}"/>
		<delete dir="${temp.folder}" />
	</target>

	<!-- No unit tests, dummy target -->
	<target name="UnitTest" />

</project>
