<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.eclipse.birt.model" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appinfo>
         <meta.schema plugin="org.eclipse.birt.model" id="reportItemModel" name="BIRT Report Item Extension Point"/>
      </appinfo>
      <documentation>
         Report Item extension point allows the user to specify how the new report item should be represented and persisted in the ROM
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appinfo>
            <meta.element />
         </appinfo>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="reportItem" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="reportItem">
      <annotation>
         <documentation>
            Element definition
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="property" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="propertyGroup" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="styleProperty" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="method" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="propertyVisibility" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="style" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="overrideProperty" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="extensionName" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of the element
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultStyle" type="string">
            <annotation>
               <documentation>
                  Predefined style to be used for the Report Item.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isNameRequired" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Field to indicate if the ReportItem instance name is required.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="class" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the java class, that implements the IReportItemFactory interface.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="extendsFrom" type="string" use="default" value="ExtendedItem">
            <annotation>
               <documentation>
                  Represent the parent element definition extending from. It can be one of the report elements defined in ROM, or group element defined in ROM, or other extensions from this point. By default, it is &apos;ExtendedItem&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="hasStyle" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Marks extended item can have style or not.  if value is true, extended item can have style; else not.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="themeType" type="string">
            <annotation>
               <documentation>
                  Defines the report item theme type.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="styleProperty">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="property">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="choice" minOccurs="0" maxOccurs="unbounded"/>
            <element ref="elementType" minOccurs="0" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of the property extension element
               </documentation>
            </annotation>
         </attribute>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for the display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" use="required">
            <annotation>
               <documentation>
                  Property data type, such as integer or string. Generally, if property is of simple type(string, number, integer, dimension, color, boolean, expression, html, uri, dateTime, xml, name, float, literalString, resourceKey), then it is useless to set &quot;subType&quot; and &quot;detailType&quot; for the property; If type is &quot;choice&quot;, then either define customized choices or set &quot;detailType&quot; to name of the preferred choice set in rom.def; If type is &quot;list&quot;, the &quot;subType&quot; is required to determine the item type in the list value and by default its value is &quot;string&quot;; If type is &quot;structure&quot;, &quot;detailType&quot; is required to refer a structure definition name in rom.def and set &quot;isList&quot; to true if value is not single; If type is &quot;elementRef&quot;, &quot;detailType&quot; is required to refer an element definition name in  rom.def or an extension name of any report item extension; If type is &quot;element&quot;, then set &quot;isList&quot; to true if the property value list is not single.
choice:
list:
structure, elementRef and element
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="string">
                  </enumeration>
                  <enumeration value="number">
                  </enumeration>
                  <enumeration value="integer">
                  </enumeration>
                  <enumeration value="dimension">
                  </enumeration>
                  <enumeration value="color">
                  </enumeration>
                  <enumeration value="choice">
                  </enumeration>
                  <enumeration value="boolean">
                  </enumeration>
                  <enumeration value="expression">
                  </enumeration>
                  <enumeration value="html">
                  </enumeration>
                  <enumeration value="uri">
                  </enumeration>
                  <enumeration value="dateTime">
                  </enumeration>
                  <enumeration value="xml">
                  </enumeration>
                  <enumeration value="name">
                  </enumeration>
                  <enumeration value="float">
                  </enumeration>
                  <enumeration value="literalString">
                  </enumeration>
                  <enumeration value="list">
                  </enumeration>
                  <enumeration value="resourceKey">
                  </enumeration>
                  <enumeration value="structure">
                  </enumeration>
                  <enumeration value="elementRef">
                  </enumeration>
                  <enumeration value="element">
                  </enumeration>
                  <enumeration value="contentElement">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="detailType" type="string">
            <annotation>
               <documentation>
                  Detail data type, such as boolean or string. When the &quot;type&quot; is &quot;choice&quot;, extension can define &quot;detailType&quot; to refer a choice set in original meta-data of Model; When &quot;type&quot; is &quot;structure&quot;, extension must define &quot;detailType&quot; to refer a structure in original meta-data of Model.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="subType">
            <annotation>
               <documentation>
                  When the &quot;type&quot; is &quot;list&quot;, the &quot;subType&quot; is required and must be defined as one of the restriction choices. By default it is &quot;string&quot;.
               </documentation>
            </annotation>
            <simpleType>
               <restriction base="string">
                  <enumeration value="string">
                  </enumeration>
                  <enumeration value="boolean">
                  </enumeration>
                  <enumeration value="dateTime">
                  </enumeration>
                  <enumeration value="float">
                  </enumeration>
                  <enumeration value="integer">
                  </enumeration>
                  <enumeration value="expression">
                  </enumeration>
                  <enumeration value="elementRef">
                  </enumeration>
               </restriction>
            </simpleType>
         </attribute>
         <attribute name="canInherit" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Flag indicating whether the property extension element can inherit
properties from another element
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultValue" type="string">
            <annotation>
               <documentation>
                  Default value of the property extension element in the BIRT Report
Designer UI
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isEncryptable" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  The flag indicating whether this property is encrypted.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultDisplayName" type="string">
            <annotation>
               <documentation>
                  The default display name, which is used if no localized display name is found with I18N.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isList" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  When &quot;type&quot; is &quot;structure&quot;, you will define &quot;isList&quot; to indicate whether property value is a single structure or a structure list.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="hasOwnModel" type="boolean" use="default" value="true">
            <annotation>
               <documentation>
                  Indicates whether the XML property should be treated as the extension model. Only works if the property type is XML. The default value is true.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="allowExpression" type="boolean">
            <annotation>
               <documentation>
                  true indicates the property can be set as the expression. Each expression contains the value and the type. Otherwise false. The default value is false.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="propertyGroup">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <sequence>
            <element ref="property" minOccurs="1" maxOccurs="unbounded"/>
         </sequence>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for the display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of the property group
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultDisplayName" type="string">
            <annotation>
               <documentation>
                  The default display name, which is used if no localized display name is found with I18N.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="method">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <sequence minOccurs="0" maxOccurs="unbounded">
            <element ref="argument"/>
            <element ref="javaDoc" minOccurs="0" maxOccurs="1"/>
         </sequence>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of the method
               </documentation>
            </annotation>
         </attribute>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for the display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="toolTipID" type="string">
            <annotation>
               <documentation>
                  Resource key for tool-tip of this method
               </documentation>
            </annotation>
         </attribute>
         <attribute name="returnType" type="string">
            <annotation>
               <documentation>
                  Data type of the method return value
               </documentation>
            </annotation>
         </attribute>
         <attribute name="isStatic" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Field indicating whether this method is static or not
               </documentation>
            </annotation>
         </attribute>
         <attribute name="context" type="string">
            <annotation>
               <documentation>
                  Execution context of this method
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="argument">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of this argument
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string">
            <annotation>
               <documentation>
                  Data type of this argument, such as string or integer
               </documentation>
            </annotation>
         </attribute>
         <attribute name="tagID" type="string">
            <annotation>
               <documentation>
                  Resource key for tag of this argument
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="choice">
      <annotation>
         <documentation>
            (no description available)
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal unique name of the choice
               </documentation>
            </annotation>
         </attribute>
         <attribute name="value" type="string">
            <annotation>
               <documentation>
                  Value for this choice
               </documentation>
            </annotation>
         </attribute>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for the display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="defaultDisplayName" type="string">
            <annotation>
               <documentation>
                  The default display name, which is used if no localized display name is found with I18N.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="propertyVisibility">
      <annotation>
         <documentation>
            To set the visible level of this property when it is shown in the property sheet.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Internal name of the property that is set the visibility.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="visibility" type="string">
            <annotation>
               <documentation>
                  Two options are: hide, readonly. Support to set multiple options to one property separated by &apos;,&apos;. For example, visibility=&quot;readonly,hide&quot;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="style">
      <annotation>
         <documentation>
            Extension element default style -- selector.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="displayNameID" type="string">
            <annotation>
               <documentation>
                  Resource key for the display name
               </documentation>
            </annotation>
         </attribute>
         <attribute name="type" type="string">
            <annotation>
               <documentation>
                  The type for this style. It is usually set to the extension id for the element definition that defines this style selector, for example, &quot;Crosstab&quot;.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="elementType">
      <annotation>
         <documentation>
            Define all the allowed element types in this slot.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="name" type="string" use="required">
            <annotation>
               <documentation>
                  Name of the element which is allowed in the slot. The name must be consistent with those defined in &apos;rom.def&apos; or some other reportItem extensions.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="overrideProperty">
      <annotation>
         <documentation>
            override allowed units.
         </documentation>
      </annotation>
      <complexType>
         <attribute name="propertyName" type="string" use="required">
            <annotation>
               <documentation>
                  Internal name of the property that is overridden by extension.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="allowedChoices" type="string">
            <annotation>
               <documentation>
                  restricts to a sub set of choices from that defined on parent property definition. Uses &apos;,&apos; as seperator. For example: if only allowed &apos;none&apos; and &apos;auto&apos; as allowed choices, can set it as &apos;none, auto&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="allowedUnits" type="string">
            <annotation>
               <documentation>
                  units choices that use &apos;,&apos; as seperator. For example: if only allowed &apos;in&apos; and &apos;cm&apos; as allowed units, can set it as &apos;in,cm&apos;.
               </documentation>
            </annotation>
         </attribute>
         <attribute name="useOwnSearch" type="boolean">
            <annotation>
               <documentation>
                  If true, the property search algorithm is controlled by the extension element self by implementing ReportItem.getProperty(). In such case, ReportItem.getProperty() returns the final effective value. The factory property value won&apos;t call ReportItem.getProperty() directly/indirectly since it may be called in ReportItem.getProperty(). 
This attribute ONLY works for ROM defined style properties. The default value is false.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="javaDoc" type="string">
      <annotation>
         <documentation>
            JavaDoc for the method in CDATA format.
         </documentation>
      </annotation>
   </element>

   <annotation>
      <appinfo>
         <meta.section type="since"/>
      </appinfo>
      <documentation>
         1.0
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="examples"/>
      </appinfo>
      <documentation>
         The following is an example of the Report Item extension.
&lt;p&gt;
&lt;pre&gt;

&lt;extension point=&quot;org.eclipse.birt.report.engine.reportitemPresentation&quot;&gt;
     
&lt;reportItem 
 class=&quot;org.eclipse.test.ReportItemFactoryImpl&quot; 
 isNameRequired=&quot;true&quot; 
 extensionName=&quot;TestingMatrix&quot;
 displayNameID=&quot;Element.TestingMatrix&quot;&gt;

&lt;property 
  defaultValue=&quot;default test&amp;amp;&amp;quot;&amp;lt;&quot; 
  type=&quot;string&quot; 
  displayNameID=&quot;Element.TestingMatrix.test1&quot; 
  name=&quot;test1&quot;/&gt;
&lt;property type=&quot;integer&quot; 
  displayNameID=&quot;Element.TestingMatrix.test2&quot; 
  canInherit=&quot;false&quot; 
  name=&quot;test2&quot;/&gt;
&lt;property
     displayNameID=&quot;Element.TestingMatrix.test3&quot;
     name=&quot;test3&quot;     
     type=&quot;xml&quot;/&gt;     
&lt;property type=&quot;choice&quot; 
  displayNameID=&quot;Element.TestingMatrix.test5&quot; 
  canInherit=&quot;false&quot; 
  name=&quot;test5&quot;&gt;
  &lt;choice value=&quot;one&quot; 
   displayNameID=&quot;Choices.test5.choice1&quot; 
   name=&quot;choice1&quot;/&gt;
  &lt;choice value=&quot;two&quot; 
   displayNameID=&quot;Choices.test5.choice2&quot; 
   name=&quot;choice2&quot;/&gt;
  &lt;choice value=&quot;three&quot; 
   displayNameID=&quot;Choices.test5.choice3&quot; 
   name=&quot;choice3&quot;/&gt;
&lt;/property&gt;
&lt;propertyGroup name=&quot;group1&quot; 
  displayNameID=&quot;Element.TestingMatrix.group1&quot;&gt;
  &lt;property type=&quot;string&quot;
   displayNameID=&quot;Element.TestingMatrix.test6&quot;
   name=&quot;test6&quot;/&gt;
  &lt;property type=&quot;integer&quot;
   displayNameID=&quot;Element.TestingMatrix.test7&quot;
   name=&quot;test7&quot;/&gt;
&lt;/propertyGroup&gt;
  &lt;propertyVisibility name=&quot;bookmark&quot; propertyVisibility=&quot;hide&quot;/&gt;
  &lt;propertyVisibility name=&quot;InvalidProperty&quot; propertyVisibility=&quot;hide&quot;/&gt;
  &lt;propertyVisibility name=&quot;dataSet&quot; propertyVisibility=&quot;readonly&quot;/&gt;
  &lt;propertyVisibility name=&quot;test3&quot; propertyVisibility=&quot;hide&quot;/&gt;  
&lt;/reportItem&gt;
&lt;/extension&gt;

&lt;/pre&gt;
&lt;/p&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="apiInfo"/>
      </appinfo>
      <documentation>
         If the extended Report Item stores properties in its own model; i.e its own way of storing data then it must satisfy the following requirements&lt;br&gt;
- serialize/deserialize as part of the report design file&lt;br&gt;
- support undo/redo&lt;br&gt;
- support generic property sheet&lt;br&gt;
&lt;br&gt;
In order to acheive this, the report item extension must implement some of the interfaces defined in the &lt;i&gt;org.eclipse.birt.report.model.api.extension&lt;/i&gt; package. See the package&apos;s JavaDoc documentation and API interfaces for more information.&lt;br&gt;
 &lt;br&gt;
The classes/interfaces to be extend/implement are:&lt;br&gt;
- ReportItem ( required )&lt;br&gt;
- ReportItemFactory ( required )&lt;br&gt;
- ElementCommand ( optional, extend this class to suport undo/redo operation ). Extend ElementCommand class and integrate with the command stack in the  IReportItem::setProperty() method implementation&lt;br&gt;
- IPropertyDefinition, IChoiceDefinition ( optional, implement this class to integrate with the generic property sheet in the designer )&lt;br&gt;
- IMessages ( optional, implement this class to support externalized strings )&lt;br&gt;
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="implementation"/>
      </appinfo>
      <documentation>
         The plugin org.eclipse.birt.chart.reportitem, supplied with the BIRT installation, provides a good example for implementing an report item extension.
      </documentation>
   </annotation>

   <annotation>
      <appinfo>
         <meta.section type="copyright"/>
      </appinfo>
      <documentation>
         Copyright (c) 2005 Actuate Corporation. All rights reserved. This program and 
the accompanying materials are made available under the terms of the Eclipse 
Public License v1.0 which accompanies this distribution, and is available at 
http://www.eclipse.org/legal/epl-2.0.html

Contributors: Actuate Corporation - initial API and implementation
      </documentation>
   </annotation>

</schema>
