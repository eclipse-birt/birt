<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.report.model
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *		  -Ddtp.home=<your DTP plugins source home>  [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 * "utest" - Run unit tests
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->
<project name="Birt Model ODA Adapter Project" basedir="." default="Jar">
	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.

		     eclipse.home
		     dtp.home
		     javadoc.dir
		     plugin.version 
	-->
	<!--properties -->

	<!-- ===== Default value for public properties ============= -->
	<property name="javadoc.dir" location="docs/api" />
	<property name="api.javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />
	
	<property name="eclipse.home" location="." />
	<property name="dtp.home" location="${eclipse.home}/plugins" />
	
	<property name="manifest" value="META-INF/MANIFEST.MF" />
	
	<property name="core.dir" value="../org.eclipse.birt.core" />
	<property name="model.dir" value="../org.eclipse.birt.report.model" />
	<property name="data.oda.dir" value="../org.eclipse.birt.data.oda" />	
	<property name="module.name" value = "org.eclipse.birt.report.model.adapter.oda" />
	
	<property name="src.dir" value="src" />
	<property name="build.dir" value="bin" />
	<property name="test.src.dir" value="test" />
	<property name="test.build.dir" value="build" />
	
	<!-- Class Path -->
	<path id="class.path">
		<pathelement path="${build.dir}" />
		<pathelement path="${core.dir}\core.jar" />
		<pathelement path="${model.dir}\model.jar" />
		<pathelement path="${data.oda.dir}\oda.jar" />		
		<fileset dir="${eclipse.home}/plugins">
			<include name="org.eclipse.core.runtime_*.jar"/>
			<include name="org.eclipse.equinox.*.jar"/>
			<include name="org.eclipse.emf.ecore_*.jar"/>
			<include name="org.eclipse.emf.ecore.xmi_*.jar"/>
			<include name="org.eclipse.emf.common_*.jar"/>
			<include name="org.eclipse.osgi_*/*.jar"/>
			<include name="org.eclipse.osgi*.jar"/>			
	        <include name="org.junit_*/*.jar"/>	
			<include name="com.ibm.icu_*.jar"/>	
            <include name="org.eclipse.datatools.connectivity*.jar"/>
            <include name="org.eclipse.datatools.connectivity*/*.jar"/>							
		</fileset>		
	</path>

	
	<!-- Compile source code and generate jar for this project 
		 Input parameters:
		 	eclipse.home
		 	dtp.home
	-->
	
	<target name="Jar" depends="compileSource">
		
		<jar destfile="modeloda.jar">
			<fileset dir="${build.dir}">
				<exclude name="**/*Test.class"/>
			</fileset>
		</jar>
		
		<jar destfile="modelodaapi.jar" >
			<fileset dir="${build.dir}">
				<exclude name="org/eclipse/birt/report/model/adapter/oda/plugin/"/>
				<exclude name="org/eclipse/birt/report/model/adapter/oda/impl/"/>
				<exclude name="org/eclipse/birt/report/model/adapter/oda/model/"/>	
				<exclude name="org/eclipse/birt/report/model/adapter/oda/util/"/>				
			</fileset>
		</jar>
					
	</target>

	
	<!-- Export the project, for instance, jar files are copied to a designated folder
		 the dependency on Jar should implement in top level script by call sequence	
		 Parameters:
		 		- ${export.dir} target directory to put the plugin binaries
	 -->
	<target name="Export">
		<mkdir dir="${export.dir}"/>
		<property file="META-INF/MANIFEST.MF" />		
		<property name="plugin.package" value="${module.name}_${Bundle-Version}" />		
		
		<echo message="Export Model Oda Adapter version = ${Bundle-Version}" />
		
		<jar destfile="${export.dir}/${module.name}_${Bundle-Version}.jar" manifest="${manifest}">
			<fileset dir="${basedir}">
	   			<include name="${manifest}"/>				
				<include name="plugin.xml"/>
				<include name=".options"/>
				<include name="about.html"/>				
			</fileset>
			<fileset dir="${build.dir}/">
				<include name="*/**"/>
			</fileset>
		</jar>			    
	</target>
	
	<!-- Clean the build environment -->
	<target name="Clean">
		<delete dir="${build.dir}" />
		<delete dir="${javadoc.dir}"/>
		<delete dir="${export.dir}"/>
		<delete file="modeloda.jar" />
	</target>

	
	<!-- Generate the JavaDoc.
		 Parameters:
		 		- ${javadoc.dir} target directory to put the java document
	 -->	
	<target name="Javadoc">
		<mkdir dir="${javadoc.dir}" />
		<javadoc destdir="${javadoc.dir}" 
				 author="true" 
				 version="true" 
				 use="true" 
				 doctitle="Birt Model ODA Adapter API (Provisional)" 
				 windowtitle="Birt Model ODA Adapter API - Provisional" 
				 source="1.4"
				 packagenames="${module.name}.*">
				<packageset dir="${src.dir}" defaultexcludes="yes" />
	 	        <bottom><![CDATA[<i>Copyright &#169;  2005 Actuate Corp. All rights reserved. </i>]]></bottom>
				<classpath refid="class.path" />
		</javadoc>
	</target>
		
	<!-- Build the dependent projects -->
	<target name="buildDependents" description="Build all the projects it depends on">
		<echo message="start call Jar task in ${model.dir}" level="info"/>
		<ant dir="${model.dir}" antfile="BuildModel.xml" target="Jar" inheritall="false">
		 	<property name="eclipse.home" value="${eclipse.home}" />
		</ant>
		<echo message="end call Jar task in ${model.dir}" level="info" />
		
	</target>
		
	<!-- Compile Model Source Files -->
    <target name="compileSource" depends="buildDependents" description="Model ODA Adapter source file">
    	<mkdir dir="${build.dir}" />
		
		<!-- Copy all resource files into bin -->
    	<copy todir="${build.dir}">
	   		<fileset dir="${src.dir}">
	   			<include name="**/*.properties"/>
	   		</fileset>
	   	</copy>
    
    	<javac srcdir="${src.dir}" 
			destdir="${build.dir}" 
			optimize="true" 
			source="1.4" 
			target="1.4"
			debug="true" 
			encoding="utf-8" 
			failonerror="true">
			<classpath refid="class.path" />
		</javac>
	</target>
	
</project>
