<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2004, 2005 Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 03/15/2005
 *  Build script for project org.eclipse.birt.report.model
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Compile source code and generate jar for this project.
 *          The compile dependency on other projects should be defined explicitly.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task, 
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, jar files are copied to a designated folder. 
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *		  -Ddtp.home=<your DTP plugins source home>  [optional]
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 * "utest" - Run unit tests
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 03/15/2005: initial version
 *
-->
<project name="Birt Resource Project" basedir="." default="Jar">
	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
		     will pass on the value at runtime. Properties will have there default
		     value.

		     eclipse.home
		     dtp.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	<!--properties -->

	<!-- ===== Default value for public properties ============= -->
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="api.javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />
	
	<property name="eclipse.home" location="." />
	<property name="dtp.home" location="${eclipse.home}/plugins" />
	
	<property name="manifest" value="META-INF/MANIFEST.MF" />
	<property name="module.name" value = "org.eclipse.birt.resources" />
	
	<property name="src.dir" value="src" />
	<property name="build.dir" value="bin" />
	<property name="test.src.dir" value="test" />
	<property name="test.build.dir" value="build" />
	
	<!-- Class Path -->
	<path id="class.path">
		<pathelement path="${build.dir}" />
	</path>

	
	<!-- Compile source code and generate jar for this project 
		 Input parameters:
		 	eclipse.home
		 	dtp.home
	-->
	
	<target name="Jar" depends="compileSource">
		
		<jar destfile="resources.jar">
			<fileset dir="${build.dir}">
			</fileset>
		</jar>
	</target>

	
	<!-- Export the project, for instance, jar files are copied to a designated folder
		 the dependency on Jar should implement in top level script by call sequence	
		 Parameters:
		 		- ${export.dir} target directory to put the plugin binaries
	 -->
	<target name="Export">
		<mkdir dir="${export.dir}"/>
		<property file="META-INF/MANIFEST.MF" />		
		<property name="plugin.package" value="${module.name}_${Bundle-Version}" />		
		
		<echo message="Export BIRT Resources version = ${Bundle-Version}" />
		
		<copy todir="${export.dir}/${module.name}_${Bundle-Version}">
			<fileset dir="${basedir}">
	   			<include name="${manifest}"/>
				<include name="plugin.xml"/>
				<include name="templates/**"/>
				<include name="resources/**"/>
			</fileset>
		</copy>
	</target>
	
	<!-- Clean the build environment -->
	<target name="Clean">
		<delete dir="${build.dir}" />
		<delete dir="${utes.report.dir}"/>
		<delete dir="${javadoc.dir}"/>
		<delete dir="${export.dir}"/>
	</target>
	
			
	<!-- Compile Resource Source Files -->
    <target name="compileSource" description="BIRT Resources source file">
    	<mkdir dir="${build.dir}" />
		
		<!-- Copy all resource files into bin -->
    	<copy todir="${build.dir}">
	   		<fileset dir="${src.dir}">
	   			<include name="**/*.properties"/>
	   		</fileset>
	   	</copy>
	</target>
	
</project>
