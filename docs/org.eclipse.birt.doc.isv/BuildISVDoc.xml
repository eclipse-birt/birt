<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2005 Actuate Corporation.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 *
 * Contributors:
 *  Actuate Corporation  - initial API and implementation
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 05/25/2006
 *  Build script for project org.eclipse.birt.doc.isv
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Generate zip for this project.
 *          There is no compile dependency on other projects.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task,
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, zip files are copied to a designated folder.
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 05/25/2006: initial version
 *
-->

<project name="BIRT Developer Documentation Project" default="Jar" basedir=".">
	<description>BIRT Developer Documentation Project.</description>
	<property file="build.properties"/>		

	<!-- set global properties for this build -->
	<!-- Public properties, used by public targets, top level build script
	     will pass on the value at runtime. Properties will have their
	     default value:
			 eclipse.home
			 utest.report.dir
			 javadoc.dir
			 plugin.version 
	-->

	<!-- ===== Default value for public properties ============= -->
	<property name="doc.version" value="${BranchVersion}" />
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />

	<property name="eclipse.home" location="." />

	<property name="core.dir" value="../org.eclipse.birt.core" />
	<property name="core.javadoc.dir" value="core/api" />
	<property name="module.name" value = "org.eclipse.birt.doc.isv" />
	<property name="core.ui.dir" value="../org.eclipse.birt.core.ui" />
	<property name="core.ui.javadoc.dir" value="coreui/api" />

	<property name="designerui.dir" value="../org.eclipse.birt.report.designer.ui" />
	<property name="engine.dir" value="../org.eclipse.birt.report.engine" />
	<property name="engine.javadoc.dir" value="engine/api" />
	<property name="engine.script.javadoc.dir" value="enginescript/api" />
	<property name="model.dir" value="../org.eclipse.birt.report.model" />
	<property name="model.javadoc.dir" value="model/api" />
	<property name="oda.dir" value="../org.eclipse.datatools.connectivity.oda" />
	<property name="oda.javadoc.dir" value="oda/api" />
	<property name="romdoc.dir" value="doc/rom" />
	<property name="rotatedtextitem.dir" value="../org.eclipse.birt.sample.reportitem.rotatedtext" />

	<!-- Generate zip for this project.
		Input parameters:
			eclipse.home
	-->

	<path id="class.path">
		<!--pathelement path="${dir.bin}"/-->				
		<fileset dir="${baseLocation}/plugins">
			<include name="org.eclipse.core.runtime_*/runtime.jar"/>
			<include name="org.eclipse.core.runtime*.jar"/>
			<include name="org.eclipse.osgi_*/*.jar"/>
			<include name="org.eclipse.osgi*.jar"/>
			<include name="org.eclipse.equinox*.jar"/>
			<include name="com.ibm.icu_*.jar"/>
			<include name="org.eclipse.datatools.connectivity*.jar"/>
			<include name="org.eclipse.datatools.connectivity*/*.jar"/>
		</fileset>

		<fileset dir="../org.w3c.sac">
			<include name="**/*.jar"/>
		</fileset>

		<fileset dir="../">
			<include name="com.lowagie.text_*.jar"/>
			<include name="org.apache.commons.codec_*.jar"/>
			<include name="org.w3c.css.sac_*.jar"/>
			<include name="org.mozilla.javascript_*.jar"/>
		</fileset>
		<fileset dir="../org.apache.derby.core">
			<include name="**/*.jar"/>
		</fileset>
		<fileset dir="${engine.dir}/lib">
			<include name="**/*.jar"/>
		</fileset>
		<pathelement path="../org.eclipse.birt.core/@dot"/>
		<pathelement path="${engine.dir}/@dot"/>
		<pathelement path="${core.dir}/@dot"/>
		<pathelement path="${model.dir}/@dot"/>
	</path>

	<target name="Jar" depends="Javadoc">
		<zip destfile="./doc.zip"
			basedir="."
			includes="doc/**,engine/**,enginescript/**,oda/**,model/**,core/**,coreui/**,ref/**"
		/>
	</target>

	<target name="ZipOnly">
		<zip destfile="./doc.zip"
			basedir="."
			includes="doc/**,engine/**,enginescript/**,oda/**,model/**,ref/**,core/**,coreui/**"
		/>
	</target>

	<!-- Export the project, for instance, zip files are copied to a designated folder
			 the dependency on Jar should implement in top level script by call sequence
			 Parameters:
					- ${export.dir} target directory to put the plugin binaries
					- ${Bundle-Version} the version of bundle exported
	-->
	<target name="Export">
		<property file="META-INF/MANIFEST.MF" />
		<property name="plugin.package" value="${module.name}_${Bundle-Version}" />
		<copy todir="${export.dir}/${plugin.package}">
			<fileset dir="." includes="plugin.xml,.project,META-INF/MANIFEST.MF,*Toc.xml,doc.zip,about.html,notices.html,about.ini,eclipse32.png"/>
		</copy>
		<tstamp>
			<format property="TODAY" pattern="yyyyMMddHHmm" />
		</tstamp>
		<copy todir="${export.dir}/${module.name}_${Bundle-Version}" overwrite="true">
			<fileset dir=".">
				<include name="about.mappings" />
			</fileset>
			<filterchain>
				<replacetokens>
					<token key="Replace_By_Date" value="${TODAY}" />
				</replacetokens>
			</filterchain>

		</copy>
		<copy todir="${export.dir}/${module.name}_${Bundle-Version}" overwrite="true">
			<fileset dir=".">
				<include name="about.properties" />
			</fileset>
			<filterchain>
				<replacetokens>
					<token key="Replace_By_Version" value="${Bundle-Version}" />
				</replacetokens>
			</filterchain>

		</copy>
	</target>

	<!-- Generate the JavaDoc.  -->
	<target name="Javadoc" depends="engineJavadoc, engineScriptJavadoc, modelJavadoc, coreJavadoc, coreuiJavadoc">
            <echo message="generating javadoc for birt"/>
                <!--
		<antcall target = "engineJavadoc"/>
		<antcall target = "engineScriptJavadoc"/>
		<antcall target = "modelJavadoc"/>
		<antcall target = "coreJavadoc"/>
                <antcall target = "coreuiJavadoc"/>
                -->
		<!-- replace onLoad="top.loadFrames()" with onLoad="", this javascript messes things up with in eclipse help -->
		<replace file="engine/api/index.html">
			<replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
			<replacevalue><![CDATA[onLoad=""]]></replacevalue>
		</replace>
		<replace file="enginescript/api/index.html">
			<replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
			<replacevalue><![CDATA[onLoad=""]]></replacevalue>
		</replace>
		<replace file="model/api/index.html">
			<replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
			<replacevalue><![CDATA[onLoad=""]]></replacevalue>
		</replace>
		<replace file="core/api/index.html">
			<replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
			<replacevalue><![CDATA[onLoad=""]]></replacevalue>
		</replace>
		<replace file="coreui/api/index.html">
			<replacetoken><![CDATA[onLoad="top.loadFrames()"]]></replacetoken>
			<replacevalue><![CDATA[onLoad=""]]></replacevalue>
		</replace>
	</target>

	<target name="cleanBuild" description= "clean files generated by build">
		<delete dir="${engine.javadoc.dir}"/>
		<delete dir="${engine.script.javadoc.dir}"/>
		<delete dir="${model.javadoc.dir}"/>
		<delete dir="${oda.javadoc.dir}"/>
		<delete dir="${core.javadoc.dir}"/>
		<delete dir="${core.ui.javadoc.dir}"/>
		<delete file="doc.zip" />
	</target>

	<target name="cleanZip" description = "clean zip files">
		<delete file="doc.zip" />
	</target>

	<target name="engineJavadoc">
		<delete dir="${engine.javadoc.dir}" failonerror="false"/>
		<mkdir dir="${engine.javadoc.dir}" />
		<javadoc destdir="../${module.name}/${engine.javadoc.dir}"
						 useexternalfile="yes" author="true" version="true" use="true"
						 windowtitle="Birt Engine API ${doc.version}"
						 doctitle="BIRT Engine API ${doc.version} (Provisional)"
						 source="1.6"
						 packagenames="org.eclipse.birt.report.engine.api">
			<fileset dir="${engine.dir}/src" defaultexcludes="yes">
				<include name="**/api/*.java"/>
				<include name="**/content/I*.java"/>
				<include name="**/emitter/I*.java"/>
				<include name="**/extension/I*.java"/>
			</fileset>
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>

	<target name="engineScriptJavadoc">
		<delete dir="${engine.script.javadoc.dir}" failonerror="false"/>
		<mkdir dir="${engine.script.javadoc.dir}" />
		<javadoc destdir="../${module.name}/${engine.script.javadoc.dir}"
						 useexternalfile="yes" author="true" version="true" use="true"
						 windowtitle="Birt Script API ${doc.version}"
						 doctitle="BIRT Script API ${doc.version} (Provisional)"
						 source="1.6"
						 packagenames="org.eclipse.birt.report.engine.api.*">
			<fileset dir="${engine.dir}/src" defaultexcludes="yes">
				<include name="**/api/script/**/*.java"/>
			</fileset>
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>

	<target name="modelJavadoc">
			<delete dir="${model.javadoc.dir}" failonerror="false"/>
			<mkdir dir="${model.javadoc.dir}" />
			<javadoc destdir="../${module.name}/${model.javadoc.dir}"
							 useexternalfile="yes" author="true" version="true" use="true"
							 windowtitle="BIRT Model API ${doc.version}"
							 doctitle="BIRT Model API ${doc.version}"
							 source="1.6"
							 packagenames="org.eclipse.birt.report.model.*">
			<packageset dir="${model.dir}/src" defaultexcludes="yes">
				<include name="org/eclipse/birt/report/model/api/**" />
			</packageset>
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>

	<target name="dataJavadoc">
		<delete dir="${data.javadoc.dir}" failonerror="false"/>
			<mkdir dir="${data.javadoc.dir}" />
			<javadoc destdir="../${module.name}/${data.javadoc.dir}"
							 useexternalfile="yes" author="true" version="true" use="true"
							 windowtitle="BIRT Data Engine API ${doc.version} Specification - Provisional"
							 doctitle="BIRT Data Engine API ${doc.version} (Provisional)"
							 source="1.6"
							 packagenames="org.eclipse.birt.data.*">
				<packageset dir="${data.dir}/src" defaultexcludes="yes">
					<include name="org/eclipse/birt/data/engine/api/**" />
				</packageset>
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>

	<target name="coreJavadoc">
		<delete dir="${core.javadoc.dir}" failonerror="false"/>
		<mkdir dir="${core.javadoc.dir}" />
		<javadoc destdir="../${module.name}/${core.javadoc.dir}"
						 useexternalfile="yes" author="true" version="true" use="true"
						 windowtitle="BIRT Core API Reference v${doc.version} (Provisional)"
						 doctitle="BIRT Core API Reference v${doc.version} (Provisional)"
						 source="1.6"
						 sourcepath="${core.dir}/src"
						 packagenames="org.eclipse.birt.core.archive,
													 org.eclipse.birt.core.archive.compound,
													 org.eclipse.birt.core.config,
													 org.eclipse.birt.core.data,
													 org.eclipse.birt.core.exception,
													 org.eclipse.birt.core.format,
													 org.eclipse.birt.core.framework,
													 org.eclipse.birt.core.framework.osgi,
													 org.eclipse.birt.core.framework.parser,
													 org.eclipse.birt.core.i18n,
													 org.eclipse.birt.core.plugin,
													 org.eclipse.birt.core.preference,
													 org.eclipse.birt.core.script,
													 org.eclipse.birt.core.template,
													 org.eclipse.birt.core.util"
						 excludepackagenames="*.internal.*">
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>

	<target name="coreuiJavadoc">
		<delete dir="${core.ui.javadoc.dir}" failonerror="false"/>
		<mkdir dir="${core.ui.javadoc.dir}" />
		<javadoc destdir="../${module.name}/${core.ui.javadoc.dir}"
						 useexternalfile="yes" author="true" version="true" use="true"
						 windowtitle="BIRT Core UI API Reference v${doc.version} (Provisional)"
						 doctitle="BIRT Core UI API Reference v${doc.version} (Provisional)"
						 source="1.6"
						 sourcepath="${core.ui.dir}/src"
						 packagenames="org.eclipse.birt.core.ui.frameworks.errordisplay,
													 org.eclipse.birt.core.ui.frameworks.taskwizard,
													 org.eclipse.birt.core.ui.frameworks.taskwizard.composites,
													 org.eclipse.birt.core.ui.frameworks.taskwizard.interfaces,
													 org.eclipse.birt.core.ui.swt.custom,
													 org.eclipse.birt.core.ui.utils" 
						 excludepackagenames="*.internal.*">
			<bottom><![CDATA[<i>Copyright &#169;  2008 Actuate Corp. All rights reserved. </i>]]></bottom>
			<classpath refid="class.path" />
		</javadoc>
	</target>
</project>

