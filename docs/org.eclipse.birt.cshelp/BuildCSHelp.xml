<?xml version="1.0"?>
<!--
 *************************************************************************
 * Copyright (c) 2005 IBM and Actuate Corporation.
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 *
 * Contributors:
 *  IBM - intial content
 *  Actuate Corporation  - initial build script
 *  
 *************************************************************************
 *
 *  Build.xml
 *
 *  Created on 05/25/2006
 *  Build script for project org.eclipse.birt.cshelp
 *
 * 
 * The following are public targets callable by external users. 
 * 
 * "Clean" - Clean all objects created by this script. Individual project build script can not call this target; 
 * "Jar" - Generate zip for this project.
 *          There is no compile dependency on other projects.
 *         eclipse.home should be passed in when Individual project build script  call this target; 
 *          the property of "failonerror" should be set true(default) when compiling source code
 * "UnitTest" - Run unit tests. This task must be called after calling Jar task,
 *              so it needn't depend on Jar explicitly
 * "Export" - Export the project, for instance, zip files are copied to a designated folder.
 *            this task must be called after calling Jar task, so it needn't depend on Jar explicitly
 * "JavaDoc" - generate java documents
 *
 * Usage:
 *    ant [any one or more of the public targets] 
 *        -Declipse.home=<your eclipse home> 
 *
 * Default target is "Jar".
 *
 * 
 * This script may also additional targets. These targets are private to this build script only. 
 *
 *
 * Notes:
 *  1. classpath need to be set for junit.jar
 *  2. This file now requires Ant 1.6
 *
 * Change History:
 *
 *    1. 05/25/2006: initial version
 *
-->

<project name="BIRT CSH Project" default="Jar" basedir=".">
    <description>BIRT Context-Sensitive Help Project.</description>
	<property file="build.properties"/>		
	
	<!-- set global properties for this build -->
    <!-- Public properties, used by public targets, top level build script will pass on the value 
	 	 at runtime. Properties will have there default value:
		     eclipse.home
		     utest.report.dir
		     javadoc.dir
		     plugin.version 
	-->
	
	<!-- ===== Default value for public properties ============= -->
	<property name="utest.report.dir" location="utestreports" />
	<property name="javadoc.dir" location="docs/api" />
	<property name="export.dir" location="export" />

	<property name="eclipse.home" location="." />
	
	<property name="core.dir" value="../org.eclipse.birt.core" />
	<property name="module.name" value = "org.eclipse.birt.cshelp" />


	<!-- Generate zip for this project.
		 Input parameters:
		 	eclipse.home
	-->
	<target name="Jar">
	</target>

	<target name="ZipOnly">
	</target>
	
	<!-- Export the project, for instance, zip files are copied to a designated folder
			 the dependency on Jar should implement in top level script by call sequence
			 Parameters:
			 		- ${export.dir} target directory to put the plugin binaries
			 		- ${Bundle-Version} the version of bundle exported
	-->
	<target name="Export">
		<property file="META-INF/MANIFEST.MF" />
		<property name="plugin.package" value="${module.name}_${Bundle-Version}" />
	  <copy todir="${export.dir}/${plugin.package}">
	    <fileset dir="." includes="plugin.xml,.project,META-INF/MANIFEST.MF,contexts.xml,about.html,notices.html,about.ini,eclipse32.png"/>
	  </copy>
		<tstamp>
			<format property="TODAY" pattern="yyyyMMddHHmm" />
		</tstamp>
		<copy todir="${export.dir}/${module.name}_${Bundle-Version}" overwrite="true">
			<fileset dir=".">
				<include name="about.mappings" />
			</fileset>
			<filterchain>
				<replacetokens>
					<token key="Replace_By_Date" value="${TODAY}" />
				</replacetokens>
			</filterchain>

		</copy>
		<copy todir="${export.dir}/${module.name}_${Bundle-Version}" overwrite="true">
			<fileset dir=".">
				<include name="about.properties" />
			</fileset>
			<filterchain>
				<replacetokens>
					<token key="Replace_By_Version" value="${Bundle-Version}" />
				</replacetokens>
			</filterchain>

		</copy>
	</target>

	<!-- Run Unit test.
			 Parameters:
			 		- ${utest.report.dir} target directory to put the unit test report
	-->
	<target name="UnitTest" description="run all the unit tests">
	</target>

	<!-- Clean all objects created by this script -->
	<target name="Clean" depends="init" description="clean up">
		<antcall target="cleanBuild"/>
		<antcall target="cleanUnitTest"/>
		<antcall target="cleanZip"/>
	</target>

	<!-- Generate the JavaDoc.
	 -->
	<target name="Javadoc">
	</target>
	
	<target name="init" description="initialization">
	</target>
	
	<target name="cleanBuild" description= "clean files generated by build">
	</target>
	<target name="cleanUnitTest" description= "clean files generated by unit tests">
	</target>
	<target name="cleanZip" description = "clean zip files">
	</target>
	
</project>

