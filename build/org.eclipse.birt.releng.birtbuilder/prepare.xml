<!--
 *******************************************************************************
 * Copyright (c) 2021 Contributors to the Eclipse Foundation
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *   See git history
 *******************************************************************************
-->
<project name="Checkout BIRT PDE Builder before build" default="main">

	<property file="prepare.properties" />

	<!-- main working folder of build process -->
	<property name="working.dir" value="/home/adb/farrah/testbuild" />
	<property name="download.dir" value="${working.dir}/download" />
	<property name="BIRT.git.repo" value="ssh://xgu@git.eclipse.org/gitroot/birt" />
	<property name="BIRT.branch" value="master" />
	<property name="BaseBuilder.git.repo"
		value="ssh://xgu@git.eclipse.org/gitroot/platform/eclipse.platform.releng.basebuilder.git" />
	<property name="BaseBuilder.branch" value="R4_2" />

	<!-- baseLocation is used to put the eclipse, emf, gef bundles that BIRT 
		build against -->
	<property name="baseLocation" value="${working.dir}/baseLocation" />
	<property name="baseBuilder" value="${working.dir}/org.eclipse.releng.basebuilder" />

	<!-- directory that BIRT plugins and features will be checked out into and 
		build -->
	<property name="buildDirectory" value="${working.dir}/src" />


	<target name="main">
		<antcall target="init" />
		<antcall target="prepareBaseLocaion" />
		<antcall target="prepareBIRTBuilder" />
		<antcall target="prepareBaseBuilder" />
	</target>

	<target name="init">
		<delete dir="${baseLocation}" failonerror="false" />
		<delete dir="${buildDirectory}" failonerror="false" />
		<delete dir="${baseBuilder}" failonerror="false" />
		<mkdir dir="${working.dir}" />
		<mkdir dir="${download.dir}" />
		<mkdir dir="${baseLocation}" />
		<mkdir dir="${buildDirectory}" />
	</target>

	<target name="update.jee" if="update.jee">
		<antcall target="download">
			<param name="sourceURL" value="${jee.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${jee.name}" />
		</antcall>

		<unzip src="${download.dir}/${jee.name}" dest="${download.dir}/jee" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/jee/eclipse">
				<include name="features/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/jee" />
	</target>

	<target name="update.eclipse" if="update.eclipse">
		<antcall target="download">
			<param name="sourceURL" value="${eclipse.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${eclipse.name}" />
		</antcall>

		<unzip src="${download.dir}/${eclipse.name}" dest="${download.dir}/platform" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/platform/eclipse">
				<include name="featuers/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/platform" />
	</target>

	<target name="update.emf" if="update.emf">
		<antcall target="download">
			<param name="sourceURL" value="${eclipse.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${emf.name}" />
		</antcall>

		<unzip src="${download.dir}/${emf.name}" dest="${download.dir}/emf" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/emf/eclipse">
				<include name="featuers/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/emf" />
	</target>

	<target name="update.gef" if="update.gef">
		<antcall target="download">
			<param name="sourceURL" value="${eclipse.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${gef.name}" />
		</antcall>

		<unzip src="${download.dir}/${gef.name}" dest="${download.dir}/gef" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/gef/eclipse">
				<include name="featuers/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/gef" />
	</target>

	<target name="update.wtp" if="update.wtp">
		<antcall target="download">
			<param name="sourceURL" value="${eclipse.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${wtp.name}" />
		</antcall>

		<unzip src="${download.dir}/${wtp.name}" dest="${download.dir}/wtp" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/wtp/eclipse">
				<include name="featuers/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/wtp" />
	</target>

	<target name="update.dtp" if="update.dtp">
		<antcall target="download">
			<param name="sourceURL" value="${eclipse.url}" />
			<param name="destination" value="${download.dir}" />
			<param name="file.name" value="${dtp.name}" />
		</antcall>

		<unzip src="${download.dir}/${dtp.name}" dest="${download.dir}/dtp" />
		<copy todir="${baseLocation}/" overwrite="true">
			<fileset dir="${download.dir}/dtp/eclipse">
				<include name="featuers/**" />
				<include name="plugins/**" />
			</fileset>
		</copy>
		<delete dir="${download.dir}/dtp" />
	</target>

	<target name="download">
		<get src="${sourceURL}" dest="${destination}/${file.name}"
			verbose="true" usetimestamp="true" />
	</target>

	<target name="prepareBaseLocaion">
		<antcall target="update.jee" />
		<!-- if update.jee is set to true, below target should not be executed -->
		<antcall target="update.eclipse" />
		<antcall target="update.wtp" />
		<antcall target="update.dtp" />
		<antcall target="update.gef" />
		<antcall target="update.emf" />
	</target>

	<!-- get org.eclipse.birt.releng.birtbuilder -->
	<target name="prepareBIRTBuilder">
		<exec executable="git" dir="${working.dir}" resolveexecutable="true"
			output="${working.dir}/birtbuilder.zip">
			<arg line="archive --format=zip" />
			<arg line="--remote=${BIRT.git.repo}/org.eclipse.birt.git" />
			<arg line="${BIRT.branch} build/org.eclipse.birt.releng.birtbuilder" />
		</exec>
		<unzip src="${working.dir}/birtbuilder.zip" dest="${working.dir}" />
		<move todir="${working.dir}">
			<fileset dir="${working.dir}/build">
				<include name="org.eclipse.birt.releng.birtbuilder/**" />
			</fileset>
		</move>
		<delete dir="${working.dir}/build" failonerror="false" />
		<delete file="${working.dir}/birtbuilder.zip" />
	</target>

	<target name="clean">
		<delete failonerror="false">
			<fileset dir="${work.dir}">
				<include name="eclipse/**" />
				<include name="buildAll.xml" />
				<include name="build.properties" />
			</fileset>
		</delete>
		<delete dir="${cvs.dir}/source/org.eclipse.birt.releng.birtbuilder"
			failonerror="false" />
	</target>

	<!-- get org.eclipse.releng.basebuilder -->
	<target name="prepareBaseBuilder">
		<exec executable="git" dir="${working.dir}" resolveexecutable="true"
			output="${working.dir}/basebuilder.zip">
			<arg line="archive --format=zip" />
			<arg line="--remote=${BaseBuilder.git.repo}" />
			<arg line="${BaseBuilder.branch}" />
		</exec>
		<unzip src="${working.dir}/basebuilder.zip" dest="${working.dir}/org.eclipse.releng.basebuilder" />

		<delete file="${working.dir}/basebuilder.zip" />
	</target>
</project>
