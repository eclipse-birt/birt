<!--
 *******************************************************************************
 * Copyright (c) 2021 Contributors to the Eclipse Foundation
 * 
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * https://www.eclipse.org/legal/epl-2.0/.
 * 
 * SPDX-License-Identifier: EPL-2.0
 * 
 * Contributors:
 *   See git history
 *******************************************************************************
-->
<project default="main">

	<!-- Steps Ant properties available at runtime: - eclipse.pdebuild.scripts: 
		the org.eclipse.eclipse.pdebuild.scripts folder - eclipse.pdebuild.home: 
		the root folder of pde build - eclipse.pdebuild.templates: the templates 
		folder -->

	<!--build monitoring information: e-mail, smtp server, build label -->
	<property file="monitor.properties" />

	<!--location of PDE Build configuration files for builder and packager -->
	<property name="eclipse.build.configs" value="${basedir}/eclipse/buildConfigs" />

	<property name="base.builder" value="${basedir}/../org.eclipse.releng.basebuilder" />

	<!--location of properties file containing last tag used for integration 
		build -->
	<property name="mapTag.properties"
		value="/home/users/releng/buildTools/eclipse33/mapTag.properties" />


	<!--default buildDirectory -->
	<property name="buildDirectory" value="${basedir}/../src" />

	<!--default location for build output, parent to ${buildId} -->
	<property name="postingDirectory" value="${buildDirectory}" />

	<!--remote sign machine login infomation -->
	<property name="username.sign" value="" />
	<property name="password.sign" value="" />
	<property name="hostname.sign" value="" />
	<property name="home.dir" value="" />
	<property name="sign.dir" value="" />

	<!-- This script is used to run repackage for BIRT build. Steps to repakcage 
		BIRT: 1. prepare baseLocation and JEE(-Linux) package 2. unzip birt-source-${package.version}.zip 
		into ${buildDirectory}/ 3. copy birt-all-${package.version}.bak.zip into 
		${buildDirectory}/ 4. start the build -->
	<target name="main" depends="init">
		<antcall target="buildDesignerIDE" />
		<antcall target="buildBirtRCPFeature" />
		<antcall target="unpackUpdateJarsForPackaging" />
		<antcall target="buildBirtWebViewer" />
		<antcall target="BuildChartViewer" />
		<antcall target="CreateDistribute" />
		<antcall target="renameBirtPackage" />
		<antcall target="sendNotification" />
		<antcall target="copy2UploadArea" />

	</target>

	<target name="init">

		<ant antfile="build.xml" target="init" />

		<property file="${buildDirectory}/label.properties" />

		<condition property="fetchTag" value="HEAD">
			<equals arg1="${buildType}" arg2="N" />
		</condition>
		<condition property="forceContextQualifier" value="${buildId}">
			<equals arg1="${buildType}" arg2="N" />
		</condition>
		<condition property="generateFeatureVersionSuffix" value="false">
			<equals arg1="${buildType}" arg2="N" />
		</condition>
		<condition property="createUpdateSite" value="true">
			<equals arg1="${buildType}" arg2="I" />
		</condition>

		<!-- concise build setting -->

		<condition property="skip.build.OSGI" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>
		<condition property="skip.build.WTP" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>
		<condition property="skip.build.testsuite" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>
		<condition property="skip.unit.test" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>
		<condition property="skip.allinone.linux" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>
		<condition property="prepare.src.flag" value="true">
			<equals arg1="${HQ.BIRT.skip}" arg2="true" />
		</condition>

		<!--compiler args -->
		<property name="compilerArg"
			value="-enableJavadoc -encoding utf-8 -warn:-discouraged,forbidden" />
		<property name="javacSource" value="1.5" />
		<property name="javacTarget" value="1.5" />
		<property name="javacDebugInfo" value="true" />
		<property name="javacFailOnError" value="false" />
		<property name="javacVerbose" value="true" />
		<property name="logExtension" value=".xml" />
		<!--this property required as of Eclipse 3.0 stream builds > 20031126 -->
		<property name="buildingOSGi" value="true" />
		<!--zip args -->
		<property name="zipargs" value="-y -qq" />
		<!--unzip args -->
		<property name="unzipArgs" value="-qq" />
	</target>
	<target name="buildDesignerIDE">
		<antcall target="logger">
			<param name="message" value="BIRT designer.ui.ide plugin build started" />
		</antcall>

		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="fetch">
			<property name="builder"
				value="${eclipse.build.configs}/birt.designer.ui.ide" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="generate">
			<property name="builder"
				value="${eclipse.build.configs}/birt.designer.ui.ide" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="process">
			<property name="builder"
				value="${eclipse.build.configs}/birt.designer.ui.ide" />
		</ant>

		<antcall target="logger">
			<param name="message" value="BIRT designer.ui.ide plugin build finished" />
		</antcall>
	</target>
	<target name="buildBirtFeature">
		<antcall target="logger">
			<param name="message" value="BIRT sdk feature build started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt" />
		</ant>

		<antcall target="logger">
			<param name="message" value="BIRT sdk feature build finished" />
		</antcall>
	</target>

	<target name="buildBirtOSGI" unless="skip.build.OSGI">
		<antcall target="logger">
			<param name="message" value="BIRT OSGI sdk feature build started" />
		</antcall>
		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.osgi" />
		</ant>
		<antcall target="logger">
			<param name="message" value="BIRT OSGI sdk feature build finished" />
		</antcall>
	</target>

	<target name="createGenReport" unless="HQ.BIRT.skip">
		<exec executable="${eclipse.build.configs}/../../extras/genReportGenerator.sh">
			<arg
				line="${buildDirectory}/${buildId}/birt_web/org.eclipse.birt.report.viewer/birt_web/WEB-INF/platform/lib" />
			<arg line="${template.dir}/engine.runtime.bin" />
		</exec>
	</target>

	<target name="CreateDistribute">
		<antcall target="logger">
			<param name="message" value="Packaging started" />
		</antcall>

		<mkdir dir="${postingDirectory}/${buildId}" />

		<!-- generate genReport.sh/.bat for birt-runtime-package -->
		<property name="template.dir" value="${baseLocation}/../PackageFiles/template" />
		<delete>
			<fileset dir="${template.dir}/engine.runtime.bin">
				<include name="*.*" />
			</fileset>
		</delete>

		<antcall target="createGenReport" />

		<!-- create Runtime -->
		<property file="${buildDirectory}/finalPluginsVersions.properties" />

		<!-- copy runtime to ${buildDirectory}/${buildId}/eclipse/plugins/org.eclipse.birt.integration.wtp_${org.eclipse.birt.integration.wtp}/runtime -->

		<ant antfile="BIRTDownloadSetup.xml" dir="${eclipse.build.configs}/birt/tools"
			target="createWebViewerExample">
			<property name="OutputDir"
				value="${buildDirectory}/plugins/org.eclipse.birt.integration.wtp.ui/runtime" />
			<property name="deposit" value="${buildDirectory}/${buildId}" />
		</ant>


		<!-- copy chart runtime to ${buildDirectory}/${buildId}/eclipse/plugins/org.eclipse.birt.chart.integration.wtp.ui_${org.eclipse.birt.chart.integration.wtp.ui}/runtime -->


		<ant antfile="BIRTDownloadSetup.xml" dir="${eclipse.build.configs}/birt/tools"
			target="createChartViewer">
			<property name="runtime.tmp"
				value="${buildDirectory}/plugins/org.eclipse.birt.chart.integration.wtp.ui/runtime" />
		</ant>


		<!-- fix bugzilla bug 225500 -->

		<property name="temp.dir"
			value="${buildDirectory}/plugins/org.eclipse.birt.chart.integration.wtp.ui/runtime" />
		<mkdir dir="${temp.dir}/chart-viewer-sample" />
		<exec executable="unzip" dir="${temp.dir}/">
			<arg line="-q chart-viewer-sample.war -d ${temp.dir}/chart-viewer-sample" />
		</exec>

		<delete file="${temp.dir}/chart-viewer-sample.war" failonerror="false" />
		<delete file="${temp.dir}/chart-viewer-sample/WEB-INF/web.xml"
			failonerror="false" />

		<zip destfile="${temp.dir}/chart.zip">
			<zipfileset dir="${temp.dir}/chart-viewer-sample"
				includes="**/*" />
		</zip>

		<delete dir="${temp.dir}/chart-viewer-sample" failonerror="false" />

		<!-- create AllInOne,AllInOne for Linux, RCP, FrameworkSDK,Framework,Chart,BIRTSample,TestSuite,Database -->
		<ant antfile="BIRTDownloadSetup.xml" dir="${eclipse.build.configs}/birt/tools"
			target="default">
			<property name="OutputDir" value="${postingDirectory}/${buildId}" />
			<property name="deposit" value="${buildDirectory}/${buildId}" />
		</ant>

		<antcall target="logger">
			<param name="message" value="Packaging finished" />
		</antcall>

	</target>

	<target name="sendNotification" unless="nomail">
		<!-- copy directory.txt to output directory -->
		<copy tofile="${postingDirectory}/${buildId}/directory.txt" file="${buildDirectory}/directory.txt" />
		<copy tofile="${postingDirectory}/monitor.properties" file="monitor.properties"
			overwrite="true" />
		<copy tofile="${postingDirectory}/finalPluginsVersions.properties"
			file="${buildDirectory}/finalPluginsVersions.properties" overwrite="true" />
		<copy tofile="${postingDirectory}/finalFeaturesVersions.properties"
			file="${buildDirectory}/finalFeaturesVersions.properties" overwrite="true" />
		<!--copy build and update dtp log to output directory -->
		<copy todir="${postingDirectory}/${buildId}">
			<fileset dir="." includes="*.log" />
		</copy>
		<!-- Send build ready mail to QA -->
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="InformQA" />
	</target>

	<target name="iPortalSetup" unless="skip.build.NL">
		<ant antfile="BIRTDownloadSetup.xml" dir="${eclipse.build.configs}/birt/tools"
			target="createIpotalLib">
			<property name="OutputDir" value="${postingDirectory}/${buildId}" />
			<property name="deposit" value="${buildDirectory}/${buildId}" />
		</ant>
	</target>

	<target name="renameBirtPackage" unless="skip.rename.package">
		<move
			file="${postingDirectory}/${buildId}/birt-charts-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-charts-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-database-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-database-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-rcp-report-designer-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-rcp-report-designer-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-report-designer-all-in-one-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-report-designer-all-in-one-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-report-designer-all-in-one-${package.version}-linux-gtk.tar.gz"
			tofile="${postingDirectory}/${buildId}/birt-report-designer-all-in-one-${package.version}-${build.date}-linux-gtk.tar.gz"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-report-framework-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-report-framework-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-report-framework-sdk-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-report-framework-sdk-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-runtime-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-runtime-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-sample-plugins-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-sample-plugins-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-source-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-source-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-tests-suite-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-tests-suite-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/birt-wtp-integration-sdk-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-wtp-integration-sdk-${package.version}-${build.date}.zip"
			failonerror="false" />
		<antcall target="renameNLPackage" />
	</target>

	<target name="renameNLPackage" unless="skip.build.NL">
		<move
			file="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-charts-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-charts-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-rcp-report-designer-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-rcp-report-designer-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-report-all-in-one-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-report-all-in-one-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-report-framework-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1_FeatureOverlay-birt-report-framework-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1-birt-charts-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1-birt-charts-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1-birt-rcp-report-designer-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1-birt-rcp-report-designer-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1-birt-report-designer-all-in-one-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1-birt-report-designer-all-in-one-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1-birt-report-framework-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1-birt-report-framework-${package.version}-${build.date}.zip"
			failonerror="false" />
		<move
			file="${postingDirectory}/${buildId}/NLpack1-birt-runtime-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/NLpack1-birt-runtime-${package.version}-${build.date}.zip"
			failonerror="false" />
	</target>

	<target name="CreateUpdateSite" if="updateSite">

		<property name="updateJarWorkingDir" value="${buildDirectory}/updateJars" />
		<property name="compsite.site"
			value="${buildDirectory}/../../UpdateSite/${updateSite}" />
		<property name="repo" value="${compsite.site}/${buildId}" />
		<mkdir dir="${updateJarWorkingDir}" />
		<mkdir dir="${updateJarWorkingDir}/site" />
		<mkdir dir="${updateJarWorkingDir}/packed" />

		<exec executable="unzip" dir="${buildDirectory}">
			<arg
				line="-o -q birt-all-${package.version}.bak.zip -d ${updateJarWorkingDir}" />
		</exec>
		<exec executable="unzip" dir="${buildDirectory}/${buildId}">
			<arg
				line="-o -q birt-wtp-integration-sdk-${package.version}.zip -d ${updateJarWorkingDir}" />
		</exec>

		<exec executable="unzip" dir="${buildDirectory}/${buildId}">
			<arg line="-o -q birt-nl-${package.version}.zip -d ${updateJarWorkingDir}" />
		</exec>
		<exec executable="unzip" dir="${buildDirectory}/${buildId}">
			<arg
				line="-o -q birt-dtp-nl-${package.version}.zip -d ${updateJarWorkingDir}" />
		</exec>

		<delete includeemptydirs="true">
			<fileset dir="${updateJarWorkingDir}/eclipse/features">
				<include name="org.eclipse.birt.sdk*/**" />
				<include name="org.eclipse.birt.integration.wtp.sdk*/**" />
				<include name="com.lowagie.text*/**" />
				<include name="org.apache.commons.codec*/**" />
				<include name="org.eclipse.birt.chart.runtime*/**" />
				<include name="org.eclipse.birt.crosstab*/**" />
				<include name="org.eclipse.birt.report.data.oda.jdbc.dbprofile*/**" />
				<include name="org.eclipse.birt.report.designer.debug*/**" />
				<include name="org.eclipse.birt.report.designer_*/**" />
				<include name="org.eclipse.birt.report.designer.source_*/**" />
				<include name="org.eclipse.birt.report.runtime_*/**" />
				<include name="org.eclipse.birt.report.runtime.source_*/**" />
				<include name="org.eclipse.birt.thirdparty*/**" />
				<include name="org.mozilla.rhino*/**" />
				<include name="org.w3c.sac*/**" />
			</fileset>
			<fileset dir="${updateJarWorkingDir}/eclipse/plugins">
				<include name="*.thirdparty*/**" />
				<include name="org.eclipse.birt.chart.runtime_*.jar" />
				<include name="org.eclipse.birt.chart.runtime.source_*.jar" />
				<include name="org.eclipse.birt.report.runtime_*.jar" />
				<include name="org.eclipse.birt.report.runtime.source_*.jar" />
				<include name="org.eclipse.birt.report.designer_*.jar" />
				<include name="org.eclipse.birt.report.designer.source_*.jar" />
			</fileset>
		</delete>

		<copy todir="${updateJarWorkingDir}/packed">
			<fileset dir="${updateJarWorkingDir}/eclipse">
				<include name="*/**" />
			</fileset>
		</copy>

		<!-- create site.xml -->
		<antcall target="generateCategory" />

		<!-- TODO: generate p2 composite update site -->
		<antcall target="GenP2CompositeUpdateSite" />

		<!-- TODO: generate birt-updatesite package -->
		<antcall target="GenUpdatesitePackage" />


	</target>

	<target name="generatePack200" unless="HQ.BIRT.skip">
		<property name="p2.repo.name" value="BIRT TEST" />
		<mkdir dir="${repo}" />

		<replace file="${eclipse.build.configs}/../../extras/pack200"
			token="@pack200@" value="${jvm15_home}/bin/pack200" />
		<chmod file="${eclipse.build.configs}/../../extras/pack200"
			perm="755" />

		<exec executable="dos2unix" dir="${eclipse.build.configs}/../../extras">
			<arg line=" pack200" />
		</exec>

		<java
			jar="${basedir}/../org.eclipse.releng.basebuilder/plugins/org.eclipse.equinox.launcher.jar"
			fork="true" timeout="10800000" jvm="${jvm15_home}/bin/java"
			failonerror="true" maxmemory="512m" dir="${updateJarWorkingDir}">
			<jvmarg
				value="-Dorg.eclipse.update.jarprocessor.pack200=${eclipse.build.configs}/../../extras" />
			<arg line="-application org.eclipse.update.core.siteOptimizer -verbose" />
			<arg
				line="-jarProcessor -outputDir ${updateJarWorkingDir}/site -processAll -pack eclipse" />
		</java>

		<copy todir="${updateJarWorkingDir}/packed" overwrite="true">
			<fileset dir="${updateJarWorkingDir}/site">
				<include name="*/**" />
			</fileset>
		</copy>

	</target>

	<target name="GenP2CompositeUpdateSite">
		<property name="p2.repo.name" value="BIRT TEST" />
		<mkdir dir="${repo}" />

		<!-- generate pack200 -->
		<antcall target="generatePack200" />

		<copy file="${updateJarWorkingDir}/packed/site.xml" todir="${repo}" />

		<java
			jar="${basedir}/../org.eclipse.releng.basebuilder/plugins/org.eclipse.equinox.launcher.jar"
			fork="true" timeout="10800000" jvm="${jvm15_home}/bin/java"
			failonerror="true" maxmemory="512m">
			<arg
				line="-application org.eclipse.equinox.p2.publisher.UpdateSitePublisher" />
			<arg line="-metadataRepository file:${repo}" />
			<arg line="-artifactRepository file:${repo}" />
			<arg line="-source ${updateJarWorkingDir}/packed" />
			<arg line="-configs gtk.linux.x86" />
			<arg line="-compress" />
			<arg line="-reusePack200Files" />
			<arg line="-publishArtifacts" />
		</java>

		<copy todir="${repo}/features">
			<fileset dir="${updateJarWorkingDir}/packed/features"
				includes="*.pack.gz" />
		</copy>

		<!--try create composite repository -->
		<p2.composite.artifact.repository.create
			location="file://${compsite.site}" name="${p2.repo.name}" compressed="true"
			failOnExists="false" />
		<p2.composite.metadata.repository.create
			location="file://${compsite.site}" name="${p2.repo.name}" compressed="true"
			failOnExists="false" />

		<!--add childRepo to composite repo -->
		<p2.composite.artifact.repository.add
			location="file://${compsite.site}" child="${buildId}" />
		<p2.composite.metadata.repository.add
			location="file://${compsite.site}" child="${buildId}" />

	</target>

	<target name="generateCategory">

		<property name="updateJarWorkingDir" value="${buildDirectory}/updateJars" />
		<!-- generate site.xml -->
		<property file="${buildDirectory}/finalFeaturesVersions.properties" />
		<copy file="${eclipse.build.configs}/../../extras/site.xml"
			tofile="${updateJarWorkingDir}/packed/site.xml" />
		<!-- replace the feature version in site.xml -->
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.cshelp}"
			token="@FEATURE.BIRT.CSHELP@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.example}"
			token="@FEATURE.BIRT.EXAMPLE@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.doc.isv}"
			token="@FEATURE.BIRT.DOC.ISV@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.source}"
			token="@FEATURE.BIRT.SOURCE@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt}"
			token="@FEATURE.BIRT@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.chart}"
			token="@FEATURE.CHART@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.doc}"
			token="@FEATURE.BIRT.DOC@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.chart.cshelp}"
			token="@FEATURE.CHART.CSHELP@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.chart.doc.isv}"
			token="@FEATURE.CHART.DOC.ISV@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.chart.source}"
			token="@FEATURE.CHART.SOURCE@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.osgi.runtime.sdk}"
			token="@FEATURE.OSGI.RUNTIME.SDK@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.chart.integration.wtp}"
			token="@FEATURE.CHART.WTP@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml"
			value="${org.eclipse.birt.chart.integration.wtp.source}" token="@FEATURE.CHART.WTP.SOURCE@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.integration.wtp}"
			token="@FEATURE.BIRT.WTP@" />
		<replace file="${updateJarWorkingDir}/packed/site.xml" value="${org.eclipse.birt.integration.wtp.source}"
			token="@FEATURE.BIRT.WTP.SOURCE@" />
	</target>

	<target name="GenUpdatesitePackage">

		<zip
			destfile="${postingDirectory}/${buildId}/birt-updatesite-${package.version}.zip">
			<fileset dir="${repo}">
				<include name="features/**" />
				<include name="plugins/**" />
			</fileset>
		</zip>

		<antcall target="renameBirtUpdatesitePackage" />

	</target>

	<target name="renameBirtUpdatesitePackage" unless="skip.rename.package">
		<move
			file="${postingDirectory}/${buildId}/birt-updatesite-${package.version}.zip"
			tofile="${postingDirectory}/${buildId}/birt-updatesite-${package.version}-${build.date}.zip" />
	</target>

	<target name="runBirtTest" unless="skip.unit.test">
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="runBirtTest">
			<property name="runner.dir"
				value="${eclipse.build.configs}/birt.tests/test.scripts" />
		</ant>
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="InformAutomation">
			<property name="runner.dir"
				value="${eclipse.build.configs}/birt.tests/test.scripts" />
		</ant>

		<ant antfile="${eclipse.build.configs}/../helper.xml" target="genTestResultSummary" />
	</target>

	<target name="runBirtPerformance">
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="runBirtPerformance">
			<property name="runner.dir"
				value="${eclipse.build.configs}/birt.tests/test.scripts" />
		</ant>
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="InformPerformance">
			<property name="runner.dir"
				value="${eclipse.build.configs}/birt.tests/test.scripts" />
		</ant>
	</target>

	<target name="prepareSrc" if="prepare.src.flag">

		<antcall target="logger">
			<param name="message" value="Start to sync BIRT source folder" />
		</antcall>

		<delete failonerror="false">
			<fileset dir="${buildDirectory}/source">
				<include name="*/**" />
			</fileset>
		</delete>

		<cvs command="export -d source" cvsRoot="${mapCvsRoot}" dest="${buildDirectory}"
			package="source" tag="${mapVersionTag}" taskname="CVS - source" />

		<antcall target="logger">
			<param name="message" value="Finish to sync BIRT source folder" />
		</antcall>

		<copy todir="${buildDirectory}/plugins" overwrite="true"
			failonerror="false">
			<fileset dir="${buildDirectory}/source">
				<include name="**" />
				<exclude name="nl/**" />
				<exclude name="features/**" />
				<exclude name="*.tests/**" />
				<exclude name="*.test/**" />
				<exclude name="*.tests.*/**" />
				<exclude name="*.testhelper*/**" />
				<exclude name="org.eclipse.birt.build/**" />
				<exclude name="org.eclipse.birt.releng/**" />
				<exclude name="org.eclipse.birt.releng.birtbuilder/**" />
				<exclude name="org.apache.commons.codec/**" />
				<exclude name="org.eclipse.birt.converters/**" />
				<exclude name="tutorials/**" />
			</fileset>
		</copy>

		<!-- copy BIRT NL plugins -->
		<ant antfile="${eclipse.build.configs}/../../extras/prepareSrc.xml"
			target="prepareSrc" />

		<antcall target="logger">
			<param name="message"
				value="Copyied all source plugins to buildDirectory/plugins/" />
		</antcall>

	</target>

	<target name="buildBirtTestFeature" unless="skip.build.testsuite">
		<antcall target="logger">
			<param name="message" value="BIRT test feature build started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.tests" />
		</ant>

		<antcall target="logger">
			<param name="message" value="BIRT test feature build finished" />
		</antcall>

	</target>

	<target name="buildBirtWtpFeature" unless="skip.build.WTP">
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="generate">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="process">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="assemble">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="package">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="postBuild">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>


		<antcall target="signWTPJars" />

		<!-- unpack BIRT wtp integration feature -->

		<mkdir dir="${buildDirectory}/wtptmpsite" />
		<mkdir dir="${buildDirectory}/wtptmpsite/new" />
		<property name="wtptmpsite" value="${buildDirectory}/wtptmpsite" />

		<exec executable="unzip" dir="${buildDirectory}/${buildId}">
			<arg
				line="-o -q birt-wtp-integration-sdk-${package.version}.zip -d ${wtptmpsite}" />
		</exec>

		<unpackUpdateJars site="${wtptmpsite}/eclipse"
			output="${wtptmpsite}/new/eclipse" />

		<copy todir="${wtptmpsite}/new/eclipse" failonerror="false">
			<fileset dir="${baseLocation}/../PackageFiles/template/legal"
				includes="epl-2.0.html,notice.html" />
		</copy>

		<exec executable="zip" dir="${wtptmpsite}/new">
			<arg
				line="-q ${postingDirectory}/${buildId}/birt-wtp-integration-sdk-${package.version}.zip -r eclipse" />
		</exec>

	</target>

	<target name="verifyCompile">
		<!-- verify compile result -->
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="verifyCompile" />

		<antcall target="copy2UploadArea" />

		<antcall target="renameBirtPackage" />

		<antcall target="sendNotification" />

	</target>

	<target name="copy2UploadArea" unless="HQ.BIRT.skip">
		<!--copy all packages to upload area -->
		<antcall target="logger">
			<param name="message" value="start copying to download area" />
		</antcall>
		<copy todir="${test.dir}/../../downloads/${package.version}"
			failonerror="false" overwrite="true">
			<fileset dir="${postingDirectory}/${buildId}">
				<include name="*.zip" />
				<include name="*.txt" />
				<include name="*.gz" />
			</fileset>
			<fileset dir="${buildDirectory}">
				<include name="directory.txt" />
			</fileset>
			<fileset file="monitor.properties" />
		</copy>
		<antcall target="logger">
			<param name="message" value="from dir: ${postingDirectory}/${buildId}" />
		</antcall>
	</target>

	<target name="buildBirtThirdPartyFeature">
		<antcall target="logger">
			<param name="message" value="Third party feature building started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.third.party" />
		</ant>
		<antcall target="logger">
			<param name="message" value="Third party feature building finished" />
		</antcall>
	</target>
	<!-- - - - - - - - - - - - - - - - - - target: buildBirtRCPFeature - - - 
		- - - - - - - - - - - - - - -->
	<target name="buildBirtRCPFeature">
		<antcall target="logger">
			<param name="message" value="Export BIRT RCP product started" />
		</antcall>
		<ant antfile="productBuild.xml" dir="${eclipse.pdebuild.scripts}/productBuild">
			<property name="builder" value="${eclipse.build.configs}/birt.rcp" />
			<property name="product"
				value="${buildDirectory}/plugins/org.eclipse.birt.report.designer.ui.rcp/BIRT.product" />
		</ant>
		<antcall target="logger">
			<param name="message" value="Export BIRT RCP product finished" />
		</antcall>
	</target>

	<target name="fetchBirtWtpFeature">
		<antcall target="logger">
			<param name="message" value="Fetch birt wtp integration feature started" />
		</antcall>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="preBuild">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="fetch">
			<property name="builder" value="${eclipse.build.configs}/birt.wtp" />
		</ant>
		<antcall target="logger">
			<param name="message" value="Fetch birt wtp integration feature finished" />
		</antcall>
	</target>

	<target name="fetchRCP">
		<antcall target="logger">
			<param name="message" value="Fetch birt rcp plugin started" />
		</antcall>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="preBuild">
			<property name="builder" value="${eclipse.build.configs}/birt.designer.rcp" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="fetch">
			<property name="builder" value="${eclipse.build.configs}/birt.designer.rcp" />
		</ant>
		<antcall target="logger">
			<param name="message" value="Fetch birt rcp plugin finished" />
		</antcall>
	</target>

	<target name="BuildChartViewer">
		<antcall target="logger">
			<param name="message" value="Fetch birt chart viewer started" />
		</antcall>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="preBuild">
			<property name="builder" value="${eclipse.build.configs}/birt.chart.viewer" />
		</ant>
		<ant antfile="build.xml" dir="${eclipse.pdebuild.scripts}" target="fetch">
			<property name="builder" value="${eclipse.build.configs}/birt.chart.viewer" />
		</ant>
		<antcall target="logger">
			<param name="message" value="Fetch birt chart viewer finished" />
		</antcall>
	</target>

	<target name="buildBirtNLFeature" unless="skip.build.NL">
		<antcall target="logger">
			<param name="message" value="BIRT nl feature build started" />
		</antcall>
		<property name="NLtmpsite" value="${buildDirectory}/NLtmpsite" />
		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.nl" />
			<property name="fetchTag" value="HEAD" />
			<property name="forceContextQualifier" value="${buildId}" />
			<property name="generateFeatureVersionSuffix" value="false" />
		</ant>
		<antcall target="logger">
			<param name="message" value="BIRT nl feature build finished" />
		</antcall>
		<antcall target="logger">
			<param name="message" value="BIRT RCP nl feature build started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.rcp.nl" />
			<property name="fetchTag" value="HEAD" />
			<property name="forceContextQualifier" value="${buildId}" />
			<property name="generateFeatureVersionSuffix" value="false" />
		</ant>
		<antcall target="logger">
			<param name="message" value="BIRT RCP feature build finished" />
		</antcall>
		<antcall target="logger">
			<param name="message" value="DTP nl feature build started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.dtp.nl" />
			<property name="fetchTag" value="HEAD" />
			<property name="forceContextQualifier" value="${buildId}" />
			<property name="generateFeatureVersionSuffix" value="false" />
		</ant>

		<antcall target="logger">
			<param name="message" value="DTP nl feature build finished" />
		</antcall>
		<antcall target="logger">
			<param name="message" value="DTP sybase nl feature build started" />
		</antcall>

		<ant antfile="build.xml" dir="${basedir}">
			<property name="component" value="${eclipse.build.configs}/birt.dtp.sybase.nl" />
			<property name="fetchTag" value="HEAD" />
			<property name="forceContextQualifier" value="${buildId}" />
			<property name="generateFeatureVersionSuffix" value="false" />
		</ant>
		<antcall target="logger">
			<param name="message" value="DTP sybase nl feature build finished" />
		</antcall>

		<mkdir dir="${NLtmpsite}" />
		<mkdir dir="${NLtmpsite}/new" />
		<unzip src="${buildDirectory}/${buildId}/birt-nl-${package.version}.zip"
			dest="${NLtmpsite}" />
		<unzip
			src="${buildDirectory}/${buildId}/birt-dtp-nl-${package.version}.zip"
			dest="${NLtmpsite}" />
		<unzip
			src="${buildDirectory}/${buildId}/birt-rcp-nl-${package.version}.zip"
			dest="${NLtmpsite}" />
		<unzip
			src="${buildDirectory}/${buildId}/birt-dtp-sybase-nl-${package.version}.zip"
			dest="${NLtmpsite}" />

		<unpackUpdateJars site="${NLtmpsite}/eclipse" output="${NLtmpsite}/new/eclipse" />
		<zip destfile="${buildDirectory}/${buildId}/birt-all-nl-${package.version}.zip">
			<fileset dir="${NLtmpsite}/new/eclipse" includes="features/**" />
			<fileset dir="${NLtmpsite}/new/eclipse" includes="plugins/**" />
		</zip>
		<ant antfile="${eclipse.build.configs}/../helper.xml" target="buildLanguagePack" />
	</target>


	<target name="unpackUpdateJarsForPackaging">

		<property name="tmpsite" value="${buildDirectory}/tmpsite" />

		<mkdir dir="${tmpsite}/new/eclipse/features" />
		<mkdir dir="${tmpsite}/new/eclipse/plugins" />

		<!-- Sign packed features and plugins. Download signed features and plugins 
			back to replace ${tmpsite}/eclipse. Back signed features and plugins as update 
			site jars -->
		<unzip src="${buildDirectory}/birt-all-${package.version}.bak.zip"
			dest="${tmpsite}" />

		<antcall target="signBIRTJars" />

		<copy todir="${postingDirectory}/${buildId}" failonerror="false">
			<fileset dir="${buildDirectory}">
				<include name="birt-all-${package.version}.bak.zip" />
			</fileset>
		</copy>

		<!-- unpack features and plugins -->
		<unpackUpdateJars site="${tmpsite}/eclipse" output="${tmpsite}/new/eclipse" />

		<exec executable="zip" dir="${tmpsite}/new">
			<arg
				line="-q ${buildDirectory}/birt-all-${package.version}.zip -r eclipse" />
		</exec>

		<copy todir="${buildDirectory}/${buildId}">
			<fileset dir="${tmpsite}/new">
				<include name="eclipse/**" />
			</fileset>
		</copy>

	</target>

	<target name="signWTPJars" if="sign">

		<antcall target="SignJars">
			<param name="source.dir" value="${buildDirectory}/${buildId}" />
			<param name="source.name" value="birt-wtp-integration-sdk-${package.version}.zip" />
			<param name="target.dir" value="${buildDirectory}/${buildId}" />
			<param name="target.name"
				value="birt-wtp-integration-sdk-${package.version}.sign.zip" />
		</antcall>

		<move
			file="${buildDirectory}/${buildId}/birt-wtp-integration-sdk-${package.version}.sign.zip"
			tofile="${buildDirectory}/${buildId}/birt-wtp-integration-sdk-${package.version}.zip"
			overwrite="true" />

	</target>

	<target name="signBIRTJars" if="sign">

		<antcall target="SignJars">
			<param name="source.dir" value="${buildDirectory}" />
			<param name="source.name" value="birt-all-${package.version}.bak.zip" />
			<param name="target.dir" value="${buildDirectory}" />
			<param name="target.name" value="birt-all-${package.version}.sign.zip" />
		</antcall>

		<move file="${buildDirectory}/birt-all-${package.version}.sign.zip"
			tofile="${buildDirectory}/birt-all-${package.version}.bak.zip"
			overwrite="true" />

		<delete dir="${tmpsite}" failonerror="false" />
		<unzip src="${buildDirectory}/birt-all-${package.version}.bak.zip"
			dest="${tmpsite}" />

	</target>

	<target name="SignJars">
		<antcall target="logger">
			<param name="message"
				value="Upload ${source.name} to build.eclipse.org started" />
		</antcall>
		<scp todir="${username.sign}:${password.sign}@${hostname.sign}:${home.dir}"
			trust="true">
			<fileset dir="${source.dir}" includes="${source.name}" />
		</scp>

		<antcall target="logger">
			<param name="message" value="Upload ended. Wait for 30 mins for jarsigning..." />
		</antcall>
		<sshexec host="${hostname.sign}" username="${username.sign}"
			password="${password.sign}" trust="true"
			command="cd ${sign.dir};cp ${home.dir}/${source.name} ./;sign  ${source.name} nomail;" />
		<sleep minutes="30" />

		<antcall target="logger">
			<param name="message" value="Download signed jars started" />
		</antcall>

		<scp localtofile="${target.dir}/${target.name}" trust="true"
			file="${username.sign}:${password.sign}@${hostname.sign}:${sign.dir}/${source.name}" />

		<antcall target="logger">
			<param name="message"
				value="Download signed jars ended. Compare signed jars with unsigned" />
		</antcall>

		<condition property="CompareSignPack" value="true">
			<filesmatch file1="${source.dir}/${source.name}" file2="${target.dir}/${target.name}" />
		</condition>

		<antcall target="DownloadSignedPackAgain">
			<param name="source.name" value="${source.name}" />
			<param name="target.name" value="${target.name}" />
			<param name="target.dir" value="${target.dir}" />
		</antcall>

		<antcall target="logger">
			<param name="message" value="Packaging starts" />
		</antcall>

		<condition property="CompareSignPack" value="true">
			<filesmatch file1="${source.dir}/${source.name}" file2="${target.dir}/${target.name}" />
		</condition>

		<ant antfile="${eclipse.build.configs}/../helper.xml" target="InformNoSign" />

	</target>

	<target name="DownloadSignedPackAgain" if="CompareSignPack">
		<antcall target="logger">
			<param name="message" value="Compare fails. Wait 10 mins to download again..." />
		</antcall>

		<sleep minutes="10" />

		<antcall target="logger">
			<param name="message" value="Download signed package started" />
		</antcall>

		<scp localtofile="${target.dir}/${target.name}" trust="true"
			file="${username.sign}:${password.sign}@${hostname.sign}:${sign.dir}/${source.name}" />

		<antcall target="logger">
			<param name="message" value="Download signed package ended" />
		</antcall>

	</target>

	<target name="integrateBirtFeatures" />


	<target name="package">
		<ant antfile="package.xml" dir="${eclipse.pdebuild.scripts}">
			<property name="packagingInfo" value="${packagingInfo}" />
			<property name="assemblyTempDir" value="${packagingInfo}/jartmp" />
		</ant>
	</target>

	<target name="buildBirtWebViewer">
		<antcall target="logger">
			<param name="message" value="Build BIRT web viewer started" />
		</antcall>

		<ant antfile="${eclipse.build.configs}/../helper.xml" target="BuildWebViewer" />

		<antcall target="logger">
			<param name="message" value="Build BIRT web viewer finished" />
		</antcall>
	</target>

	<target name="generateJavaCrossReference" if="genJavaDoc">
		<ant
			antfile="${eclipse.build.configs}/../../extras/CrossReferenceGenerator.xml"
			target="generateJavaCrossReference">
		</ant>
	</target>

	<target name="generateDocumentCheck" if="genJavaDoc">
		<ant
			antfile="${eclipse.build.configs}/../../extras/CrossReferenceGenerator.xml"
			target="generateDocumentCheck">
		</ant>
	</target>

	<target name="generateJavaDoc" if="genJavaDoc">
		<ant antfile="${eclipse.build.configs}/../../extras/antJavadoc.xml" />
	</target>

	<target name="logger">
		<tstamp prefix="timestamp">
			<format property="birt" pattern="yyyy-MM-dd HH:mm:ss" locale="en" />
		</tstamp>
		<echo message="[${timestamp.birt}] ${message}${line.separator}"
			file="${basedir}/monitor.log" append="true" />
	</target>
</project>
